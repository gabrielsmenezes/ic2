e2d2c4d68507f7deaf50293043f8b3a880f2f644;2011-04-19 10:52:15 -0400;first commit
56f64e05e49eab24453af4e9e582f3049d919386;2011-04-19 10:58:40 -0400;adding source code
b99cf211fac963ba649fc4af690248d8d3a0df1d;2011-04-19 11:32:48 -0400;Adding copyright notice. Apache 2.0 was selected
d161b12dfbb29642579453f77a55cb198d11daa6;2011-04-20 20:17:05 -0400;Adding median filter algs before I mess them up some more
bac1090d530013d83db103f86b6aef4881db49f2;2011-04-23 13:16:42 -0400;- added median filter - cleaned up FAST corner - cleaned up corner detectors in general - added evaluation module - added abstracted API
956bcdba04c04d70edefc1d17271b379b62800bd;2011-04-23 23:05:59 -0400;- Added bilinear interpolation - Added skeleton for KLT tracker
3aec583f9ed96bc06bb75d125593a260ef85dbbf;2011-04-25 11:58:24 -0400;- working asymmetric KLT tracker with unit tests - bilinear image interpolation - various other small changes
06f5e98f12189104b5ef7e60cdbd1d1d48edb76b;2011-04-27 16:49:06 -0400;- Adding sparse convolve - Adding renormalized convolve for image edges - Added I16 to I16 divide convolve
7cc298585be7e6353b62429a2ff272efa57a6584;2011-04-28 14:14:53 -0400;- convolve normalized now passes all the unit tests
87df4826706c81fda6f8073e5bbe95222225faf1;2011-05-02 20:08:52 -0400;- fixed a bug in unrolled convolve vertical - Added image pyramids - slightly generalized Kernel1D_*
f3c38a436d2fb7c6efc8a243a8ec5211032beaa3;2011-05-07 17:37:20 -0400;- Added optimized morphological operations for binary images - Finished (but not tested) Pyramidal KLT tracker - Moved classes from visual to io package - Added more visualization functions   - Applicaiton for viewing detected features - Tweaked randomize image for ImageInt8 - Added select N best for corner extractor - Changed behavior of corner extractors so that they will avoid detecting the same features twice
e73eb2e24e4e733b34c05b26b3840da2d32cef38;2011-05-08 21:13:44 -0400;- Added signed flag to image base  * Added lots of checks for signed/unsigned through out the code  * Cursed the Java language for making things complicated for no good reason.  * Added class and unit test for ImageInteger - Combined generalized corner detection for image and gradient based methods - Added some visualization code - Fixed a bug in FastCorner12_* - Did some work on creating accurcy test for corner detectors
5ad6de2a1612ad5d8f13b5accabc2c55f78784b8;2011-05-08 21:14:23 -0400;- Added signed flag to image base  * Added lots of checks for signed/unsigned through out the code  * Cursed the Java language for making things complicated for no good reason.  * Added class and unit test for ImageInteger - Combined generalized corner detection for image and gradient based methods - Added some visualization code - Fixed a bug in FastCorner12_* - Did some work on creating accurcy test for corner detectors
77cf510c06e87d3fcb7c1e81baabec0a071a26b3;2011-05-09 15:51:03 -0400;- Added sign/unsigned image classes to enable stronger typing  * updated a bunch of code to accomodate this change - More unit tests for extract corners - Cleaned of abstracted image derivative interface - Added a tool for showing image derivative of a video sequence
7404b9e78d16d9b856a01cd4e258b0b2a35d01be;2011-05-09 23:16:04 -0400;- Added base classes to SInt16/UInt16 and SInt8/UInt8 images - Improved generic unit testing for integer images - Unit test for candidate non-max corner extractor - Added fast conversion from BufferedImage into ImageFloat32 - Floating point based corner detector for video image app added
5dd1788836b4a293d11eb73652436bad3ccefedd;2011-05-10 22:26:23 -0400;- Added filter for computing the image hessian - Implemented the real KitRos corner detector - Updated just about everything related to corner detection to incorporate the hessian as an input - Corner accuracy benchmark seems to be working well
3765269037399c0fbe930805dbb52addb4466174;2011-05-11 19:55:02 -0400;- Refactored package names for convlution   * Changed reference from image edge to image border for consistency - Added image wrappers for handling image borders - Added convolution for image borders by extending the closest pixel - Median corner detector - Extended naive median filter to include image border - Added various uint tests
05f2fe69372148b5ee0e10e1f783c19e617dca28;2011-05-12 22:30:37 -0400;- All provided image derivative filters now can compute the derivative along the image's edge - Improved unit testing for image derivatives - Added sobel based hessian - Added factory for abstracted convolutions - Added generalized image filter interface - Added/updated several unit test - Restructed benchmarks for image derivatives - Added benchmark for extended convolutions
a6aaf09f81a6fe5b6b86bb7e79411c42bf40e48c;2011-05-13 19:14:36 -0400;- Made another attempt to use a common name for some image utilties - improved hessian calculations by adding code which can do it from the image's gradient - simplified abstracted derivative code using reflections - Added gradient for ImageSInt16 - Fixed bugs related to image pyramid - Impled a test in KLT tracker
0653a4217fd50061d85783063d8c2ec65dc24d0e;2011-05-13 19:16:17 -0400;Adding image data files to repository
b1c25fa5cec301b63415b9e54acf11d150b7e57b;2011-05-14 21:21:02 -0400;- renamed image derivative related classes - Added exclude list to corner finders   * Before if the output list had stuff in it that stuff would be excluded - Fixed several bugs related to KLT tracking   * KLT tracker now works, but needs to be refined.   * Added KLT manager
3488837e6399c9b251b76cda7ad14d7372c103c7;2011-05-15 22:28:11 -0400;- Generalized output image type for convolution related functions - Working on skip downsample convolution
d48f2ed6e4ea4a52415a6d22ee48eeed78d07c50;2011-05-16 07:35:45 -0400;- Finished unrolled convolve down code
47a517dffc4158f57034aa0a5a9fa9adcfbc7f49;2011-05-16 15:36:05 -0400;- changed pyramid to use new down convolution code - partially implemented blur - fixed a bad bug in a unit test where it wasn't actually testing anything
e1f211c6e6f0fd237483a3334aa181bdba3e9373;2011-05-18 20:24:38 -0400;- Finished down convolve no border and down convolve normalized - Changed TestConvolveImageStandard to being reflection based - Updated convolve pyramid to use new normalizing convolution
172eedcfb6614a327f04938d7887e1cb1cdce149;2011-05-18 20:32:44 -0400;adding a file before merging
2580d8e0ecae8e33c97df6b7a61de5a78fff3631;2011-05-18 20:35:28 -0400;Resloved conflict
5475e5faf5d455952e267a95fc5551ddab8f9e59;2011-05-20 18:16:05 -0400;- BilinearRectangle F32  interpolate now handles image edges - KLT related features now use ImageFloat32 instead of raw arrays - More unit tests
a5724661d1c06d96a44cd1b43b80ee3170980656;2011-05-23 13:17:57 -0400;- Created code generates and unit tests for PixelMath and ImageTestingOps  * bunch of related refactoring - Added more generic code to ImageBase
d650b999b703994f333f31503642f2f79792a39a;2011-05-23 21:05:54 -0400;- Generalized interpolation code to support multiple image types. - SingleBandImage now support ImageBorder type. - Simplified interpolation interfaces.  It now assumes that image borders are handled.
ea63dca0f2b3d7c4dd1969079440ef42e1488360;2011-05-26 20:21:48 -0400;- improved ConvolutionPyramid generalization - Added generic convolve down routines - more unit tests - refactoring to improve naming consistency - Added U8 video klt tracker
82bf016b7a913cfd1fd909e88b2cf99fe88469e6;2011-05-26 20:22:24 -0400;- added image pyramid visualization
4c42414b30cde1e3fbfc89408a94f3f913eff741;2011-06-01 09:04:42 -0400;- corner intensity algorithms now use a lazy initialization scheme for image size to make it easier to use - Added two ways to compute a pyramid derived from another pyramid - Added a factory for images allowing more generic code to be written - simplified code where possible
c1f152f27b32667c68be072bc160034465bffc8b;2011-06-01 10:50:28 -0400;- added comments - unit test for GenericPkltFeatSelector
f0e03ef203dafa1b89b7eb7e521a026240cfb126;2011-06-01 13:24:26 -0400;Refactoring package names.  Phase 1
e2598e885be2b91843758922a720c9adf0bd1656;2011-06-01 19:01:09 -0400;more refactoring
95345d005e75cbb7a947d6625bd37557cf994d7d;2011-06-03 08:27:19 -0400;- cleaned up formatting - Added comments to KLT code   * Added default constructors (configuration and managers) that remove some of the drugery - Added wrapper KLT wrapper for PointSequentialTracker - Removed process function from PointSequentialTracker - Improved image abstraction in:   * FactoryCornerIntensity   * KernelFactory   * FactoryDerivative
e9393538813890a56ab4752697586a65dba78faa;2011-06-07 15:46:23 -0400;- Added working Image Stabilization - ImageDistort for rending images using an 2D transform
adb1baa416b3f71c96d9126c616ed6c0fc25b0de;2011-06-07 17:50:00 -0400;- pushed geometry related stuff into its own package
08a0a0455b43a2536f3708233201195dd07d9643;2011-06-11 17:17:15 -0400;- Automated BufferedImage raster tests - Added stabilization evaluation metrics - Added new affine distnace metrics - started adding perspective geometry functions - about to change from 32 to 64 bit points in AssociatedFeatures
a0f55eeb88f9b69e15634c45e7b1989a87b53d90;2011-06-11 17:33:19 -0400;- change AssociatedPair from 32 to 64 bit points.  * no loss in performance measured, but easier to deal with
5a3f7db22bfb90af3f9a9f9c3d310f6176dc6289;2011-06-11 22:22:01 -0400;- more unit tests - updating for refactored geometry names -
8a58f4bacc5269cc3464e537d9cf832e825612c9;2011-06-18 21:45:43 -0400;- adding wavelets - minor tweeks to convolve - improvements to ImageBorder  * Added reflect - Added PixelDistortMap
e24a6f88684bb84a768bb95d9a88930007c1f1fc;2011-06-20 13:48:09 -0400;- fixed and improved wavelet transform - improved image border related classes   * added support for 1D array borders -
ccb00ffc59a23fbbb682de80e33723c22637aeca;2011-06-21 11:59:23 -0400;- Wavelet code is working and passing all the tests   * improved unit tests - Added border only wavelet transform
46156167da37979a98b41e0cda03affbfcc054fc;2011-06-22 10:38:59 -0400;- Found a bug in wavelet transform.  Image borders were not being extended in the transformed image - Passes all tests and a basic denoise algorithm is working   * Started to add more denoising algorithms - Rename WaveletDesc to WaveletCoefficient - Improved wavelet unit tests to make them more robust
1d7f983cd415f1e57687d853240d07e23b585969;2011-06-22 18:40:36 -0400;- Working version of VisuShrink denoising - Code generator for ImplWaveletTransformInner - Minor refactoring to make function names/parameters more consistent - Added diffAbs to PixelMath
2024049228071bee82e8eeb0e1686ddbb51e7441;2011-06-28 08:17:38 -0400;- Changed wavelet description in preparation for handling more types of inverses
3e0a98e31e1c8c7bb9323acab71889cf27f42b97;2011-06-28 19:47:17 -0400;- Coefficients of inverse wavelets are correctly computed for reflected signals  * F32 and I32
5f90955e819a5843e7e7fbfedf533e31b1e83c5d;2011-06-30 14:08:58 -0400;- Inner and border wavelet transform work for floating point and integer images   * except for borders which reflect
697089200914a003494329ba94eaacfe125f369b;2011-07-05 10:56:07 -0400;- more rigerous wavelet tests.  about to change approach for handling the border
ed5dedd54b5962908705300ac94826712d89682a;2011-07-05 16:48:45 -0400;- Finally all the basic wavelet stuff is working for different border types and float/int images.
cd4eedcde2dbe50c18a5f82efeaf12bb1bed2e48;2011-07-05 22:03:24 -0400;- found another wavelet bug.  going to change how integer wavelets are handled
a07c577c92934fc4b98d28aea6906b1e5fad72e2;2011-07-05 22:20:40 -0400;- previous commit added autocode for WaveletImageOps - Fixed integer wavelet transform by creating a function which rounds towards the closest integer for both positive and negative numbers.  * default behavior is to round towards zero
d9ae96418ec51c9c3a5684044bb0e5e40e877ee9;2011-07-06 18:53:47 -0400;- added abstracted wavelet interface - Added comments to code - Autocode for converting images - Added integer images to wavelet related benchmarks
c6c0117ca468e1f9f185621c63204be1d37888c1;2011-07-07 12:18:55 -0400;- Improved median filters  * Conforms to standard procedure at low level to OO at high level  * Added quick sort edge only median filter  * U8 images now have their edges processed - Refactored QuickSort to QuickSortArray
9f25cbdfb5bade512b4547329932f3eb8bf926ca;2011-07-07 13:54:59 -0400;- trivial changes, committing to allow a pull
f5f56bec620ffd6f40e9d7a13d6393db9b3d44a5;2011-07-07 14:09:53 -0400;Merge branch 'master' of github.com:lessthanoptimal/Good-Enough-Computer-Vision
1a405040f0194de2a74bb14a41b9ca70ecda4542;2011-07-10 16:32:58 -0400;- Added and fixed different algorithms for image denoising using wavelets
7856cbe8b7d584e3a5ab51b619aa227fcb99ec90;2011-07-11 09:08:20 -0400;- Finished implementing unimplemented functions in BlurImageOps - Added ConvolveMean and related classes and functions - Added border conditions to ConvolveBox   * Moved image specific implementations into a single class   * Generator now uses TypeImage - Improved unit tests - Generalized ConvolveExtended into ConvolveWithBorder   * Can handle other border types besides just extend - Updated GenericConvolve to handle these changes
7ff4a5d6fd19fc735edfd360cd99cad3edde6b9a;2011-07-11 21:50:56 -0400;- Found a bug in wavelet transform.  Image borders were not being extended in the transformed image - Passes all tests and a basic denoise algorithm is working   * Started to add more denoising algorithms - Rename WaveletDesc to WaveletCoefficient - Improved wavelet unit tests to make them more robust
556443ff3937dc54cf36b6820ed992ff8d719cd0;2011-07-11 22:37:09 -0400;- The previous commit was a mistake - Added ImageTypeInfo to provide more detailed information in the type of an abstracted image - refactoring and cleaning up of wavelet denoise   * decided not to implement TAWS because there is little evidence it will be better than SURE - Un-did some of the changes in the previous commit.   * ImageTypeInfo is not passed in instead of the image's Class
9f349fc7b2b494d1ef0c0e207914827a31b6c7fa;2011-07-11 22:38:34 -0400;- The previous commit was a mistake - Added ImageTypeInfo to provide more detailed information in the type of an abstracted image - refactoring and cleaning up of wavelet denoise   * decided not to implement TAWS because there is little evidence it will be better than SURE - Un-did some of the changes in the previous commit.   * ImageTypeInfo is not passed in instead of the image's Class
5a09433c440fc8a608a8cfd16a12a408405f16a6;2011-07-12 18:50:26 -0400;- Created denoising benchmark applications   * accuracy   * runtime performance - Visualize denoising application - Unit tests for wavelet denoising - refactoring   * created transform package and moved pyramid, wavelet, and the future integratl image into it
aa704efaa7ebc4bcce68f996dee35a0540949714;2011-07-12 18:50:54 -0400;- Created denoising benchmark applications   * accuracy   * runtime performance - Visualize denoising application - Unit tests for wavelet denoising - refactoring   * created transform package and moved pyramid, wavelet, and the future integratl image into it
1e774a0480a044ef4b3bb5d37ce0ea88048933b5;2011-07-15 05:19:36 -0400;- start of adding edge detectors - added binary blob detector
bc69b1e56d0b2cf9cdd417a20265c2d12deedb25;2011-07-18 09:53:25 -0400;- Fixed bugs and improved performance for labeling blobs in binary images
9983fcda56d1adf7bf36772a440b7366004d9d54;2011-07-18 17:09:09 -0400;- Fixed Gaussian derivative calculation in abstract - Added image integral - added an application for displaying the derivative of an image - added panels for displaying binary and labeled binary images
305bb2cf29bcd66b835e17bfe9a6b42b2321736f;2011-07-20 10:28:46 -0400;- Can change border type for image derivatives now - Added scale space image transform - Added unit tests for image derivatives in abst package - Added GecvDefaults to specify common defaults
efb01d683a398cd1f6efee6c210257b67f3acca1;2011-07-21 23:10:49 -0400;- Added initial sketch of CornerLaplaceScaleSpace - Added a sparse convolve with border - Added unit tests - Created ImageFunctionSparse for computing the output of an image based   function sparsely in abst - Created a GUI panel for displaying a list of images  * Added a visualization applicaiton for scale-space
f242a9dd2c45cfea2a2a8356f9c80fb60d63dd3b;2011-07-22 23:39:21 -0400;- Added scale point feature display panel - Added/improved factories to make it easier to create stuff - Finished CornerLaplaceScaleSpace - Cleaned up some comments/variable names
aee612bb4b643fe4b5b2f9bca9dc1b3011e475e4;2011-07-22 23:42:13 -0400;- Application for visualing Corner-Laplace detection - Added new test images
45e31146879ff9506d84775509c6f41ff6195248;2011-07-23 23:10:06 -0400;- Added class for rendering binary and labeled images - Added hystersis labeling    * and other related functions - Label now uses a growable data structure so its size before hand does not need to be known. - Improved some evaluation apps
16e837f4892350cb598b1d9eaceacadb4e6bbdba;2011-07-24 23:08:05 -0400;- Started creating interest point detection benchmarks - Added FactoryCornerDetector - Added FactoryInterestPoint - Found a bug in label binary image   * Created unit test which triggers the bug
e0bc787bec3b833789beab6ddf23ac3964977b9f;2011-07-26 09:25:32 -0400;- Added benchmark applications - Added first attempt at bicubic interpolation   * Continuous discrete convolution kernels - Added the beginnings of Laplacian feature detectors
50895b12d1410a8e844593b6cee5e0c1bd72bfe2;2011-07-26 20:42:47 -0400;- Finished adding Bicubic interpolation - Cleaned up list display classes in GUI
13f22cfc791cdb61c1bf07539c3ff686dbfeec1f;2011-07-26 20:48:36 -0400;adding sunflower test image
6922763df6528c7063d0ce81de79ccdfe29cf184;2011-07-26 20:49:17 -0400;Merge branch 'master' of github.com:lessthanoptimal/Good-Enough-Computer-Vision
afe98a115b6c968023bc6ae40babfe0cc1439da5;2011-07-27 09:31:53 -0400;- Started process of cleaning up corner/blob/interest point naming - Changed some corner detectors from type specific classes to static functions - Cleaned up corner accuracy benchmark -- various other small changes
860874329ac8770f68c7d3c5a174b40d36bc4189;2011-07-27 20:14:56 -0400;- Fixed binary labeling bugs
274fc30a87ce0258ca2e2f48972bb16a364fb7ef;2011-07-29 10:08:32 -0400;- Refactored Gaussian kernel factory   * Renamed KernelFactory to FactoryKernel for sake of consistency - Increased the size of the Gaussian derivative kernel when it is computed with the gaussian kernel - Added the beginnings of a SteerableFilter class - Added code to compute second order derivates from an intengral image   * for SURF - Added visualization application for ImagePyramid - Finished creating HessianBlobIntensity
25df1af0f8334987d1e5f900e5e7da6c7456182b;2011-07-30 11:19:17 -0400;- Reworking Image Pyramids  * There are two types now.  One is restricted to integer scaling factors and the other allows arbitrary scales  * Internal scales are now declared lazily, simplifying usage  * Started adding updates for the second type - Started adding operations for rescaling an image
1e03eee821c2f0f06b55a90bebce4978569282a0;2011-07-30 16:22:32 -0400;- Created distort package and moved relevant classes there - Cleared up names of ImagePyramids   * Created two ways to visualize a pyramid - Updated a bunch of stuff and added unit tests
45d96bdd77e8a7ff12f374a2bc3c01fee63c6294;2011-08-01 19:12:23 -0400;- Changed behavior of ImagePyramid so that scale is not relative to previous level but relative to first level   * Done for consistency with scale space   * Tried to find all instances through out the code that this change affected it.  Unit tests are good.
db1807921cc82d6388da28e38a9e6f5162c34aba;2011-08-02 07:07:50 -0400;- Broke out derivative computation from NoCacheScaleSpace   * AnyimageDerivative now exists - No longer perform a Gaussian derivative inside of NoCacheScaleSpace - Added new unit tests
44d7d2e5c4ff052668b4fe699873e0e723334998;2011-08-04 00:41:51 -0400;- Adjusted some algorithms so that they can handle changes in the input image size - Various other minor changes - Refactored a fuction from getCorners() to getFeatures() - Added and tweaked scale space feature detectors
90d73fe9e28109320c075c27ffda493e1d6946aa;2011-08-04 20:07:56 -0400;- Finished scale-space unit tests - Adjusted feature intensity for pyramids to take in account the derivative's value in scale-space
5b62f5046c34b219899bfa34e3d3088587cbc861;2011-08-04 21:29:00 -0400;adding new test image
c64788a25bd7123ffb467505b50c8c356cd80a93;2011-08-05 21:49:10 -0400;- Added to edge features:   * angle to discrete orientation   * edge hystersis - Added visualization for all of the above - Added compare image border for unit testing
7c64699594f737bf3700fe87bf70cc8248e9551d;2011-08-07 22:50:11 -0400;- More code for getting SURF detection working - Added convolution kernels for integral images - Added display for SURF detected features and scale-space
cf44154ddef00ff4a2445fa32fdb4042d0890bbe;2011-08-09 00:19:55 -0400;- SURF detector renamed to fast-hessian   * commented - Unit tests for fast hessian feature intensity   * optimized (inner + border)   * Added runtime benchmark - Removed corner from several non-max class to indicate that they are for generic features -
4b11ada7ef8653f3eddad7bc25479638697593a0;2011-08-09 19:59:37 -0400;- Auto code generator for many integral image related operations - Generalized feature extraction more - Fixed a bug with normalized kernel convolution - Added more algorithms to interest point related benchmarks   * added a speed profile
721008be622941e712c97252b53c3c873ec1fc20;2011-08-09 20:31:59 -0400;- Added unit test for FastHessianFeatureDetector
46f5b588eb667170ec35de83b7257d97c3748cdd;2011-08-10 09:03:53 -0400;Refactored packages
0ae2b8879bff63cfbf79985d524682b45e00ff28;2011-08-10 23:26:58 -0400;- Cleaned up convolution kernel API - Added a display for Gaussian kernels
407f8621a0bca5cbf0791bd05c51c8dfba52d0ce;2011-08-10 23:31:16 -0400;- Cleaned up convolution kernel API - Added a display for Gaussian kernels
12441880fd2c432c26abf562a61c682251974be3;2011-08-12 23:04:27 -0400;- Re-worked distort image ops  * Uses more common classes  * Added rotate image - Moved PixelAffineTransform from geometric vision to IP - Added working steerable gaussian  * Skimped on unit tests  * Visualization works - Cleaned up Gaussian kernel factory  * Adjusted heuristic for kernel derivatives - Changed functions which used Gaussian derivatives to make sure the blur function and derivative use the same paramters - Tweaked colors of image intensity visualization - Fixed some GUI bugs and improved some GUI panels
5a8befa4dbc4b6eb63414297d25449b63d298eee;2011-08-13 08:41:24 -0400;- New unit tests - Minor refactoring
a92f922c387c9116d3900c8f013b57d6632be1f3;2011-08-14 19:29:03 -0400;- Added support for interlation and distort for ImageSInt32 - Added unit tests for kernel and steered kernels - Added data type information to Kernel
3412dd094157731669b98d2a0a2db667272a79e4;2011-08-15 22:53:55 -0400;- Started work in getting seperable steerable filters working.  Works for kernels with even symmetry - Started adding region description algorithm   * compute the orientation of a region
5bab3b090158b322b4baab0fcb862b747f04dcd4;2011-08-17 06:48:08 -0400;- Added region orientation estimation algorithm - Refactoring - New image feature rending tool - Way to describe an image feature using steerable Gaussian derivatives
5336e7b9fb671cb927b5f62dc20b2650433b4c69;2011-08-17 17:38:42 -0400;- Fixed a bug in SteerableKernel_F32 - Added more unit tests - Added orientation algorithms   * more type specific histogram   * average based
0f25631e0288e27c6de29f9d3be9a9dbd8791a7e;2011-08-18 18:41:29 -0400;- Reworked feature stability benchmarks - Added more images to GrayImageOps - Feature detection algorithms can now work with changes to input image size - Fixed bugs - Added unit tests for FactorySteerable in which separable kernel to fails
414f110bb83b7429ba1dec60cf33e05c7fc76376;2011-08-18 22:06:37 -0400;- Reworked wavelet evaluation app - Added generalized wavelet factory
dd4d4a30464a08a8648b52237ee0f59d4546ad54;2011-08-19 16:40:53 -0400;- working stability benchmarks for feature detection - Refactored feature packages - unit tests
2b91dee0e6c1854c2ce200868c39f008551b1d2f;2011-08-19 19:40:09 -0400;- Refactoring in Feature package - Added visualization for scale space pyramid
fda576521b29a00434de52fa0bd0885991cbc53f;2011-08-20 10:24:41 -0400;- changed feature package to new directory format   * factories are in their own subpackage   * generates are in their own source tree - Fixed a design "bug" in scale space pyramid   * Created SubsamplePyramid
a413a32b0b924f55c1e6b9fc508ca655e388a761;2011-08-20 10:25:15 -0400;- changed feature package to new directory format   * factories are in their own subpackage   * generates are in their own source tree - Fixed a design "bug" in scale space pyramid   * Created SubsamplePyramid
6ba056381608d47480704b71f96a3294991beb56;2011-08-20 10:42:08 -0400;Changed Image Processing package to new format
5d627d573352f5268a299f6e564fc43b366130b3;2011-08-21 00:35:03 -0400;- Added orientation stability benchmarks - Orientation algorithms now always use gaussian weights - more refactoring
3b4993c566cb7a81063e59e503db365e7ae45b60;2011-08-22 17:58:36 -0400;- Reworked ImagePyramids  * Update and the pyramid data structure are now two separate entities  * Added strong typing to UpdatePyramid  * Updated everything which referenced a pyramid  * Created PyramidOps for derivative and filter
a99f19009f25c391dba7f78491acdf23ab5d5b1b;2011-08-23 08:53:21 -0400;- Created FactoryPyramid - Fixed and modified unit tests - Added a new orientation estimating algorithm based on a sliding window
214d7883d0711cc7595109d514dc12f283ff9b5c;2011-08-24 08:12:52 -0400;- Added 64bit  float Kernels for more efficient weighting - Preliminary implementation of SURF descriptor  * related integral image ops - orientation moved into its own package out of describe
7993d6598710c979202ff9ca343cd16b00d95085;2011-08-24 15:12:43 -0400;- Added stability benchmarks for point descriptors. - Fixed a bug in bound rectangle - Added light invariance to Steerable point description
512d9f8f6d373b8889ae4b238411c9a95dd894a9;2011-08-26 06:29:15 -0400;- Runtime benchmark for orientation algorithms - Starting to optimize SURF - Added a print function for IntegralKernels - Tweaked how borders are handled in convolution code   * Added BorderIndex1D_Exception which throws an exception if pixels outside the image are accessed.
33bf0551fd9fd1a021498647095e57448047e974;2011-08-26 15:06:41 -0400;- Optimized SURF descriptor - Added sparse derivative   * Currently only supported by integral image - Added describe runtime benchmark - Other minor tweaks
6327e2b86c7b5f51c327d27a50046255ffc9f895;2011-08-27 22:07:17 -0400;- moved orientation estimation outside of SURF descriptor - Added unit tests - Added array assertEquals() to GecvTesting - minor refactoring
99c09ead24c26712d410dff9040dd87e234cc521;2011-08-29 22:06:37 -0400;- Added visualization for association score  * added new test images - Added association algorithms - Added association score functions - Refactoring
1ae07e11a6a0649323f8cd556845f80ea604f9a8;2011-08-30 14:39:21 -0400;- Added unit tests - Added gradient free orientation estimation algorithm
300b1d567a86b2975b9da739c44164ae19ce44a2;2011-08-30 23:12:49 -0400;- Added runtime benchmarks for association related algorithms - Added factory for creating tuple based assocation - unit tests
64bab97697585b54f0a36742eca4bc19ff09ea49;2011-08-31 14:32:34 -0400;- Added new feature describer  * Gaussian derivative normalized by first derivative for light invariance - Association visualization - Various other tweaks in related areas
31d35b32af5bba3d8cc0e977c0fa994263da787a;2011-09-01 06:01:13 -0400;- added unit tests   * fixed bug in AssociateSurfBasic - Changed metrics in feature stability tests   * Now computes 50% and 90% error statistics
3ddf4e6f61368b1497f699d380dc9792009bf595;2011-09-01 11:17:42 -0400;- Created a SURF based PointSequentialTracker   * cleaned up interfaces and added a factory for those types of trackers - Generalized StabilizeImageSequence code for image type and tracker - Added operations for selecting a good image type for image derivatives and integral image transforms. - Fixed a bug where FactoryKernel was referencing awt.kernel! - Fixed a bug in FactorySparseIntegralFilters - Fixed a bug in FactoryPyramid
7ce63f23f4045b01b8c6b4cb8d39e2fe3debed7c;2011-09-02 09:46:13 -0400;- Application to show interest points in a video - Changed video corner detection to be image type agnostic - Removed the unnecisary image width/hight parameters from KLT pyramid - Added lines to FancyInterestPointRender - GImageDerivativeOps   * added generalized image derivatives to it
27473ff43d340525c2e50868f9ba38883fe87cc7;2011-09-02 14:44:48 -0400;- Changed package gecv to boofcv - Maybe some other minor things.  Who knows any more after that massive refactoring.
06859543b354f714417ca3b9f541d5764779e703;2011-09-02 14:46:44 -0400;- Changed package gecv to boofcv - Maybe some other minor things.  Who knows any more after that massive refactoring.
0faaee5e13e274394e1ebb8444d86664ed1838af;2011-09-02 16:36:34 -0400;- Updated copyright info - Fixed minor refactoring errors
0ee89949fb6f856d2a14be99803716826610b943;2011-09-03 06:32:23 -0400;- Updated JGRL to GeoRegression
671b72afc252b98a19632891c1973bf2942f4e6e;2011-09-07 11:28:10 -0400;- removed traces of gecv - fixed bug in quickLabelBlobs* where output image was not being overwritten - Added generalized functions/classes - Added getImageType() to BlurStorageFilter - Added fully canny edge detector - Added abstracted contour detector - Added discretize gradient orientation to 8 angles and related functions
8c8cf987a6d2e4d884c0cb5b386b3981687da9f7;2011-09-09 07:38:54 -0400;- minor changes - added a developmental feature description
62ceed35819d729fe263be1a6c904fe6ffeae0ab;2011-09-11 08:09:21 -0400;- added new evaluation images - Tweaked feature stability metric - Made some evaluation apps callable from other apps
4c02778717547662aae5f98a28fcce2dc6611a03;2011-09-11 19:18:38 -0400;- Changes to feature benchmarks   * Association based metric for describe - Started to change how generic feature descriptions are handled
f67bae0c72e61ca827296b031793dcf3351388c4;2011-09-12 08:31:23 -0400;- cleaned up feature distort benchmark - Provide true orientation info to feature describe
486f24dc53673c5984f1334c22c6072cdb192ce9;2011-09-13 14:52:49 -0400;- Adding more formal tests to image feature - Renamed packages to include BoofCV
0038955edd4ea60adaf1653b535af2c017451d6d;2011-09-13 22:23:51 -0400;Reorganizing directory structure
0508c955a5326c9a34a2ea729053beccc213af8d;2011-09-13 22:52:41 -0400;- Reorganized evaluation - moved xuggler test over
a87cd12c82a9bd80ced5e1745a8936c991ab7443;2011-09-14 07:44:51 -0400;Adding ant build scripts
8f75d9050ded9ac1de8ad50f3647b9c0c3023d19;2011-09-14 14:51:53 -0400;- Moved files around to allow building from jars - Videos can now be loaded abstractly - Started adding applets - Modified some code to handle applet security restrictions
cf972b1f242f944b97f17ee6119b155cfa447c80;2011-09-15 12:30:40 -0400;- Improved visualization applications and adapted to make it easier to turn them into applets - Abstracted scale space and scale space pyramid features - Debug GUI elements.   * Pushed more processing into swing thread, like it should be - Made applets easier to invoke by passing in a reference to the visualization class   * Used reflection to invoke.  Cleaner code in long run than uning interfaces
959095e99dc8b618b373e7b9d7ec6c8d7250320d;2011-09-16 05:05:19 -0400;More GUI improvements
f2425eb523a0e5d9a7030b0467a86d4ee59d2672;2011-09-16 05:05:58 -0400;adding data for applets
c88d0f9c1940e710feddca09f4a51159fadc9752;2011-09-16 11:01:18 -0400;adding build.xml for applet
2d67354d3e7333731d3da0317882183df4054867;2011-09-16 11:22:41 -0400;- Improved GUI and fixed GUI related issues
43a9c2714e3aa7532ec8e4f07eafe8cafb1de5c2;2011-09-17 22:01:36 -0400;- More GUI improvements - Added a visualizer for feature descriptions - Applets read images list from a file - Added new image for the applets
068ca820a85d297e02019313881cb59315d0e52f;2011-09-18 16:06:22 -0400;- Added code to evaluate 3rd party libraries   * SURF and OpenSURF perform better than this implementation of SURF.  Probably a bug - Minor tweak in TupleDescPanel to display the points in the histogram - Commented evaluation code and changed file naming scheme
c2efd49c3e4517197bb327971bb6a5ab4b20b14b;2011-09-19 00:09:12 -0400;- rewrote denoising visualization app - Changed ListDisplayPanel so that it doesn't use a split pane - Worked around a very annoying bug in Java where it mangles the RGB intensity in gray scale images.   * Introduced first 4 letter words into code
c6d01470259b35d5c42c251e9b269ea4adf3282d;2011-09-19 06:36:07 -0400;- Added ignoreBorder() to several feature detection class/interfaces   * Can now more inteligently and consistently compute ignore borders   * fixed a bug in SURF - Modernized feature related code generators   * Change many classes to include Impl* prefix
35c14961a35345e41d93eafd5a21ef377cf4c84f;2011-09-19 23:26:40 -0400;- Improved denosing GUI   * added more filters - Added second order derivatives to derivative applet - Changed how gaussian derivative is computed.  Now its justified.  Might need to tweak other stuff later. - Further improved border in extract algorithms
ac5570d4958e6dda0bc063c022df856affca3cd6;2011-09-20 06:47:26 -0400;- Added more configurations to DenoiseVisualizeApp - Added getInputType() to FilterImageInterface   * Which required modifications in many other classes
9f4fdc23be750c705a27428903530d0857705be1;2011-09-20 15:53:37 -0400;- Created app for viewing trackers - Hacked a image sequence reader for sequences of jpegs - Reworked greedy association
09dbd19d6c25667d067fe3f51241c875d88b241e;2011-09-20 21:46:26 -0400;- Added reset() to SimpleImageSequence - Improved memory usage in applets by storing jpeg images as a byte[] array in JpegByteImageSequence - PyramidOps.gradient() can handle a change in image size now - PointImageStabilization handle a change in image size now - Changed Affine2DCodec over to F64 - Added images and video sequences to applet/data - Improved sleep by calling wait() inside some video apps
5e140b0adc60bd6900b78675b1a6a8850ab1a1f2;2011-09-22 11:28:53 -0400;- Added application for showing binary operations - Added filters interface implementations of binary operations
57f4c38b08d518dbe58484018826609a0c1bfb02;2011-09-22 18:09:28 -0400;- Added a blob labeling example
1723c901cf9180175fd7610aaff6a896b2738e1b;2011-09-22 23:40:02 -0400;- Tweaked DemoBinaryImageLabelOpsApp - Corrected Gaussian hessian in derivative app - Added Polynomial interpolation   * Added 1D interpolation algorithms - Added GConvolveImageOps
3a528bf017d25956e4d4649c2e8ba5abde8d3040;2011-09-23 09:57:55 -0400;- Tweaked GUI components - Added blur app
2f98cee20b290589761863b26bb959a9efd95aa7;2011-09-23 11:59:26 -0400;- Modified bicubic kernel interpolation to bounds check the pixel value
249669d3ea640bd5ca3ed3830bdd6d003ac0a1e1;2011-09-27 07:04:55 -0700;- moved GeneralFeatureDetector - Created visualization app for extractors - Renamed FactoryFeatureFromIntensity to FactoryFeatureExtractor and had i return specific algorithms
2c65ca473858f3c7b5df2b88f145cd37c0d9df8e;2011-09-27 13:36:04 -0700;- Added GUI controls to contour - Added a new Canny edge detector variant which selects the threshold dynamically - minor refactoring
a43ab47a2b1b446b4c99810a9b5e756288ca0c32;2011-09-28 22:02:25 -0700;- Adding preliminary version of BRIEF descriptor - Removed random print statements in GUI code
1f07d7cf5681b6dbf94a3374205ef8ce1d8f86e8;2011-09-29 10:04:16 -0700;- Refined BRIEF descriptor - Added images which should have been added a while ago - Tweaked CompareTwoimagePanels so that the user cannot select a bad feature
2abc38cf7a16ab360941b60086131ceadb79b6ab;2011-09-29 15:17:58 -0700;- Orientation was missing from several feature association related visualization apps - Added feature radius to feature description - Added orientation variant of BRIEF - Added isInSafeBounds() to InterpolatePixel   * Can now tell if get_unsafe() can be called safely   * Updated interpolation algorithms and generators
d7be00c2777ccd6abde3f3ff6fee9dc3d168a4eb;2011-09-29 21:43:43 -0700;- Fixed a bug where the gradient orientations were not being computed for weighted sliding window
ddbfa22a64e089b18bd1f818ec00299a86ee680f;2011-09-29 22:35:34 -0700;- Added Integral Image orientation to benchmark   * Found bug where it always computed unweighted - Feature description file outputs orientation to provide more debugging info
13af4d7bb9e878544c8a9434c542a16b03b1607a;2011-09-30 18:08:12 -0700;- experimental image descriptor - other minor tweaks
75291e17960cddb01ef7f322dea5d10e1a9d718d;2011-10-04 22:54:20 -0400;- fixed a bug in rotate distort   * different sized image produced unexpected results   * made sure rotation in correct for the image coordinate system  -Improved region select GUI  - Added more debug tools for describing features
f33c7ab477b4594e959fec9f79e724f32a52b22d;2011-10-05 17:39:50 -0400;- minor refactoring - Added tracker for BRIEF   * generalized point and detect tracking - Added junit to lib directory
c9f1e3fd6be4918d423de82d8bdb91aa65f384e3;2011-10-05 17:40:46 -0400;Updated build scripts - Added analytics code to javadoc - Updated applet to exclude junit
9fa6ffe651d014caed188af45b3033e0a00d57aa;2011-10-07 14:25:58 -0400;- Added hough transform based line detection algorithms - Added images for said algorithms - Created visualization app for said algorithms - Minor refactoring
041b8acb6e3048da5044c6d52f9195bb93cfbe05;2011-10-07 23:47:22 -0400;- added more unit tests - Visualization for Hough transforms - Added images to applet
37648b85b2d83fc4d2f2e7e5d53b3ee7c24b0d0b;2011-10-09 00:05:54 -0400;- Added MJPEG movie format - Added better stabilization videos - Removed older videos - improved point detect tracker - tweaked image stabilization - improved stabilization GUI - Distort once again allows the skip border option
079758960b44a9e70b20a057e4ee593169fa1d06;2011-10-10 14:26:19 -0400;- Adding more unit tests - Improving extractors   * Adding the capability to detect features along the image border   * Pushed excluding corners outside of the main algorithm   * changing interfaces - ImagePanel   * Resize flag now works correctly - MJPEG codec   * reads in the whole image and does not rely on available()
3536107312339735fb051c173f6095b9a305532c;2011-10-10 23:03:14 -0400;- Tweaks to hough line detector - More unit tests - Started coding up a new line detector - Pushed numerics into its own code module   * Updated build.xml scripts
8f5b0f25a77ca861b0b98e39b8d5bccee1c7b00c;2011-10-11 08:32:28 -0400;- Created examples package - simplified some IO operations
8aa7a2401e9ea9dd22b798958f17e99331f514ff;2011-10-12 07:56:10 -0400;- Non-maximum suppression now supports two rules: strict and relaxed - More unit tests for hough line extractor   * prompted the need for a relaxed rule
218cde9e89acc09629c6a4b098654889ea1912a6;2011-10-13 15:28:09 -0400;- Added grid based line segment detector - Benchmark for line detectors
5e921526712b6df370b0e15cdf5ea858bb06a863;2011-10-14 12:40:13 -0400;- Fixed a bug in HoughPolar   * (int) rounds towards zero, needed to floor it instead - Added code to prune similar lines to polar and foot-sub   * Both of those algorithms will natural produce duplicates under certain conditions - Adding new video
002a5d55581274c141c1785fba1bd6b8d05685a1;2011-10-14 12:42:07 -0400;updating libpja.jar
4b73446cb2164f0c6cb60994df1a94b3f59b2db4;2011-10-17 09:22:07 -0400;- Improved Hough based line detectors   * Speed and robustness - Added a faster but less accurate version of edge non-max suppression - More unit tests
7a6e20359cb299ae311c61e06d03d22290a6e7aa;2011-10-18 06:45:54 -0400;- refactored mergeSimilar to pruneSimilar in ImageLinePruneMerge   * fixed a bug where the worst lines were being saved - LineImageOps.mergeSimilar() now is invariant to the order in which the lines are processed. - Tweaked Hough line detectors
c0e5a835cca562694cc520d640f40077661bb8a4;2011-10-18 10:42:02 -0400;- added unit test for NonMax crude - added orientation to detected info
9adc371fa9682057b1a3f8ef3060b398e5f04877;2011-10-18 10:42:12 -0400;Adding OpenCV SURF code updated georegression jar
6e0b14629dc102ecf89ddb6466faa731a2234c8e;2011-10-18 14:26:05 -0400;- Added another example for binary images - added more comments to various image classes - minor refactoring
02e46b03bb96731ffd818b65de4640dc8e7b6a0b;2011-10-18 16:38:58 -0400;- minor tweaks to examples
b6a95c75f3e07d452e2371033b752f6cb63822d1;2011-10-18 18:15:14 -0400;- minor refactoring
1caac594f0a1b91946bffd40c784ce12dc957c6c;2011-10-19 13:10:51 -0400;- New unit tests  * minor bug fixes - Added info/control panel to image stabilization app
89177e80098b8259ac9d7fe6ac4b309add033d6a;2011-10-19 19:41:05 -0400;- Fixed a bug in scale-space laplacian and scale-pyramid laplacian where the laplacian was incorrectly being adjusted by the same factor as the detected feature in scale space. - Added a list of scale-spaces to feature detection app - minor refactoring
124048c34bc95ca0b36ba707790b19223484b286;2011-10-19 20:42:41 -0400;- fixed unscaled feature bug in stabilization app - region specific rescaling in wavelet transform to make it more visible when displayed
74b6a087e8c419583fc5e5d1dc61bff2a0853b35;2011-10-21 17:52:19 -0400;- Ugly but improved SURF implementation   * produced comparable performance to OpenSURF before its graded descriptor   * needs to be optimized
d2c8c19d040ed6f730aa3788535c38029894ceca;2011-10-21 17:52:37 -0400;- Fixed a bug in scale-space laplacian and scale-pyramid laplacian where the laplacian was incorrectly being adjusted by the same factor as the detected feature in scale space.
665d5e73648dcd144c844e127ef23c1aeaf192b6;2011-10-21 19:45:23 -0400;- Removed some of the hacks from SURF   * need to optimize more   * clean up code more
cdde706df3a8c179102475b1a74e1060d2f9581c;2011-10-23 13:44:40 -0400;- most unit tests that should work do work now - tweaked integral image haar and derivative - changed how size of kernel is computed in SURF
3c9ecfec3944d7b31d8edd0059410262be2aa9ab;2011-10-23 21:27:38 -0400;- Finished orientation sliding window for integral images - Cleaned up some unit tests - Tweaked some SURF settings - Added Gaussian kernels with an even width for SURF   * updated SURF to use that kernel - SURF related refactoring to improve variable names clarify
575a9aba5ea6c238a6021c507fbb054459661375;2011-10-24 03:01:58 -0400;- change feature location from int to double based
aa0ca90fe70149288fc92871c93ee8c5cefbcbf4;2011-10-24 03:22:32 -0400;- removing some external reference in evaluation
97b66b6c4f27195a844702d8d16d82d595223858;2011-10-24 19:01:41 -0400;- finished unit tests related to new SURF code - Added SurfMod - improved homography benchmark
ab821bc62c8645f581852d47952de3dbeb208d45;2011-10-25 12:21:49 -0400;- refactored FactoryExtractFeatureDescription -> FactoryDescribeRegionPoint - refactored ExtractFeatureDescription -> DescribeRegionPoint   * easier to find - Started adding code for another library in the SURF benchmark - BenchmarkFeatureHomography saves results to a file now
7ff77532cc26ddd431a1354730369c05d79bbd65;2011-10-26 15:44:46 -0400;- Adding image stitching example - Code related to homographies
4cfd1c0a48b3c5db30695095cd0b578e1a2f8802;2011-10-26 15:44:57 -0400;adding new images to applet
78a09abec61585c343db3aa98629d637b78da2ce;2011-10-26 22:31:43 -0400;- added runtime benchmarks for describing features - Tweaked stabilization app
32a76f0e89faaa02cc5e65dff4b9f0b2bd158455;2011-10-27 07:57:18 -0400;- Added threshold to fast hessian factory - Added detect runtime benchmarks to SURF + thirdparty
ed6570b64283fe5a13b59a09d7c048ac8071f78d;2011-10-27 14:35:59 -0400;- Tweaks to how SURF is configured - More adjustments to third party SURF libs
d24809ca2f8b180ed8ecd2b2153df287a0f595e3;2011-10-28 06:27:14 -0400;- added unit test for even gaussian kernels  * fixed bug related to that
bb9c8a173d2964d340555023550a05a2241d953f;2011-10-28 15:59:12 -0400;- fixed bug in wavelet normalization for display - changed behaior of ImagePanel to not enlarge images
e55302e054d5d02601b9e3300b49adf1365f4ce9;2011-10-30 18:10:59 -0400;- Changed how generics work in GeneralizedImageOps.createImage() to make it apply stronger typing. - Added min() and max() to Pixelmath - Working on a new example code
7d74a9c8019add01e6d721f6df895ab2c776a9bd;2011-10-30 22:56:08 -0400;- Improving ExampleImageConvert code - tweaked pixel math a bit.  multiply and divide for integer now uses double instead of ints
5205af7357e96241ca1c354bad915312fbb66352;2011-10-31 14:23:19 -0400;unit tests, opencv benchmark, and examples
ccadfcc6ca2ef4e27683ea542243f6fdc93dc61c;2011-11-01 12:13:03 -0400;- Minor refactoring
3f1f57ba15c088861d543bf2cf77b2eaf05dfae0;2011-11-01 16:12:14 -0400;- Added code for comparing OpenCV and BoofCV - Changed hough line polar is configured - moved SURF benchmark code - Fixed bug in ThresholdImageOps.hysteresisLabel*() - Re-Tuned SURF
772fdc6e45681a491ce45de32dc3f10c371fb593;2011-11-01 17:42:13 -0400;- Tagging as alpha-0.1 release
ab8e58c5895b322a46ec0a86cfd81fbcc5b49868;2011-11-02 07:55:21 -0400;- Added new example for detecting interest points - Removed setStroke() from FancyInterestPointRender to allow more customization
a32eb789cadef4da0c0e7625900516a85534c1c6;2011-11-02 07:56:28 -0400;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
ca15f701786e291956bd530faeffc29074f03600;2011-11-08 10:48:34 -0500;- Updated SURF benchmark to include overall runtime performance
069ad1b327985fd8f6ce6389a89384a5ef7281fb;2011-11-10 17:10:53 -0500;- Cleaned up polynomial interpolation code and added integer image interpolation
7d4d6bc25eb3c05727a4201378e1a7588a65e542;2011-11-11 18:35:16 -0500;- Added pan-o-matic to SURF benchmark libraries - Started adding linear fundamental and homography algorithms   * well more refined API
4f39acc5c58f5f0d08d9dde029fefb7a38677423;2011-11-14 14:15:56 -0500;- Added stability benchmark for SURF features - minor refactoring
510ef8254008d98daf7bfa094c94da39f820a120;2011-11-15 07:53:02 -0500;- Adding improved version of linear homography and fundamental matrix solvers   * Homography is buggy and needs to be fixed   * Unit tests have been added
e06df7565ea36c56c1f51243ecce1f6d2dcc0ea1;2011-11-16 14:20:13 -0500;- linear fundamental/essential/homography code all works and passes unit tests - Added PyramidFloat example
26404c7e41897accae54e87b79461603fc88dcb9;2011-11-17 09:37:30 -0500;- Added a panel to adjust corruption in the input image for some applets - Changed convert to buffered so that it notifies the BufferedImage image that it has been modified. - Added a function to GGrayImageOps
f5cdf1456d102075d8ecd86d89cd5cc22f9dd40b;2011-11-17 09:45:55 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
c956bfc2f24809948351608c760197d86a983485;2011-11-18 10:44:24 -0500;- Added 7-point linear Fundamental - Added polynomial root finders - Fixed bug in PixelMath.boundImage() - minor refactoring
2fcf23e8f692d607deef56079f7224e30feb73c9;2011-11-19 11:17:19 -0500;- Added example for associating points - Tweaked interest point example - Refactored functions in FactoryInterestPoint for clarity
1a334dcb4c074ac82f20ba867eb904cfec637c12;2011-11-19 18:40:12 -0500;- Added operations for complex math - Improved cubic polynomial root finder, can now handle all cases   * too unstable to use in 7-point algorithm -
98f866ea5b2de6ce9381f5331bbc01719d8340bb;2011-11-19 19:00:37 -0500;- Fixed a bug accidentally added in the previous commit.  run ALL unit tests before committing
3d346c1092d493c212ac2e7ed4a00fde22963bc3;2011-11-20 12:58:45 -0500;- Added getCanonicalRadius() to interest point detector   * Updated code to use this radius instead of some hard coded local value   * Added the value which scale space should use to BoofDefaults - Refactored getRadius() to getCanonicalRadius() in interest point descriptor
80ce27258cccdae030976442eb3600fc697523c8;2011-11-22 15:14:57 -0500;- Decomposition for essential matrix into R and T - Code for removing transform ambiguity from essential decomposition
4b005d1d723a82f463eb557f9496116f674e0183;2011-11-22 20:31:24 -0500;- Added example for tracking point features - Cleaned up tracking interface - cleaned up KLT tracker - Added a pause() function to BoofMiscOps - various class renaming
9aff1d78e554fb5b04d33d3eb8eed3fe8f8c7467;2011-11-23 11:08:59 -0500;- Deleted PointSequentialTracker and everything now references ImagePointTracker
067d4418af7d720a2805371c82704ff918b25da1;2011-11-24 10:47:33 -0500;- Added decomposition for Homography matrix
f854e31b80a71e8d39dafe47f2a9288a6dc83cf8;2011-11-25 20:03:55 -0500;- Added code to do a linear triangulate/estimate pixel depth
37941021876486655858d5fec5d4c84c4bff37f8;2011-11-26 09:51:13 -0500;- Linear algorithm for motion estimation given a set of observations and known point locations
e6418bf3ca634efc11cb24437cd6425227c055d1;2011-11-29 14:43:12 -0500;- Adding non-linear optimization algorithm - Added a list of images for contour detection in applet data
0f5824a14de495c715433aceaec62023622444d0;2011-11-30 12:14:19 -0500;- Added pixel region descriptors  * NCC and just pixels - Added a feature tracker for NCC - Added new region descriptors to several apps - Changed behavior of VisualizeRegionDescriptionApp so that it maintains the reference to the selected region when   the descriptor has changed.  Allowing you to see how the exact same point is described by different features - Added a JacobianChecker which uses a numerical Jacobian to make sure the algebraic one is correct - Added new zero() and checkInside() functiosn to BoofMiscOps - Added models for 2D rigid body motion to geometric 2D   * Uses non-linear optimizer and doesn't seem to converge all that well
de69a0a958850d00c1faa88e83694f63fad5a49e;2011-11-30 19:55:22 -0500;- Added Sum of Absolute Difference (SAD) score for association - Added more unit tests for recently added classes - Some more descriptive descriptions
84a47925b2c278d8acb793c3a4b7f6af6884f238;2011-11-30 21:33:22 -0500;- Added versions PixelRegion and PixelRegionNCC descriptors for U8 images - Minor tweaks to code for visualization - Minor tweaks to examples
bf182d2794731c22bb501269553cbb289460b910;2011-12-01 07:11:08 -0500;- Updating library jars - Change log - shake.mjpeg
fdd8871db7c50433bc37cbafcdca843962762a3a;2011-12-03 21:55:25 -0500;- Adding code for grid based calibration  * Compute homography from observations of the grid  * Compute calibration matrix from homography matrices
478efafd7e19016eb44ef62ba735033cb9357dd5;2011-12-05 13:01:28 -0500;Pushed SURF benchmark code into its own project on git hub.
ec28023c95de69284b6a8f387b7e899de8412b51;2011-12-05 23:13:59 -0500;- Added linear radial distortion estimation - Better JavaDoc for CalibrationMatrixFromHomographiesLinear   * improved code for no skew case
36f32d482ac91005fa20a0a909e2c3a154755667;2011-12-07 14:43:18 -0500;- Fixed unit testing bug which was causing instability in CalibrationMatrixFromHomographies - Added decompose homography for Zhang98 calibration - Ranamed low level algorithms specific to Zhang98 to have Zhang98 in front
2f48e55202a9ddebd1f9f713709da3dd8dc23e27;2011-12-07 17:52:25 -0500;Changed applet image files
7c10e8213acc9dcd0401d094e04f6170d39006c5;2011-12-07 21:55:08 -0500;- Added image denoising example - Added min and max values to ImageTestingOps.addGaussian() - Refactored FactoryDenoiseWaveletAlg    * changed class name    * functions now take in an image type
08c6fd7025c1931e403ceba01ee7acf5a6d5b2c4;2011-12-07 21:55:57 -0500;- adding new EJML jar - updating change log
918c1998cb1fe3e6c4c5b0a01b1fe98d2e4ee2b6;2011-12-09 14:05:33 -0500;- Fixed unit tests releated to last commit - Added code for nonlinear optimization in Zhang98   * Code is broken, probably the optimization algorithm - Added most of the code needed to run the full Zhang98 algorithm
62387360c14cd07c2284ff0f4f3d91ec204e3fc4;2011-12-11 14:45:59 -0500;- Created a new package, visualize, to remove a cyclical dependency - Added calibration grid ps file
6db1703a0d5f5e7536bae80619e222e2a37e2cb1;2011-12-12 21:18:56 -0500;- more progress on detecting calibration grids - added to BinaryImageOps - Can select a rectangle in AssociationPanel
42e6e19d1243aac5db148e581473e826902647f2;2011-12-13 14:12:52 -0500;- Added standardized tests for numerical optimization
e1b5f8e18896ee245832c2913eaf7ea6bf190766;2011-12-14 06:53:41 -0500;- Updating junit - fixed minor bug left over from the last commit's refactoring
d019404fdd4fedd4eeb9ffe1661fcfaed26265bf;2011-12-14 13:48:52 -0500;Added code for creating mosaics
7a122c982846f094b9e1eb81cc82bdfa55f1773c;2011-12-15 01:12:09 -0500;trying to fix this stuff
fa50e6dcc4a31d0d4bfd6ee70c781229ad7a2654;2011-12-15 01:16:02 -0500;adding deleted file
f8fe3a6a3042cba48381c006a3b814cac15cd93d;2011-12-15 01:17:01 -0500;- Revamped image types   - Renamed ImageBase into ImageSingleBand   - Created a new ImageBase which is the parent of MultiSpectral and ImageBase   - Flushed out MultiSpectral some more   - Added functions to convert to and from buffered image and multispectral - Colorized Image Mosaic App
95719a3e70dc64c439a9deaed4e58314d36520f2;2011-12-16 16:30:49 -0500;- refactored GeneralizedImageOps.createImage into GeneralizedImageOps.createSingleBand - General improvements related to mosaic code   * Added check to see if features are too close to each other   * Separated out mosaic rendering code - fixed bugs in KLT tracker related to deleting tracks
a4c96027d0a0fc10a5495e1e39d5a298f78847e9;2011-12-16 22:28:52 -0500;- Mosaic app now can switch between color and B&W mode - Added to PixelMath bandSum()    * Modified generator to use latest code
e42e36753e9ae1e6fca9878ab7df010d0c362d1e;2011-12-17 01:19:26 -0500;- Wrote more unit tests
37b6926f185faf343bdbeab4424cf2dbad72fa32;2011-12-17 23:29:56 -0500;- More progress on rewriting mosaic and stabilize apps to share common code
7d1c2eda4d9eefa6b5f0a8a984f4d3c8c4e764df;2011-12-18 12:50:34 -0500;- Moved data into its own project - Added some comments onto mosaic/stabilization code   * fixed bug when dealing with point/detect tracker
935ced08314a349986231ea31b3bee04101b8933;2011-12-18 15:51:04 -0500;- Commented and fixed bugs in image motion stuff
a9570995595214934648aad71c80db2920fa5240;2011-12-19 16:13:46 -0500;- Fixed ant build scripts and made them use a common template - Moved some unit tests that were in the wrong package - Updated roadmap with latest progress
618843aaac72e383991110b5f7f6f293549dcb0c;2011-12-20 20:24:35 -0500;- Added example for line detection - Added more unit tests for stabilization related code - Refactored SingleBandImage to avoid confusion with ImageSingleBand   * Now called GImageSingleBand since its a generalized version
f61b9c6b6cda3862ace36a7d52c91d2a9f77b945;2011-12-20 22:29:12 -0500;- Added a crop region to ImageDistort so that the whole destination image does not need to be processed. - Used crop functionality in image motion apps and speed things up a lot.
f74e9510ebaf77d3c0b8b908a3170abefd3f81f3;2011-12-22 22:45:45 -0500;- more comments - more unit tests
500a6dda8bd91041edfdd5530732428e1f001eb5;2011-12-24 15:19:44 -0500;- Improved calibration target code - created calibration package - put testing source code into lib/testing
e9adf513df376141d4fbcd1f703fa3261f893f15;2011-12-24 17:01:58 -0500;- Added caliper jar - Converted one benchmark as an initial test
7fe99a642e6036867c662d22c515115bd8a70578;2011-12-25 12:53:05 -0500;updating benchmark
8e3af4dbe45bcf858a8d605eb64ff3c9ad5b87a5;2011-12-25 14:18:44 -0500;adding the last of the convolve benchmark conversion to caliber
adb63e75563cbc0ff7083ffce7fd0694bb5800fe;2011-12-26 10:06:43 -0500;- added more code for corner detection
6d9b447758e07db26a47e5a4c17b016b44b5898c;2011-12-27 09:11:39 -0500;- Fixed bug in refine corner code.  Still will need a large change to work perfectly in reality. - Updated and added copyright to some files
d51e315f11ea34a0106d85eed7e44a2fbc6e72a3;2011-12-29 23:48:04 -0500;- more improvement to calibration target detection
fe4b2ccd9a1fb7e49d38620670b06050d8e73b18;2011-12-30 09:06:51 -0500;- Adding changes to DetectCalibrationTarget that were not added in the last   commit
78e80c814fbd07fd2122172007c7640cb3ba13bb;2011-12-30 12:06:25 -0500;- Calibration grid detection is working at pixel level accuracy    * Unit tests need to be finished - Application for display results has been partially implemented
0aa5d512c7806f91d3fb9aecb4049472bb796877;2011-12-30 19:22:58 -0500;- Improvements to calibration grid detection   * works on more targets images now - Detection app shows more information now
17a9d99ef4ad5ed47a3c3451a3016c29abb1b74c;2011-12-31 17:33:39 -0500;- When there are too many blob calibration target detector shuffles through several different blob configurations - Updated examples   * files point to correct location   * Image stitch outputs color images - ConvertBufferedImage correctly swaps RGB values when needed
3ae7403ba06472de53f0f09a11a200e4d72f5108;2012-01-02 09:37:42 -0500;- Added some missing unit tests - Improved grid detection   * Graph is only computed once, and local copies created for processing   * Only the largest island in the graph is processed.  Greatly reducing     the number of combinations in some cases   * Display app now shows the graph
ab414d483a825a92d0ccdeb26533ca9f45b4bb25;2012-01-02 10:13:57 -0500;- Updating libpja.jar - fixing main/build.xml
687af32767d2fbed287e8d508dea065bb2c93bcc;2012-01-02 12:36:51 -0500;- Tweaks to examples - Updated version number - Candidate for v0.3
2f4e9b9966db501424d71f55cb6e71170229ac66;2012-01-04 10:54:09 -0500;- Changed behavior of ConvertBufferedImage and ConvertRaster   * No automatic swapping of bands   * Use does it manually, avoids confusion and code complexity   * Updated examples - Tweak to numerical jacobian that should make it more accurate
b94e3d87bfeb1cbc14dbcb614625e2a8d8d65089;2012-01-04 13:33:39 -0500;- Add example for how to work with MultiSpectralImages - Modified ConvertBufferedImage.orderBandsIntoRGB() to handle applets
aa7f9c42fd9e4949d8324c4e65f418f4bcc772e3;2012-01-04 23:19:46 -0500;- Fixed multi bugs related to SURF   * Bounds check was not being correctly performed for regions with no rotation   * FactoryOrientationAlgs.sliding_ii() was creating an average filter for I32   * II orientation estimation algs were using integer coordinates instead of double coordinates - Updated several file paths in Evaluation module - ConvertBufferedImage orderBandsIntoRGB was casting to the wrong class during a test
0f024693cddda34e271111ed4739730a728a82e5;2012-01-05 11:47:01 -0500;- Added comments to several factory classes and a few others
a961be659ba58ed41ce4377688caaa0912a92ae5;2012-01-05 14:56:32 -0500;- Added a dialog box showing video download status
7e3334c174f869c4eaae2a6480c7faa6d2fe83bd;2012-01-06 06:26:36 -0500;- Added ant script and readme for example code
9f9b3dcbcf337e3dfc63a3b2103e67abed42ca53;2012-01-06 06:37:55 -0500;- removed pointless jar from run in example/build.xml
510c7537e7dca82391c4c9f3bc07b8625464de4d;2012-01-06 10:57:37 -0500;- fixed type-o in example/readme.txt
5bad36d5d83f3824f550c70dbe0a3ffcda0b8aea;2012-01-06 12:32:29 -0500;Final candidate for v0.4?
88f82cb8cbc12ffe275707d3f58d91f211a92b27;2012-01-10 21:32:15 -0500;- Converted more benchmarks to caliper - Added a useful README.TXT
164cb93a86068dd5bf6c4675b74a99cee8f53359;2012-01-11 19:17:05 -0500;- Adding current progress in non-linear optimizer - Spelling corrections in KLT comments
17fbdfe746dda182f3eadf0f96783e0bd8e20e6c;2012-01-16 16:57:29 -0500;- Minor improvements to SURF related algorithms   * fixed a bug where the derivative was slightly off   * retuned regular SURF - Started to add a new SURF variant - Mode some orientation algorithms more configurable
9f1594f3f3bc249f29a14e2d7601b7205d061c5d;2012-01-17 11:28:33 -0500;- Significantly improved stability of SURF implementations   * primary source of improvement is by ignoring the border - Improved sparse gradient code   * function to check for border condition   * cleaner unit tests   * Integral image based sparse gradient can now be scaled up and down   * Created safe wrapper for any sparse gradient implementation
9e684521a2a4275b62f520ec0e5588aca4357a27;2012-01-17 21:34:09 -0500;- SURF improvements   * Updated tests   * Improved tuning and pushed more parameters into factories - Adding current state of non-linear optimizer
a17f3fc78e8d1b650de9ab06f0187fe164dd2602;2012-01-19 12:25:42 -0500;- Added gradient free integral image orientation algortihm - Removed type specific implementations from integral image orientation - Refactored sparse image operations into a new package - Added sparse image sample - Added benchmark for SurfDescriptorOps to see how much of a difference fully unrolling the gradient makes - More turning and improved SURF performance   * larger sample points in orientation estimation
345ff8bef1f34b71cf07dcb80b46558b6267d167;2012-01-20 12:38:20 -0500;Improved More94 line search
7efe7203226da3f1de93155a0dab8e6c8d2018cc;2012-01-21 13:54:44 -0500;- Both line search algorithms appear to be working as designed - Finished adding test cases
ef99603010219fc7172e0b8ec0aa6d6438cdd7a7;2012-01-22 21:51:19 -0500;- Finished sketch of QuasiNewtonBFGS - Minor refactoring in optimization - Other tweaks
3c4cfc5b70ee495800350bf65e2d7ca90b93cb17;2012-01-22 21:52:44 -0500;- DescribePointSurfMod only samples overlapping areas once - Renamed ImplOrientationSlidingWindowIntegral2 to ImplOrientationSlidingWindowIntegral
b8bcb501f0c71473cdf5ee5287b3ce769b1fbed7;2012-01-23 22:57:20 -0500;- Working QuasiNewtonBFGS   * Still under going tests to see if its correctly implemented - Added more evaluation tools for non-linear optimization
f78356c6c983165dc6a107948a6161f77f13273a;2012-01-24 21:27:04 -0500;- Improved BFGS equation implementation - Added more test functions, including one from minpack-2 - various other related changes
cd12077ff9169accb10d7b7beda6f730ee564e35;2012-01-25 10:55:45 -0500;- Improved function interface for optimization functions.   * Unnecessary gradient computation in QuasiNewton has been removed.
d48cc057dc2dabb24a6500164d7e55687b7310a4;2012-01-28 20:35:54 -0500;- One Levenberg Marquardt implementation   * Still need to add weights and optimize   * Might be some subtle issue left, not performing quite as well as paper suggests - Various related classes added too
ee7f04f7326106591029e2ed1ba78f42715c3701;2012-01-29 10:11:46 -0500;- Improved LM - Added documentation - Added more test cases - Might have found a bug in QuasiNewtonBFGS
2e8ae4e1fa833bf552a272fbb5934a4ec8be6b38;2012-01-29 22:10:54 -0500;- Deleted old LevenbergMarquardt code - Switched calibration code over to new code
9451780743cf0be0b3f939bd2df99e9bfbf20abf;2012-01-30 09:28:41 -0500;- Combined Quasi Newton code into one class - Added a hack to handle a degenerate case
645d4d2f4579a477138b8b5bb66ba828517d8667;2012-02-01 09:00:13 -0500;- Candidate 0.5 release - Removed one deadend variant of SURF - several minor chagnes
6fbed9192f55e6e13953d24420ac474a49e2f93b;2012-02-01 09:32:56 -0500;Updated change log for 0.5
4ad3b70859814231d0dbbf91ad8ef1904737b423;2012-02-01 14:57:06 -0500;- Found a bug in SURFM that degraded its performance was not caught by unit tests.
f4427193765f5b47328dd255eb02b0d3b3dbb25f;2012-02-04 10:59:20 -0500;- Still working on calibration corner detector - Added weighted KLT corner detector - Added many convolution related code for ImageSInt32 - New zoomable image view in GUI
be181be27c1e470a4d2dd92e550ec17b853e6aa3;2012-02-04 11:01:03 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
d9e6578dd1bf7ae43fb1bb668c799d48a8d66740;2012-02-05 18:52:39 -0500;- Auto threshold for grid target calibration - Improved (but not yet ready) refinement algorithm - Gaussian weighted Harris corner detector - Print for ImageFloat64 - Moved change log to base directory
db5d2cd270dd88659f5e44855b003fd6953e54f1;2012-02-06 16:03:28 -0500;- Working grid calibration detection code   * Removed some unused code   * In the process of cleaning and organizing still
ee9ebb88dd15c189aefa61524d5aa54ea56e6ad3;2012-02-07 12:53:24 -0500;- Grid based calibration appears to be working.   * Need to finish unit tests   * Minor refactoring
301fbd7edab8974e6cafd386f995a55057225865;2012-02-07 16:15:32 -0500;- More refinements and bug fixes in grid calibration target detector - Created an app which integrations all calibration components into one - Moved print image code - Minor change to readme
8208b1f50f25d3c8cfc494556984102a4264a4b0;2012-02-07 21:34:52 -0500;- Refactoring related to feature factories - Started to add checkered grid detector - Added unit tests - Better debugging added to ImageListManager
7de843bf24c659c223282bb4408fd106d7d123ed;2012-02-08 07:11:12 -0500;- Changed reference to www.boofcv.org to boofcv.org in copyright
faebc2fc2a46a45fc617475df1b9cf9189d0f484;2012-02-08 21:34:45 -0500;- Planar Calibration GUI App - Distort/Undistort radial transform - Light progress on checkered calibration grid - Tweaked spaced square calibration grid - Fixed bug in spaced square where it was not transposing targets
795d37f4ac130f04604abde924bea01be10c4d7e;2012-02-09 23:28:12 -0500;- Checking in current progress on chess calibration grid   * Working, but needs subpixel validated and adjustable thresholds - Both calibration grids now ensure CCW ordering of points - Moved square blob detection into its own class   * Both calibration grids use that class - Various refactoring
a6ed10a84eb4e80e76e62dda4db964116feeb6dc;2012-02-10 15:38:38 -0500;- More improvements to camera calibration - Refactored name - Added unit tests
a8b3d2f07fe90fe366ada89d60b4f190d5717388;2012-02-10 16:29:14 -0500;- Adding SURF Example
d5289a6a826ed6218760bfaf48978e2645b1eef5;2012-02-11 23:22:14 -0500;- Created PlanarCalibrationTarget to specify the target and a Factory to create specific types of targets - Updated code in response - Can process Zhang98 data now - Tweaked ConvertBufferedImage to better handle ImageMultiSpectral - Calibration debug can now process gray scale images
7b60350a3c8b867e304fd1d07ccd5ef7d6f1a473;2012-02-12 08:49:39 -0500;- Fixed bugs in HistogramTwoPeaks - Put back in a sanity check
aab32a407bcded91d3d4bc7f2bd68bb92e2794a1;2012-02-13 08:35:15 -0500;- HistogramTwoPeaks can now handle multiple identical values in row
45a7756fef109079990b36b6f11cab187ec2d631;2012-02-14 14:26:55 -0500;- Calibration validation test using data from Zhang - Changed calibration GUI to use crosses instead of circles - Improved RefineCornerSegmentFit   * Still not good enough - Refactored FactoryImageBorder - Improved speed of ImageDistort by using get_unsafe() in interpolate - Added image border size to Interpolate - Added Benchmarks for transform and distort - Added ImageDistortMap and removed PixelTransformMap
6350091587675a4e87e7c3bada79c940a5616199;2012-02-14 21:59:16 -0500;- Forward and inverse radial distortion implementations of PointTransform_F32 - Moved ImageDistort from alg.distort to struct.distort
5446afc59ac65d30aa8435156f9e4cde1068a6ff;2012-02-15 12:06:24 -0500;- Redesigned ModelFitter related algorithms - ModelFitter now just target's batch mode - ModelGenerator creates an initial set of hypotheses - Created HypothesisList for storing model hypotheses - Deleted unused code in geo
e7908aa5149b70db4dbbcb0e5fe4706e1333120b;2012-02-15 22:44:33 -0500;- Added ImageDistortCache for different image types - Simplified ImageDistort - Created FactoryDistort - Unit tests - moved ImageDistort back to alg
a44460b9e50ddc0a3a4e614ea2e947bcd2560bf3;2012-02-17 16:27:13 -0500;- Square calibration target detector can handle a pathological case where a region covered the entire outside image - Added chess target calibration point generator to factory
7c76cec6bf19d679f0747a042e09e4cd04722aaa;2012-02-19 20:41:34 -0500;- Added Levenberg dampened to optimization - Levenberg and Levenberg-Marquardt have been tweaked to handle pathological situations better - Refactored name of MotionLiner6 to identify it as a solution of the PnP problem   * Added empty class for a new PnP implementation
7991252978c52448244fd02aabda0228e7abc88d;2012-02-20 21:01:35 -0500;- Changed ImagePointTracker to use PointTrack instead of AssociatedPair - Created KeyFramePointTracker to provide similar functionality -
b684e66cdc10240d98561a4070531aa26648ca5d;2012-02-21 16:42:08 -0500;- Non-linear refinement for Fundamental/Essential matrix - Unit tests - removed the useless parameter from ModelFitter
cbdf5b53a1f290b763c6ff83d4eca776e31842ff;2012-02-22 17:22:57 -0500;- Partially implemented EPnP - Skeleton for visual odometry
cbde2351f8a18bff76e8f3a8f1b35fc098754319;2012-02-23 09:29:41 -0500;- Functions and algorithms for non-linear refiement   * Homography   * Fundamental/Essential  - Added performance benchmarks
8e2262af729b6cc121c279b0804298fd5ba95eae;2012-02-23 23:28:35 -0500;- Implemented more of EPnP   * missing case 4   * missing planar - removed ParameterizeModel because it was redundant - Added ResidualFundamentalSimple
47a48539e511fe723293b5b57f23816e5f76b073;2012-02-24 18:33:38 -0500;- Added several triangulation algorithms, interfaces, and factory - Changed ModelCodec
2210a146db010f924463abf2b45f37750885a010;2012-02-24 19:49:58 -0500;- Moved epipolar package up one out of d3 - some other minor stuff
66647f0bfb5fcef2bcc134d0bcfb0065e56828a2;2012-02-24 23:13:33 -0500;- Fixed bug in keyframe tracker that was messing up stabilization - Worked on benchmarks in geo - moved calibration in evaluation
88d4a3f8f5a520a159e30acdd9f6ae404f6d596a;2012-02-25 12:44:39 -0500;- Moved classes from geo to sfm packages   * clearing out everything in geo that's not pure math - Finished initial sketch of monocular visual odometry - Started writing 3D point simulator for SFM
3f98b49531acac11091097752f565184743460d4;2012-02-25 19:29:39 -0500;- Added refinement algorithm for EPnP -
7e91867007a925f26b218a9c53db01698b7db6d8;2012-02-26 07:46:06 -0500;- EPnP can now handle planar objects  * Changed scoring mechanism
370f88e9a44d754afcd5d4f8d3484e997bee6710;2012-02-26 21:15:13 -0500;- Refined EPnP more   * Removed more advanced optimization routines after realizing they could be counter productive   * Simple Gauss Newton optimization implemented internally
8e38f7a25b78575b82a13a96724b5c2ab44ee27b;2012-02-27 19:03:36 -0500;- Almost got Case 4 totally working in EPnP.   * Committing before I totally mangle it
a23bb634b0114e76540122ba468d8f7ee09d8b19;2012-02-28 07:39:27 -0500;- Close to final version of EPnP   * passes tests   * stability benchmark results more erratic than expected - ArtificialStereoScene now adds error in pixels
50f8439336cc352b20a948cd48245c4d53402431;2012-02-28 22:30:21 -0500;- Added Lens Distortion app - Added progress bars to some slow apps - Fixed some minor bugs - Fixed bug in image stabilization with point sequential trackers - Added SimpleNumberSequenceReader - Updated jars
bbbbfd106471d053adfdc86edde9d02a040e5bc4;2012-02-29 18:34:28 -0500;- Candidate v0.6 Release - Modifed CalibrateMonoPlanarApp so that it can be run as an applet   * Required a significant change to how media is handled and a few hacks - I have no idea why it keeps on insiting that numeric stuff has been modified when it has not - Fixed some ant comilation issues, again
c4ab25bf5b5bd7f6ed7ce38f6f33368985538e92;2012-02-29 21:11:38 -0500;- Changed Zhang98 to Zhang99   * Original techreport was published in 98, but the conference paper which is to cited was published in 99
62e3e1a0ab06ac0b8bbb66b99b764f4d355c2c16;2012-03-01 00:05:00 -0500;- Greatly improved corner point detection in chessboard pattern   * Computed mean in a large region instead of a 3x3 quadratic fit - Detect chessboard app now can display intensity information - Fixed a bug in all Harris corner detector variants   * a plus instead of a minute - Corner factory was returning unweighted when a weighted Harris was being requested
abc0a7cef155a24d24354db18adf6cb7015851d8;2012-03-01 08:18:07 -0500;- Added general 2D quadratic fitter - Experimented with using quadratic to fit chess board - improvements to chess board detect GUI
52ea97688c271eb541e60cb6437e800414d25be2;2012-03-01 09:23:26 -0500;Strong candidate for final 0.6 release
a99cda32d9b376b9047ab251e7216fbad79dccd4;2012-03-01 09:59:43 -0500;adding useless files so that all the needed directories exist and ant will build
903a9933f540e32d96dd0ece246c9a01b9e59f7b;2012-03-01 11:08:56 -0500;adding two more missing directories required by ant script
a8066afbb1121938e3d0cf09ee51534598901520;2012-03-02 10:08:39 -0500;- Resigned how evaluation apps work to better handle more complex configuration and input sources - Removed some unused code - fixed some file references in evaluation apps - Added test cases for ImplSsdCorner
c366e7a88180c51be7394fc39a55290ad5314b12;2012-03-04 20:57:18 -0500;- Worked on adding simulator for testing visual odometry - Sketch of FactoryVisualOdometry that makes a mono tracker   * Abstracted mono visual odometry tracker - Redesigned how error models are handled in geometric vision - Reorganized abstracted code too   * Better meets the goal of optimization and model fitting - Size of errors is adjustable in calibration app
778350cf89f3a340b14bce2f3f4c4971203bd369;2012-03-06 14:28:30 -0500;- various improvements related to monocular visual odometry   * simulation improvements   * the algorithm itself
4081983a463122f971432eaebf017f5f829f5a1b;2012-03-07 13:59:22 -0500;- Moved SFM simulation to evaluation package - Improved monocular code so that it passes stability tests in simulation for noise up to 1 pixel sigma
b5c9d70a9a6ad1a38f83d461ab330552007fb35d;2012-03-07 23:47:27 -0500;- more improvements to monocular visual odometry - started adding bundle adjustment
be24e32ba7199831e78f54a19e4b35c5e617bd9d;2012-03-10 00:06:09 -0500;- Bundle adjustment with analytic jacobian - BA needs to be optimized - Not 100% sure the analytic jacobian is correct
26a27a44c26c74f41c0e1f67ed67f50bad0da241;2012-03-11 21:46:24 -0400;- Improved Levenberg performance - Improved bundle adjustment
f337d41e8ecd685bafb3bdeb700dbd42de8d194d;2012-03-17 21:09:05 -0400;- Calibration outputs to an XML file - Deleted useless functions from BoofMiscOps - Current progress of monocular visual code  * Added new mono algorithm using different strategy, looks for good features to triangulate  * Basic GUI to visualize results  * Runs off of real video - Tweaks to make optimization code more flexible in the long run
9eb02d43bc948cb6d641d85751bbb1180879e681;2012-03-19 18:59:41 -0400;- Improvements to MonocularSeparatedMotion - GeneralFeatureDetector changed so that the image can be broken up into separate regions and features are forced to be spread out - Added non-linear refinement of pose
ca9b62bf71c5b59af8a580c2471c97908a887879;2012-03-21 20:24:05 -0400;- Added detect corner using Canny edge to square calibration - Added benchmark for triangulate - Fixed minor bugs
1fb4ff3e08103f9e1553d841170b9d4670259b5a;2012-03-22 21:27:22 -0400;- Changed the way constraints are specified/handled in minimization routines - Added more unit tests
990833d1591ba2d953c14eeda8b61e33217e7b78;2012-03-28 19:24:13 -0400;- In the process of adding trust region based optimization - Updated for changes to EJML - Improved some comments
1cbdc789ee825c2a8ccbfdeecdbe38cce2e9b08c;2012-04-02 13:17:31 -0400;- Added dog step which sets the system to the Jacobian - Added ftol to UnconstrainedLeastSquares
c11a429d7d555ef8452603aa30bd03550c780615;2012-04-04 07:05:34 -0400;- Cleaned up monocular calibration and separated out IO from logic - Added stereo calibration
f8db958aa78acd41a2be5fcdf91dbf663a23f80e;2012-04-04 21:08:24 -0400;- Added code to validate calibration against Zhang's data and CommonsMath optimization code
d5c40c703c641c16e05e8487fbf1689a6af7cf32;2012-04-06 13:07:24 -0400;- Stereo calibration is working, but visualization needs more work
19806c27daa5dacae05c8837a28f46e994e6d807;2012-04-10 01:59:57 -0400;- Adding stereo rectification - Adjusted LeftToRight transform so that matches calibration - Added functions to UtilEpipolar
96fd7df3c4733f871d0bb581b9e532244f4fd883;2012-04-10 17:41:30 -0400;- Both rectification are passing all unit tests
a0a7cd28bf7e453a1479d7985e606a793012c331;2012-04-11 23:15:34 -0400;- Added SequencePointTransform to chain together PointTransforms - Moved some classes from calibrate to geometric vision - Added LensDistortionOps - Added RectifyImageOps - Tweaked and fixed minor issues in calibration apps - Added more emphansis to the code for if a left or right handled image coordinate system is being used. - Created ShowRectifyCalibrated
a603748cf26f05762cc155b130492d5c65209c1f;2012-04-12 22:41:03 -0400;- Added new examples  * some are work in progress still - Display for rectified images - Code for adjusting rectified calibrated images to make them more viewable
7dd6fbd9b21a206f3a5ee6645ca7c9e31d40ef52;2012-04-13 19:17:57 -0400;- Worked on examples, stuff related to lens distortion, and calibrated cameras
134e652bc641764bf0ec5e9a8a95d82dcb597520;2012-04-14 15:24:28 -0400;- New unit tests for removing distortion
1f7e45d13de636e2892ebf258bf2b5e81f0154bf;2012-04-15 00:48:51 -0400;- Improved stereo calibration GUI - Moved/Created calibration examples and cleaned up code
f18a96b679068e3d30d9650b1e919b20373317f3;2012-04-16 08:07:12 -0400;- Fixed one bug in RectifyFundamental  * Still fails horribly on real data - Improved rectification related unit tests - Slight improvement for rectification related example and their GUI's
f7253af39e96edf781f19614b95505434b0246f8;2012-04-16 16:05:08 -0400;- More work on rectify uncalibrated - renamed GenerateAffine2D
31a561a5929e336cfffd7c3ce86bc97d42af7e61;2012-04-16 21:43:54 -0400;- Fixed a bug in AssociateSurfBasic and WrapAssociateGreedy   * Score was not being set - Updated comments and todo lists
458bdfbf1725f5fbf24fe639e943413fd398780c;2012-04-18 13:42:23 -0400;- Cleaned up some examples - Fixed bug in FundamentalResidualSampson - Added unit tests - Added new function to RectifyImageOps
3cdfc5e1557ead20caadb789da0afb29a44882ed;2012-04-18 23:00:21 -0400;- Added scale to stereo calibration GUI panels - Added load stereo config from a file - Tweaked examples
eda3dcb392f4dfc2288e1d78955db04e1e433bcf;2012-04-18 23:02:25 -0400;updated data version
3592cc34fb5a33c54335c8db8c5903322ace3d94;2012-04-19 10:31:52 -0400;- Updating applet code - Fixed and tweaked other classes
66a22c3a769fd2c23fdacfa81d9309d2f8160988;2012-04-20 01:00:37 -0400;- Changed how calibration points are ordered so that the rows/columns can be swapped and stereo calibration will work just fine   * Ended up simplifying the code a little bit and deleting some classes
6532951cf2fbd6cdbe1f467f52c41c92659eb86c;2012-04-20 08:42:43 -0400;- GUI tweaks in claibration - More debugging info in applets
5d2d8e08fbdc3e16365026f369de8aa6ed5a4a9e;2012-04-20 18:13:10 -0400;- Unit test for Se3FromEssentialGenerator  * Fixed bug where only one depth constraint was being applied - Changed PositiveDepthConstraintCheck class - Improved/Implemented unit tests
3da4a7e25a645253a2ab35ce4f51320dec05dd71;2012-04-22 05:53:20 -0400;Adding visualization for rectification and lens distortion
e6daf6f96af50690aaec17273dea3e0094b9f247;2012-04-22 06:04:21 -0400;fixed broken submodule
522a8b72c1a34a939b568e0c40defa0ecc0beb39;2012-04-22 06:35:38 -0400;Merge branch 'master' of git://github.com/lessthanoptimal/BoofCV
d277de443df95201840afab0254c50906f3b68dd;2012-04-22 12:29:27 -0400;- Candidate for v0.7 - Minor bug fix
5db59f1aa7df794f71451db85acb864b754b4359;2012-04-22 14:26:15 -0400;- Updating parts of the code to reference 0.7
039310259dc23f491715ca8656ad66cbbb6685bc;2012-04-22 16:59:30 -0400;Final v0.7 - Added SFM to ant build unit tests
c7c1c7715469bb812759a82831985640312fba0e;2012-04-23 23:41:34 -0400;- Changed how the rodrigues coordinates is encoded  * Old encoding broke the unit vector assumption causing an invalid rotation matrix  * Fixing the unit vector but keeping 4 parameter encoding produces same result and 3 parameter encoding, so using 3 parameter - Added status dialog to stereo calibration evaluation app
5492daf3002bb06f19fa738ba2f86f54155325e5;2012-04-25 16:00:30 -0400;- Some refactoring in Zhang99 calibration - Added Analytic Jacobian in Zhang99
9a9bc5b03d1583bfa1f623b63569fabde66cd026;2012-04-26 23:32:58 -0400;- First attempt at dense stereo   * a bit slow, but figured out a way to make it faster   * lacks features   * naive algorithm implemented - Added unsafe_set to more images
5b9766ac4211ae013a046b56b448dde4838d5146;2012-04-27 07:12:01 -0400;- Got a working version of stereo disparity which is about 2.2 times faster.   * Still too slow, about 8.5 FPS, but probably close to the limit of what Java can do.
a5287279035f1550e05716dfc5c92c28128d6182;2012-04-27 10:17:50 -0400;- More speed improvements to disparity, about 20%  * changed score order inside of column to minimize cache misses on write
bad44f808cee17ad3f256815ce7cedadc35c187b;2012-04-27 13:17:04 -0400;- Fixed direction of disparity search
f5f38e1288cdfe0972a13b9c5be924c786f0f6db;2012-04-27 20:28:44 -0400;- Broke disparity score and disparity selection into two types of algorithms  * right to left validation  * max error
f9926e897985f2f0f3f63af3c84419ee258dbd82;2012-04-28 23:59:09 -0400;- Started work on disparity visualization app - Disparity abstraction and factory - Tweaked UtilIntrinsic.calibrationMatrix - Added temperature gray scale visualization
d8a06e386096c6c4fd29f19eab3973c3d9bf456c;2012-04-29 07:46:47 -0400;- Moved leftToRightHanded into IntrinsicParameters as leftHanded
24b86f178137b59f92eadb26381a09b6226846fa;2012-04-29 22:32:33 -0400;- SimpleImageSequence now has setLoop() function  * JpegByteImageSequence defaults to no looping in DefaultMediaManager - Added DistortImageOps.createImageDistort() - Improved allInside() function so that there is no single pixel wide black line - GUI tweaks to DisparityDisplayPanel
2e85049c9b2b17a97bb6625c75b7714c0f55b26a;2012-05-01 11:06:19 -0400;- Sparse stereo disparity - Added detectors to FactoryPlanarCalibrationTarget
d1de45ed755d20f4c7f7c7a7ca2bca10bcc39133;2012-05-01 23:00:17 -0400;- Added subpixel support for disparity - Related refactoring to make it less image type specific
22c11b2f8c9899066b31801d63de48f3651a163a;2012-05-02 23:04:23 -0400;- Generalized dense disparity code for different image input type   * U8 and F32   * Wrote code generators when appropriate   * Moved into impl directory   * Updated unit tests - Updated code generator copyright
c1512e7bdd61c4ed643b8aa2b4904525d501ade8;2012-05-03 12:16:22 -0400;- Finished adding sparse subpixel disparity - Added float and int variants for all disparity code - Fixed a bug in VisualizeStereoDisparity   * Works much better now - Updated copyright notice in CodeGeneratorUtil - DefaultMediaManager now returns a copy of images and not the original
4f24c9a12b120031c58a3bc2a8096574815cd0df;2012-05-03 22:25:26 -0400;- Added hooks for minimum disparity setting
a74e0bbf142f3f4148655a93b9c9e05ecb6fbac2;2012-05-04 20:52:22 -0400;- Finished adding minimum disparity to dense - Added hooks for minimum disparity to sparse
cfbbe655c8f8b6d8af4f0239fe5b6f27061463f8;2012-05-04 22:56:03 -0400;- Sparse with minimum disparity is now working
6333960574d62a2a18deb134f740fa740dcbddaa;2012-05-05 11:43:55 -0400;- Disparity values in a disparity image now have a value of disparity - minDisparity - Invalid pixels in a disparity image are marked as having a value > than the disparity range - New rendering for disparity images
76bfd874e5d0b221b769480e542740fa6d2ecbf3;2012-05-06 16:24:44 -0400;- Added range check for interpolate unit tests - Added weighted option for some corner types in FactoryCornerDetector
866e7403f7ac9c57d82fae0023166d7d8112e6b9;2012-05-07 20:21:48 -0400;- Crude sketch for 5 region disparity algorithm
8b9bb1152369dfbc16e9ba9f41138e8a05d77d77;2012-05-07 23:55:24 -0400;- Finished adding the five window disparity algorithm - Tweaked disparity code a bit - Added new example code related to detecting calibration grids and calibrating camera -
acf00b2ac32de5e0f54b2d49e486d460ac3732c1;2012-05-09 19:20:34 -0400;- Changed how flipping the vertical axis works for intrinsic parameters   * realized I had it backwards - Added more unit tests
eb416f433b7b8fea0208589182e502b685f0ba12;2012-05-09 19:31:41 -0400;Updating data/ and change.txt
cdc3935fb885bd9dfb5de922609e02d88fa91749;2012-05-11 10:57:35 -0400;- Improved disparity GUI
2a5b542a4835a718c2a7fed73d68535b32e55ca9;2012-05-11 20:57:16 -0400;- Faster rending of 3D point cloud from disparity - Improved GUI for disparity viewer - Updated file paths
394c202b38d3616ed78c3e88b88ededc8584a68e;2012-05-12 00:10:20 -0400;- changed render to a perspective camera in disparity point cloud - Fixed some thread issues in disparity GUI
89b612e6992900bbfa99556bb4ffc8cf0583c5bb;2012-05-13 00:09:34 -0400;- Updating comments and tweaking parameters in examples
cf4ac4dd252a55a563fbf6afe6eb466a94284cf1;2012-05-13 21:27:09 -0400;- Candidate for 0.8 - Tweaks to disparity GUI   * Added scaling
0854661f8a8fe2d255e69163ee435ae1bc19d21d;2012-05-15 10:28:56 -0400;- Cleaned up java doc in disparity score sad rect - Added min/max disparity checks against image size to evaluation GUI and implementation
e6ac39fe65e7361169030c99ced04149cad7ea3e;2012-05-17 11:57:51 -0400;- Fixed bug for when images are resized and detecting features - Merged blob and corner detector factories - Cleaning up naming of feature classes   * Change KLT corner to Shi-Tomasi corner - Improved example readme.txt
33898963841dd600869f31ded834fa8eda97c9f9;2012-05-17 15:53:06 -0400;- Implemented unit test for GeneralFeatureIntensity - Changed some corner detectors to take intensity image as an input instead of declaring it internally.
18dab0940c051d66d422f076371032c4a896c174;2012-05-22 09:52:36 -0400;- Renamed FactoryCornerDetector to FactoryDetectPoint - Finished a sketch of stereo visual odometry   * added related code
d474ac48d3a0936b61f847beab296f9a26e7a18f;2012-06-01 20:27:18 -0400;- Fixed low level image bugs in unsafe_set/unsafe_get operations - Fixed a bug in ImageSInt32.set() where the input value was cast into a short - Updated for refactoring in georegression - Implemented more unit tests - Added AccessPointTracks - Created a custom wrapper for FastQueue and List - Added FastQueue to array/list micro benchmark - Added MjpegStreamSequence which loads images one at a time - Tweaked QuasiNewtonBFGS to handle more failure cases - More work on stereo visual odometry - More comments
77d1a19f6219c624462f2fc215d7efcccfcd547f;2012-06-05 18:51:38 -0400;- Added normalization option to GenerateHomographyLinear - Added EnsureUniqueAssociation algorithm (needs unit test)
d2ddbfa117741dd34d5696791f61cf0df285e228;2012-06-06 11:50:50 -0400;- Added non-linear refinement for homography image transform
b01cbc7a35b0b3c76c66a46cbce9b354a0e4cb6b;2012-06-13 17:08:13 -0400;- Cleaned up functions inside of DIstortImageOps - Modified and created interfaces for extracting information for point feature trackers - Improved comments in FactoryImageBorder and else where - Working on stereo visual odometry
c1237a3d9cd0447c7480189c7173b68b29701e0a;2012-06-14 12:05:39 -0400;- Resurrected Xuggler code for reading movies - Generalized SimpleImageSequence so that the interface does not reference BufferedImage - Tweaks to stereo vision VO, stuff producing too many errors - IntelliJ configuration have been tweaked a bit to remove redundant dependencies
a94c4e87ae7a66c25350a4232ffe8bc3cedb63fa;2012-06-17 03:50:25 -0400;- Updated for package refactoring in EJML
f425a193ec7c457f8953186092d4224f720887fd;2012-06-19 12:06:41 -0400;- Fixed bug in image distort for I16 and S32 images - Tweaks related to convolution kernels - Improved README.TXT a bit
9730073572903781f98a0b200044378403a1db4e;2012-06-20 09:06:04 -0400;- Changed UnconstrainedMinimization interface so that minimum value is in setFunction()
0b27dc87d1a922fc5ecbb923d6982cab3be904f8;2012-06-29 09:34:47 -0400;- Updating libraries - Adding more polynomial fitting classes
073d01a00eb92df0fff0db1ddb5d7219e08da2c7;2012-07-06 15:24:56 -0400;- Added contour example - Improved contour factory javadoc   * Combined canny and cannyDynamic into one function
7dc05b9ada39fea0630e20a77bf0e7612607d4d6;2012-07-10 09:43:47 -0400;- Reworked non-maximum suppression algorithms  * Added two new faster algorithms  * Tweaked interfaces  * Removed low level algorithm interface  * Improved unit tests  * relaxed detection I suspect wasn't actually working correctly before
e69e1fdb574cde71540875311f56e8611560c97d;2012-07-10 17:32:46 -0400;- Added search radius to FeatureExtractor
bcc02cc2a85d099bafb5e55288697ce5beb5a0d6;2012-07-14 21:54:49 -0400;- Fixed bug for Descrive PixelRegion for integer images
e67647bfd5c8ca7733e58df11c0b54516a122e66;2012-07-15 23:15:58 -0400;- Cleaned up java doc in disparity score sad rect - Added min/max disparity checks -
82fab57612c8a25f08d55a98a5045bb83155933f;2012-07-21 20:50:27 -0400;Added android integration code and build
f9d09e2072f38ecef5f51a2bc5b31ccec362e631;2012-07-21 21:15:37 -0400;- Adding Xuggler ant build
c28f2dda2c3f2e73b09251189b885e8bd63d03b9;2012-07-22 18:01:20 -0400;- Rewrote image convert example - Unit test for EnsureUniqueAssociation - Updated version number - Integration ant build scripts
e1b0d84c6ec271fbd34fde207d2c5cfaad5ef0c2;2012-07-22 19:54:38 -0400;- Version 0.9 candidate - minor changes
a2d0eee8a3d2197922c9d613feae981f7b2437f6;2012-07-24 08:07:35 -0400;- Reorganized association score classes   * Created DescribeDistance to contain raw descriptor distance algs - improved speed of hamming distance computation by about 5x   * used a lookup table
d87523da5a4307ab3d35c3e4061538f2aa675939;2012-07-24 21:27:46 -0400;- improved hamming lookup table
bf74c910c8ad32edeb4ba7099d96a2c448a86bba;2012-07-26 18:25:37 -0400;- Changed brief description into TupleDesc_B   * ScoreAssociateBrief -> ScoreAssociateHamming_B - Added ScoreAssociateEuclideanSq_F32 - Added ScoreAssociation to FactoryAssociate
fc5fe47c7512826b0a89c36f1dcc2b6101768507;2012-07-26 23:31:09 -0400;- Changed DescribeRegionPoint so that it can work with any descriptor - Lots of related changes because of that - EVALUATION APPS AND EXAMPLES ARE STILL BROKEN
b862eac5abc77c19b40d62077c38910da0f2b30d;2012-07-27 10:04:03 -0400;- Changed DescribeRegionPoint   * process now returns a boolean value   * ret cannot be null   * new function for creating a descriptor
f463f257ffc8a04126388cb0992476e4f64738dc;2012-07-30 10:03:56 -0400;- tweaked describe feature interface again - fixed visualization and examples
6f17bbd103a935c46d6481658a2d00347f5dc7d9;2012-07-31 19:12:19 -0400;- BRIEF and BRIEF-SO can now process features which overlap the image border
6e09c40894f8b3323912112008a1a92f409bddb1;2012-08-01 14:17:19 -0400;- Added:   * InterestPointDetectorOverride   * OrientationIntegralToImage
a75e0f236b96cdde7ed869cbda6ade8f8c4840a1;2012-08-03 13:07:24 -0400;- minor change to ImplShiTomasi where an unnecessary conversion from double to float was removed. - FastHessianFeatureDetector wrapper returns the correct radius now
b02ea5465fac09a11ec1ec191ab60b73780ba725;2012-08-21 11:15:43 -0400;- Starting work on adding Nister 5pt Essential matrix - Experimental FAST detector using a lookup table - Cleaned up some documentation
dbaa9976ff14ac32838506171f1ecd01f01ab466;2012-08-23 09:21:28 -0400;- Nister Essential 5 appears to be working - Updated FactoryEpipolar and examples for the change - Added root finder interface to numerics
e26e3e2a609d9ffa19164000732acb3c1357ee5c;2012-08-27 21:25:15 -0400;- Nister Essential 5 appears to be working - Updated FactoryEpipolar and examples for the change - Added root finder interface to numerics
97718aba797708644eabb00e3bd0b86d9cfc057d;2012-08-28 09:20:11 -0400;- Cleaned up abstraction for epipolar matrices
9ec663e898a2297d6d61dd26c4bae67ff7c8e8ee;2012-08-30 08:31:41 -0400;- Initial sketch of two views one camera stereo - Working on improvements for Sturm polynomial root finder   * Nister5 too - Simplified expanded NIster code
63163798223c1b4cca5501577f18a5e10e4fa5c7;2012-08-30 14:01:17 -0400;- Fixed extra updates in SelectHistogramThresholdPanel
c02a90751e59bc220391a7a829a2dad464c8c007;2012-09-04 16:01:01 -0400;- Sturm root finder is working - Nister 5is effectively done too as a result
ef8aa9c8120c06614a6b23dd5503201efae58d19;2012-09-05 10:26:50 -0400;- Finished stereo from two mono views example - tweaked distortion API
a82fde4821e0f1755b4a8b2277498b2ecbc2043d;2012-09-05 19:09:34 -0400;- Fixed bug in SparseIntegralSample_I32   * Improved unit tests for sparse integral image kernels - Superfical tweaks in Nister5 - Created unit test for WrapFHtoInterestPoint
f5f845ed32c9a558e22baa2964e61a0a326730a4;2012-09-05 19:38:23 -0400;- Fixed incorrect implementations of InterestPointDetector   * Thanks jasonnn for pointing out this problem
904c913cee955ff591346f1803a37c305b80ad2c;2012-09-06 05:14:12 -0400;- Functions in GThresholdImageOps did not return int like they should   * Thanks jasonnn
c0ed8019fd071de51b342348b0309725058ef125;2012-09-06 16:40:50 -0400;- Template matching - Support for alpha channel in ConvertBufferedImage - Moved GeneralFeatureDetector to interest package
85cb10769835c10f89e383ef77aceaae0afd0082;2012-09-08 15:24:55 -0400;- Simplified Nister5 polynomial equations - Generalized and added copyright to python code
40f7979d3b0b48f3d41c08bdff8c2bc782aa5f42;2012-09-08 15:29:58 -0400;- Added unit tests
49a0611f03230df2243a0924579727ae1b7d65f5;2012-09-08 15:36:38 -0400;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
06e55642bb4616b5fe6035681a46a523049b39d0;2012-09-10 12:50:10 -0400;- Two more unit tests - Fixed bug in DistanceSe3SymmetricSq where skew was not handled correctly.  go unit tests
b579d6249dbc8cade4b7a867deac063dd5a94f20;2012-09-11 07:17:35 -0400;- Fixed NCC equation.   * Improved related JavaDoc   * Thanks Christian Kramer - Fixed VisualizeAssociationMatchesApp for new descriptor types - New unit tests - Updated comment in LineSearchMore94 for copyright - Update jar files - Fixed an equation in Nister5   * Doesn't seem to change results
40a6210e79643d6a902f1c9b6fbcd4803b8ab296;2012-09-13 13:35:55 -0400;In the process of rewriting the FAST detector since the old version was broken.  Found bug while validating its correctness against the original version FAST is now TOTALLY broken until the rewrite is finished
677d2f5926d75568c446e30433c0e2a2ffca0704;2012-09-17 18:02:05 -0400;- Finished reimplementing FAST feature detector
ea0484194130a61bb1514f77bf46b8f13d4cc4de;2012-09-17 19:00:49 -0400;- NccFeature now uses standard deviation instead of variance to reduce the number of square root operations when associating - Changed FAST to ShiTomasi inside of FactoryPointSequentialTracker to improve stability
5d5f86b238305a04637ba8613363beed34bf8e37;2012-09-17 19:05:19 -0400;Updating change log
1edff42cd0454dc73c841fdcad82135ddc2f413e;2012-09-18 08:33:46 -0400;- Unit tests for LensDistortOps - Minor changes
b0957d084c6845c3f577703f9688c9f37cd847dd;2012-09-18 14:58:15 -0400;- candidate for v0.10 - fixed a GUI bug related to binary image apps - updated change log and version number for release
1fe3f8756bb1a181a8d90107008ed0799ffd8a33;2012-09-18 15:36:13 -0400;adding empty file so that benchmark directory in SFM will exist
c39725b7782b5fa702c3978a0ae83b560b10b5a1;2012-09-19 22:30:09 -0400;- Added NCC for template matching - Fixed NCC score for feature association - Updated comments
21d0253fb43e83ad1ac34de24505cef2c0548ab7;2012-09-20 16:58:56 -0400;- Updated BenchmarkFeatureScore - Added BenchmarkTemplateIntensity - improved some documentation
94950f8f0d9e6dc182cdd689c9ae8ece6300601b;2012-09-21 18:23:45 -0400;- ModelSet now provide the original index of elements in the inlier set - Changed all ModelSet algorithms so that only one candidate is considered at a time - ScoreRANSAC has been deleted and there is only one RANSAC now
98c4b3f8ae8723942b7df4e6bfd3c38e58961592;2012-09-21 21:57:40 -0400;- Visual Odometry based on epipolar motion estimate sketch seems to be working
5db604a04f9222188fc140a3af1b3fb55289ff71;2012-09-25 16:08:22 -0400;- Improvements to visual odometry   * Attempting to add a triangulation free version.  It's having issues   * better visualization - More unit tests for geometry vision and other tweaks in the package
4b28c4b4585edb37c6a77a29d23dd8b53280c062;2012-09-26 15:52:54 -0400;- More trifocal code and unit tests
e780f44b863791cc0578019d22ab0011b12c3286;2012-09-26 20:25:33 -0400;- Refactored functions in geometric vision - Deleted useless VO algorithm - Changed a stereo range class thing
538bcc67ab5025b458e05663cf6670628e46f754;2012-09-28 00:36:12 -0400;- Trifocal linear algorithm - various refactoring
c58be703eac098415517bbd3fc0e239e50f4b52e;2012-09-29 07:45:34 -0400;- Adding trifocal estimation algorithms   * Works with perfect data, fails with even a little bit of noise
2a1879d60eb0d64db27089bb1a9a8bf2d52a9520;2012-10-01 15:42:57 -0400;- Refactored PerspectiveOps to create LowLevelMultiViewOps for some of its functions - EnforceTrifocalGeometry now uses the true null space to more rigidly enforce the constraints - New unit tests in geometric vision package - Python code for generating trifocal tensor constraints matrix
9a22915bf7a23282d82f4da4231d5d71bb5baf89;2012-10-02 23:04:52 -0400;- Added two "solutions" to P3P problem   * Need to convert the side lengths into a 3D pose - Added function which returns one real root from a cubic equation - Moved one of the stereo VO classes outside since it won't be working for a while
4e9e1acbfe482f5c7da7aef0b9c90c189c708523;2012-10-03 21:52:17 -0400;- Redesigned abstracted geometric vision classes so that their output is passed into the process function   * Removes ambiguity over who owns what data - Created generic estimator and refinement interfaces   * Don't like how strong typing and meaningful names are lost - Worked on abstracting P3P algorithms
e93452787943deffb5a3ade02b0cd28ae29a1d8c;2012-10-03 21:55:42 -0400;- Adding files that were missed last time
6d0b1d3fc9028c1c534f11d80bf2d2c72bb88003;2012-10-04 09:53:05 -0400;- Added back interfaces for specific problems for added clarity - Improved geo naming conventions - Added trifocal tensor abstraction - lots of other related changes
e4f0355d14550ec7341b4205037dd4e1af87c61e;2012-10-04 17:34:07 -0400;- more unit tests
3a79b78856a9340bc230f5409602244ff775681c;2012-10-05 10:15:18 -0400;- Added P3P algorithms to pose/PnP runtime and stability benchmarks - Improved PnP stability benchmark - Finsterwalder now uses PolynomialRoots.   * Improved stability by a large margin - Tweaked FactoryMultiView
0a4aca8e349e6338dfb5eb86fafa1e974f6e1c33;2012-10-10 12:31:01 -0400;- MultiViewOps    * added inducedHomography13() and inducedHomography23()    * finished all unit tests  - Fixed bug in GrowingArrayInt  - Improved JavaDoc
cd18f1561d50a4668a204096a05dc57f44d4bff9;2012-10-11 18:36:01 -0400;- Refactored FastQueue.pop() ito grow() since it wasn't pop() in the traditional stack sense - Added NormalizedtoPixelError for computing pixel error from normalized image coordinate observations - Added more trifocal code to MultViewOps
c13b705fa1e2b35e774c4edf272131e7c8e7a535;2012-10-17 12:41:31 -0400;- Changed FastQueue.pop() to FastQueue.grow() because it did not perform the stack pop() function - Added LensDistortionOps.transformRadialToPixel_F64() - Fixed a potential divided by zero bug in P3PFinsterwalder that occurs from pathological inputs - Improved JavaDoc in multiview package - Added new MultiViewOps.createFundamental() which takes two calibration matrices in as input
063794d9424fd19faca86b4cb180348352d8a5f6;2012-10-19 18:10:33 -0400;- Changed stereo visual odometry and all related code so that the stereo calibration can be changed on a per frame basis
a14e91045c32a133d4efaa545de9e03e451c5b52;2012-10-22 18:54:31 -0400;- RectifyCalibrated now returned the rotation matrix - Fixed bug in DistortImageOps.boundBox_F32() - Fixed bugs in StereoSparse3D - Changed behavior of StereoProcessingBase so that it doesn't adjust the rectification region because of common pathological cases - Added ImageGridPanel - Deleted old VO validation simulation code
a53c139aa7a1fb44b9ebe13301e62d025605a5ff;2012-10-24 10:23:05 -0400;- Changed PixelDepthVoEpipolar to use P3P instead.   * increased accuracy significantly - Added EstimatorToGenerator - Fixed annoying crash bug in WrapPixelDepthVoEpipolar
84f41c7181256cd40b4ef829712febdda6ea4ae8;2012-10-25 11:56:11 -0400;- Changed stereo VO and works much better - Added analytic Jacobian for PnP - Refactored names in PnP for consistency and removed a redundant class
624513e441221cd7af6eabc187f6d74c1e5a345b;2012-10-25 19:44:33 -0400;- Renamed PixelDepthVoEpipolar  * Added bundle adjustment.  not improving overall performance yet - Fixed bug in TrustRegionLeastSquares
8dc0c94e5981cb37c46fcc0d0ba605e61f91a9fa;2012-10-27 23:42:48 -0400;- Added getMinimunSize() to ModelMatcher - Renamed PointPosePair to Point2D3D - Improvements to VO
e9613933ff0a48862f0581aec91fd00fe33aa3f6;2012-10-28 20:11:19 -0400;- No more key frames in VO, adds and prunes tracks instead - Has cood that attempts to figure out what causes the minimum tracks to influence performance so much
007c0deb541bf9b3e1f513d9cd65d86f4be9f760;2012-10-29 21:15:58 -0400;- Cleaned up and improved documentation for VisOdomPixelDepthPnP
863a65a9e835572b11f97fd64c3a27f2641b8a4b;2012-10-31 09:14:55 -0400;- Removed mono visual odometry code since it doesn't work and needs a complete rewrite - Fixed bug caused by pathological case in Finsterwalder P3P - Added more checks to PolynomialOps.divide() - Combined multiple implementations of DetectAssociateTracker into one - Refactoring and unit test
130a9851537cb8403a1a0e46359ba0558c4ae80e;2012-10-31 09:15:57 -0400;- missed some files in the last commit
70e07666bd514a8bbbdde1b358f3dab53b3eb70d;2012-10-31 10:14:35 -0400;- Changed name of points in AssociatedPair
0aa35d1ba63debab30d57f7de46535e0952e13e6;2012-11-02 19:02:50 -0400;- Improved visual odometry app - Added media manager for xuggler - minor refactoring
7149ecff3482a223fb6151f8ce1c0580b9ec9709;2012-11-05 07:35:06 -0500;- Fixed bugs in DDA type trackers - Fixed bug in NccFeature - Fixed bug in WrapAssociateSurfBasic - Added 3D view to visual odometry visualization app
80f8a8fc0d579e6d2c4e1b92c3c9ba3dd540617b;2012-11-05 12:05:55 -0500;- Changed ImagePointTracker so that the internal data structures are not accessed
cea8925ded0cc8efad7698e39f6d91bebc9b5ac9;2012-11-05 21:07:56 -0500;- Fixed bug with converting to/from indexed BufferedImage images - Fixed file paths in evaluation apps - Added and corrected unit tests - Removed add point from ImagePointTracker
723c9c9c9b856aa2ecdffd8928c467fe9b6f099c;2012-11-05 21:12:44 -0500;up dating data
568900274c549b7281975078e9e16834f8ac2ef2;2012-11-06 18:13:40 -0500;- Adding stereo VO example - Added comments about detector canonical size problem
700ef922dd7af44fdeed5703930dfc088194106a;2012-11-06 19:04:00 -0500;- Release candidate for v0.11
458f6a60cadd9b856ee0d206126c51bafad394b6;2012-11-06 20:07:15 -0500;minor tweaks
e64ec7e075f73afc23ec94fd27ba810c02fccfec;2012-11-06 20:18:39 -0500;bah forgot one thing.  Oh well
3a95dc8711d0a3d3bed8b1f061eb695b363366a0;2012-11-09 06:53:17 -0500;- Fixed inverse wavelet transform so that it won't overload the original image   * Denoising could cause wavelets to generate pixel values outside the allowed bounds
6da292370d684dcb87bba9039209bd19877eea9d;2012-11-11 11:52:20 -0500;- Added first cut at fused tracker
fe1932ce7d9868b10f2b17d80fb9d3a3e71c4eb4;2012-11-11 20:38:11 -0500;- Adding combined tracker
080adcf651c323da3aa301d2642d700d9e1ec2d0;2012-11-12 08:12:56 -0500;Removed PkltTrackManager and pushed its functionality into the ImagePointTracker implementation
f5de1f00d99965bc34bba38bc0cecc005597af7e;2012-11-13 08:45:59 -0500;- Changed behavior of ImagePointTracker   * Updated tracker behavior   * Updated unit tests
32056223d754cf14f38600760375c6ae5abd33d0;2012-11-13 19:48:39 -0500;- Deleting ImagePointTracker
e752ff6cc25d020ae5390df64c0a84c1d1e462e2;2012-11-13 19:55:26 -0500;- This should have been included in the last commit
9c1fa8e078ffcefa32167e1fe096d9289ce13674;2012-11-14 10:15:30 -0500;- Fixed bug in SurfFeature.setTo() which was screwing up the DDA tracker - Tweaking FactoryPointSequentialTracker - Changed ImageMotionPointKey to use ImagePointTracker
bd4bafd77987ac538d6eb2d78823bef19062e7e2;2012-11-14 20:25:47 -0500;- More tweaks to FactoryPointSequential - Made sure NCC works in both 2D SFM apps - Fixed minor bug in DetectAssociateTracker dealing with out of bounds descriptors
3fce5872aa23445f312aab819e449a96c561ff1e;2012-11-14 20:26:05 -0500;Updating data directory
de8cf94a6d19a8b560dc95085c7b9556625686f6;2012-11-14 21:25:23 -0500;- Changed KLT pyramid PointTracker so that its behavior matches the previous version exactly.   * Major Change: Wasn't updating the KLT description
38f7fd7babdf9138676c850872dda226e329b7b1;2012-11-17 11:40:30 -0500;- Cleaned up Pyramid KLT and moved it into KLT package - Changed GeneralAssociation to take in the two lists separately
4a8411abf291cb34c919f11301cf59cd1362eb1f;2012-11-19 07:33:29 -0500;- Improved tests for ImagePointTracker - Added support for BufferedImage sub-images - Improved tests for ConvertBufferedImage
22ae3892ebb85a46fff7fab4841d173baf32346a;2012-11-19 12:23:36 -0500;- Updated tracker factory - Cleaned up combined tracker
c6c2e3f959377bd6b629d9bd04b47925a890608a;2012-11-19 17:13:45 -0500;- Fixed issue in WrapCombinedTracker - Minor refactorin
3cdecef0fdb92ec2ebe703c7764e2ca5fec37c03;2012-11-20 14:42:07 -0500;- Pushed numerics code into its own project - Removed dependency on libpja - Removed pointless IDE module dependency - Some other changes that I hope are minor
f3865e8a4f195e6d04bc89eb4288f66f2d7c4b4f;2012-11-22 12:11:27 -0500;- In the process of reworking some basic image operations
a074fea41c2f6e6a8e86ecebf449f53a8b8c7ddb;2012-11-23 06:48:53 -0500;- Finished adding unit tests for new image processing routines - Tweaked behavior of CompareEquivalentFunctions to compare against all equivalent
87ca995985d6ec999933f9c8e28af3b29295fe95;2012-11-24 08:25:54 -0500;- Removed canoncal radius from abstracted feature detection and description
87e0a3b50d77bd97f2d4c4d8029a5f42f9691fe6;2012-11-25 07:07:08 -0500;- Updated for changes in ddogleg - More work on SIFT detector
2ae7f5dfd27dfee9a05b0ddad78f72bae84b1b44;2012-11-25 20:24:03 -0500;- SIFT detector is working well.  Needs more refinement and to test edge removal
41b1f66d27db063a51e336b8119787d16c12157c;2012-11-26 17:15:18 -0500;- Updated for refactoring in DDogleg - Polished SIFT detector more.  Is working well - Added 2D kernel convolution
c4f5d29abee667e2e32b906d613c3cc8b1657a29;2012-11-27 16:05:01 -0500;Updated pom.xml  Maven now works!
cba8c75391bea9dce3a4b18ee372de529ee089a9;2012-11-27 17:36:34 -0500;updating libraries
a3603ff6d96cbb4f2c1fcb53b67b7ee16ad85b9e;2012-11-27 22:10:39 -0500;- Fixed and added unit tests - Tweaked behavior of SIFT for small images
d91dd5eb0a3ba0350c89debbeff97193b7faaf1a;2012-11-28 08:01:25 -0500;- Changed Sift Scale Space so that it works better with descriptor
043ba1be97d165250a1cb5c4ded1fd315da67c58;2012-11-29 15:32:03 -0500;- SIFT orientation and describe   * Still hunting down sources of instability - Added implementations of DetectDescribeFeature
1d8bef5ed747a7f1a2ba9c8856f5fcda0dbae3db;2012-11-29 15:33:26 -0500;- Added SIFT to visualization apps
15948b2b6c52da197b4e2d3699433c2e45b8e10c;2012-11-30 05:06:31 -0500;- Removed instances where a feature descriptor had orientation estimation slapped on top of it - Incorporated DetectDescribePoint interface throughout the code - Moved orientation interfaces into abst package - Tweaked SIFT descriptor algorithm
466db7614b70189a042af324f11a800e118f8cea;2012-11-30 15:58:19 -0500;- Improved orientation runtime benchmark - Tweaked SIFT describe a bit more - More wrappers
a653dd58e91fafdd1a419c0f74247cd2ea639d70;2012-11-30 18:02:27 -0500;- Factored DescribePointSurf so that the order of parameters in describe() is more consistent with rest of the code
708181b5dd12363ff4e24a7ba227db3a9d99b9c8;2012-12-01 21:05:34 -0500;- SIFT might be finished - Added interpolation class for approximating Gaussian - more unit tests - GrowQueue_F64 Now retries if it runs out of memory - Updated visualization for SIFT some more
3c83653f32168b464adc4f56970d506c72ecad8d;2012-12-03 17:55:05 -0500;- Filled out comments - Added more unit tests - SIFT detector handles small images better now
1c9d7d005adc983e2d747dc5978e5d397e0eeded;2012-12-04 17:41:13 -0500;- Candidate for v0.12 - Added ExampleDetectDescribe - Updated examples to use DetectDescribePoint interface - Fixed several bugs in examples - Deleted Gaussian12 and Steerable descriptors - More work on unit tests
c940644bf386420cb4094985ae340ec7a3a79dc2;2012-12-05 10:21:34 -0500;- Adjusted release data in change log - Updated text in ExampleFundamentalMatrix
fe61326bdf3e425c93217ff0bf426dcd0edc99f2;2012-12-05 18:57:44 -0500;- Removed TupleDescQueue   * Added a new function in UtilFeature to replace it
8417a84cf46cc2f7ad58e6b1db092b717c673541;2012-12-10 06:06:05 -0500;Fixed ImplSelectSparseStandardWta_* bug
aef399a9f301f24c64741898afbbb39c2fb81d57;2012-12-10 10:32:15 -0500;- Tweaked trackers in FactoryPointSequentialTracker - Clarified function name in UtilDisparityScore
e23a617f2f4d2f68b31ba16fc136a2b16ec8d6c9;2012-12-11 17:08:20 -0500;- Tweaks to factories related to interest point detection and feature tracking - KLT pyramid tracker can now generate an a arbitrary number of tracks
f3e3088e3f5b5059d75c3bd7f22a29a0fb9ff0ed;2012-12-11 23:39:16 -0500;- Renamed GeneralAssociation to AssociateDescription - Added AssociateDescription2D - Removed ABS() from ScoreAssociateCorrelation - Updated DetectAssociateTracker to use AssociateDescription2D
1f0c75c772739f895fb099ace453adfe01c0c6b8;2012-12-12 23:26:35 -0500;- Various refactoring - Deleted unused classes - Moved visual odometry into d3 package - Added a new abstraction for tracking, ModelAssistedTracker
2bbcaaf6525bcb63d481402fea16d22ee264a299;2012-12-13 18:37:52 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
e1c87acff157e463abb8f0afffea39d9925195ad;2012-12-14 16:33:31 -0500;- ModelAssistedTracker used by VO - other changes related to ModelAssistedTracker
b6a70357195cbf397765c87594b2d73c299af73b;2012-12-14 18:23:38 -0500;adding stuff in change log
ea92fda9b3bcb623fe8d5696b67b2b0a46c8f71f;2012-12-18 17:11:29 -0500;- Tweaks to SIFT
5b6438d7d42f5f64128287a2dd2fada378a0942c;2012-12-19 23:40:50 -0500;Fixing a conflict
435bf5dfea2c29d6cb25dbb683d6edde99662385;2012-12-20 15:53:34 -0500;- Adjusted behavior of SIFT and FH detectors so that they do a better job finding the requested number of features - GrowQueue now lets you adjust the array size
8f773dc7e361549e4ff6af8299c5546548655c78;2012-12-20 15:53:43 -0500;Updating change log
8233e2fecd02c749fb9283691af671cab2c01c4c;2012-12-21 13:56:48 -0500;- Added assisted tracker for KLT - Updated related code
0ab52734089f99657f99c2c56858534e29d2f38a;2012-12-25 20:06:04 -0500;- Chessboard calibration grid automatically adjusts minimum blob size based on image size. - This size threshold is now user adjustable
fc4e5ea1822f259347e42eaad414dfc668a595ab;2012-12-25 22:39:15 -0500;- Accidentially mangled two apps in evaluation
d07a6126d63aea9ed65f1af1c8bc7c3e7146c1fd;2012-12-26 23:41:21 -0500;- Changed PointCloudViewer so that a transform can be specified that it uses to go from rectified to unrectified coordinates   * Easier to use now, don't need to rectify an RGB image first - PerspectiveOps.scaleIntrinsic() adjusts the image width/height - BoofMiscOps.checkInside() provided for doubles
4bd8e9804ee0b3f0eb720ee64ffd3dceee363089;2012-12-27 23:28:49 -0500;- Made square calibration grid detection size threshold automatically adjust by image size and user configurable
6c4d9071578b0f6c4761b9c1be385f5fa69ab91c;2012-12-29 21:00:39 -0500;- removed deprecation from DescribeRegionPoint.getDescriptionLength()   * renamed to getLength() - Added code to convert between different types of TupleDesc - Fixed bug in TupleDesc_F64 SAD scorer - Added support for MultiSpectral to SingleBand conversion - Added GConvertImage - Split off Interleaved images into its own type - Improved image equality unit tests
973dd34dae7466e51754ab61bde48a3eef2d1fc8;2012-12-29 21:05:54 -0500;- removed deprecation from DescribeRegionPoint.getDescriptionLength()   * renamed to getLength() - Added code to convert between different types of TupleDesc - Fixed bug in TupleDesc_F64 SAD scorer - Added support for MultiSpectral to SingleBand conversion - Added GConvertImage - Split off Interleaved images into its own type - Improved image equality unit tests
08a7aa2a3916634b3c1a2d87ccb9a5084ef517ce;2012-12-29 21:09:13 -0500;- Adding missing files from last commit
61df378fe59559e505d0d767c2cbe3595fd7b318;2012-12-29 21:14:51 -0500;- Fixing a type-o that got committed
4dc4f166971bc2ad89cf47edab5d52247eff656a;2012-12-29 21:21:53 -0500;- Missing another file...
85e041c1a6b216e2dda21f1e7a98d4408c1fa26e;2012-12-29 23:29:07 -0500;- Made descriptor length naming more consistent - Added descriptor length to DetectDescribePoint
21a98471cac1d47c0f2b01bbaf5741d69082f23d;2012-12-31 07:29:10 -0500;- Added app for visualizing results from different association technoqies - Changed the way SURF features are configured to use a Configuration class
2c220d0008d58f03ad59214f697f0f10b6505f09;2012-12-31 09:56:37 -0500;- SIFT now uses Configuration classes
5630b982ea2d48fa34d19018c19ef4a494eef4c5;2012-12-31 10:03:22 -0500;- Updating copyright notice for 2013 - Updating maven pom.xml
1ab6679aa6b1118c1c5994e20c633ea124457c50;2013-01-02 00:11:26 -0500;- Added and improved several unit tests
f8d518754bb59149ce89926880df48e8e440b34f;2013-01-02 18:52:58 -0500;- Fixed bug in PixelMath.subtract() for ImageUInt8 - Improved JavaDoc - More unit tests and related bug fixes
aa2215930cbb57fbeb223a7b2aa1c2cbdc4cb12e;2013-01-03 17:31:40 -0500;- Added the ability to set a score threshold in ScoreAssociation - Created MatchScoreType to provide more information on the score's behavior
71a4e8b99fc290892285c2df546445fc4b2eee4b;2013-01-03 17:57:41 -0500;- Improved comments - Adding some temporary debug code to AssistedTrackerTwoPass
0a451b0debb08ed83d3697ade7379519907aa801;2013-01-06 22:10:00 -0500;- First pass at a new stereo VO algorithm - Created a new point tracker where the user specifies spawn points by location - improved javadoc - fixed image convert bug
61d8d4676332e97bf08e291ce39e5974b287f8f0;2013-01-06 23:23:56 -0500;- Removed max features from KLT config - Separate factory functions for KLT spawn and user
c5396f4dfd1a5597f1915887c2f12a1607eedce4;2013-01-07 21:30:44 -0500;- Added algorithms for refining pose estimate in stereo VO
1177ef77684e7983e1cae991afa4a6b2dd2138c1;2013-01-08 09:51:37 -0500;- Added ConfigExtractor and updated factories - Unit tests
e5a9d723bd913f8d91930dc0fcfdf05b36348320;2013-01-08 15:36:17 -0500;- Tweaked point tracker - Added a corner feature based point tracker for Aux
4502de23bc26f87753fba724376d5fabe7cf1f10;2013-01-08 15:44:16 -0500;- Adding files missing from last commit
4518b2e62bcd9ef917fda63382b80bfadfe46821;2013-01-09 09:08:15 -0500;- added invert to GeneratePixelMath
6500d06718d127de4a215fcefba73dad398b6876;2013-01-09 15:16:23 -0500;- Fixed and added tests - GeneralFeatureDetector can now detect local maximums and minimums   * Subregion capability has been removed since it didn't help that much
6ac71110a77a6ec04143c257cf98cdb8e38642c8;2013-01-09 21:59:49 -0500;- Fixed bug in non-maximum suppression algorithms where the ignore border was incorrectly handled
02b5639a472362269c80381d4729d3c018873e9c;2013-01-10 08:46:11 -0500;- Adding the ability to detect local minimums and redesigning FeatureExtractor - This is an intermediate step in that change.  All unit tests pass that should so far.
5b319d1ef31725f4d2ecc3ef9de4d9ca0c1bc802;2013-01-11 13:17:44 -0500;- Various changes to non-maximum suppression algorithms and interfaces   * can now detect maximums and minimums - Fixed bug in SortBestFeatures - SIFT detector uses new non-max code
ef38e547d3892ac04f345a8f437c0eb754f2b3cd;2013-01-11 13:18:41 -0500;- Not all files were added in the previous commit
eab345d14c8f8ae69a2b671f13c31eaa45ccffc5;2013-01-13 22:19:35 -0500;- Split visualization for point detector and point-scale-space detector - More code to handle positive and negavtive features - unit tests - GeneralizedIntenisty indicates if features are positive or negative values
068a69ce2053ac9a7db4944694c8a5a89b2e9835;2013-01-14 10:35:11 -0500;- More code related to multiple sets of feature detectors - plus some refactoring
40057a3a4c8ef3a85f6617a6169e8ef11b9727bd;2013-01-15 18:29:53 -0500;- Added another stereo VO algorithm
e5585c9f25fb5c302fcd753762d313ecd98107af;2013-01-16 06:53:49 -0500;- Calibration examples now check to see if a target was detected in an image - GeneralFeatureIntensity did not provide separate candidates for mins and maxs - GeneralFeatureDetector did not actually  check for local minimums - Renamed SortBestFeatures into SelectNBestFeatures and deleted the original
8587159831164a1f24199fe44354ef872478cd00;2013-01-16 15:55:36 -0500;- Fixed broken tests - Adjusted parameters in FactoryVIsualOdometry.stereoQuadPnP - Changed FastQueue to allow for delayed initialization
a2c3046632e7dec5cbe6bdd23c3101b4d337813d;2013-01-16 19:55:56 -0500;- Changed more stuff over to Config style factories - unit tests
646e325efc390100909d7d5453365b7d72cd6763;2013-01-19 17:32:54 -0500;- modified old stereo Vo, still a sketch - unit tests - Created PointTrackerD for extracting descriptions from tracks - Created DescriptorInfo interface
d8549cf688c197112b62c4c9624a9e29e0b980e5;2013-01-21 13:41:16 -0500;- Added capabilities to Associate interface - tweaked association related algorithms - unit tests
84dc148eac421cb517aa1a302ee77a178cdf8ca5;2013-01-22 19:23:48 -0500;- New VO is working now - unit tests and bug fixes
d383b525ae7c7e4e9e6adb05676d0e3c312a2b56;2013-01-23 10:30:02 -0500;- Removed PointTrackerAux - Renamed FactoryPointSequentialTracker to FactoryPointTracker - Modified combined tracker for PointTrackerD
552d4305840c0b979788a8a3dffdb138f051f6f4;2013-01-24 12:27:30 -0500;- Various stuff dealing with trackers and VO - Fixed a bug in RemoveRadialPtoN_F64 where it couldn't converge
c2acbce77fd95e44cb650f204a18f87cd1a24756;2013-01-25 14:58:11 -0500;- Removed original two pass code from 2D SFM - Improved image stabilization by checking to see if a significant percentage of the image has points in it
2349fc81585abc91e1a1c40526460fd09e166367;2013-01-29 23:42:13 -0500;- Improvements to Android - Added max gradient to gradient
47016c814fff05d767154e279551dc67b5189223;2013-01-29 23:47:14 -0500;Merged change.txt
6483857fc838287648da3656a01a257b68f0816b;2013-02-01 21:52:43 -0500;- Reworked stabilization and mosaic code
45206632c793e941c7d517b965f73696d4f90187;2013-02-01 22:38:39 -0500;- unit tests and stuff
c93973fd8c49b5e5255668bff07568471c458abf;2013-02-01 22:38:43 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
016df2728fa208f2fb1d2b1aec025637dc805729;2013-02-02 09:00:12 -0500;- Improved fault detection in StitchingFromMotion2D - Created a factory to simplify Motion2D code
7969fbcb0142a7adff253cc75fcb9a8869890020;2013-02-05 07:51:28 -0500;- More Android visualization and comments
648b21aa4f356e7a59dcc55fec722e9a519bfc64;2013-02-05 07:52:16 -0500;Updated for previous changes
9c1d09c6a8af8db35ecafeaddde21ff6eae08fe8;2013-02-05 07:54:24 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
80d4bb751a3c52de8eee2c08a26ab7a97e491ccd;2013-02-05 21:19:01 -0500;- Tracking down a change in KLT mosaic behavior
e5fd816e206b8b711c9ef82cbc1b95d1c430b20a;2013-02-07 18:21:25 -0500;- Fixed possible bugs in implementations of AccessPointTrack3D - Improvements to 2D stitching - More unit tests
9eb0a010850478e0eec426a8203fdea551b9f758;2013-02-07 20:12:35 -0500;Fixed calibration related bugs and converted it over to using class type parameters in factory
23c649ba865a3833172963692fc7b0d9b3f62721;2013-02-11 09:25:32 -0500;- Added unit tests for stereo visual odometry - Improved visual odometry documentation - All unit tests are working that should be working
61dca83f8d26d639099cbae57d304de26b9cd037;2013-02-11 20:37:27 -0500;- Can listen in to CalibrationPlanarGridZhang99's progress and cancel
2f299614737405f6f60e6659d71943c9b914205a;2013-02-11 20:53:02 -0500;- Fixed a compilation issue
0731362518981ac1618bfd80e86dfa5b0d4a96ee;2013-02-12 10:47:45 -0500;- Fixed dependency issue in calibration.  It was referencing objects from IO, which it does not depend on.  Plus swing stuff too.  No idea how it compiled all this time and was just found.
0c2ddf8c15e4389002446c306a2ecb7d0ae1338c;2013-02-12 10:48:04 -0500;- Improved fault detection in StitchingFromMotion2D - Created a factory to simplify Motion2D code
876f682e5351fa9b4a046972e258cd3af9052cce;2013-02-12 15:22:32 -0500;- Added example for image mosaic - Better code comments
5123255cf5a1f4bf7463b856d8546b9f9c7000fa;2013-02-13 09:29:46 -0500;- Fixed bug in combined tracker
a5ca71ad29cfbd6881f6450f6be781139aac14f4;2013-02-13 17:57:05 -0500;- Visualize disparity image - Reading/Writing camera parameters
25ac3e960a3fb19cc4a4bf7f69d19578bc65b6ed;2013-02-14 07:46:36 -0500;- BoofCV Android Example
9a34540053e2cc4fab3855d34108e2fa4a7bc9fd;2013-02-15 09:19:48 -0500;- Improved square grid detector so that it doesn't throw as many fatal exceptions
96bfef1070f2edd9778021b51ae84ed32adc0ff0;2013-02-15 12:36:37 -0500;- Added support for ImageSInt16 to stereo disparity calculation - Updated two view one camera example
93f08e2e516c391acfdc56526256ff44ab41fae7;2013-02-15 22:21:33 -0500;- Fixed a bug in mono calibrate application
50630a6cc84501fa6f9f60582875ed17a8f4bf31;2013-02-16 09:08:23 -0500;- Fixed bug in ConvertBufferedImage - Cleaned up visualization stuff
91e8016281678675a8eb6f5fa984a5aa94be9d35;2013-02-16 15:22:10 -0500;Candidate for next release
9517265e0fe8e335bd3eca70f9e3dc95df535bcb;2013-02-16 15:37:51 -0500;minor tweaks
9524e1753ca084f6ca62813e0813f53fe2ac8361;2013-02-16 17:11:26 -0500;- Tweaked examples
5d545d81e84460bd03f23c48edabfe31e7844184;2013-02-20 09:58:28 -0500;- Added histogram to ImageStatistics - Calibration algorithms use the histogram to select a threshold now
6e03101024d0e0ddba6cb34ba26eee7bc61fe4e6;2013-02-20 09:58:56 -0500;Adding missing files to last commit
ddf98e7c0c199bc48b6eaa6264dd72901ed50f1e;2013-02-21 21:30:02 -0500;Changed how the size of calibration grids is specified
0c0ca6d9ee14c176bf9e84ba73ee0e08876f2969;2013-02-21 21:30:27 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
1cd0219fdef0de03f33d5bb73f93af5e6186a434;2013-02-25 16:59:19 -0500;- Image enhancement
2508d8e4fce7619e88220cc8ac77ef7731b06363;2013-02-26 13:51:57 -0500;- added sharpen filter to enhance - ConvolveJustBorder_General can convolve with upper and lower bounds now - BoofDefaults now doesn't provide an instance for default borders.  That would wreck havoc on threaded apps.
c49e52cabdd128ae182d015127ac9df117b51dca;2013-02-26 16:54:47 -0500;- More bounded convolution code - Various unit tests - Adding support for streaming video - V4L4J interface
9e03f8ea2cc7938c3a46d91b74cac542639c4f55;2013-02-26 18:13:01 -0500;- Changed enhance to use a specialized function for border rather than convolution
0698043095bf45b71e813d58e85fcbf8e4acb3e2;2013-02-26 18:25:28 -0500;- reverted changes to convolution.   * can't think of any other use cases and the specialized code is easier to manage.
ed1712e1d1998d4b9e22bb0f7dffe71ef0953d8c;2013-03-01 15:34:30 -0500;- Initial sketch of new binary contour blob label
e50a5a89b93d472fc9275981bb7f210ca6cad6f5;2013-03-01 18:43:36 -0500;- Added ImageMiscOps.fillBorder() - Speed up new binary contour algorithm by a lot
ef6d87919cd492d8fb211f79bdcdaa68496f4e11;2013-03-03 17:55:38 -0500;- more testing for new contour algorithm ,which seems to be working
49aec40d0d58c2560e4125eaf6bccbbdea942525;2013-03-03 18:01:46 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
4bc94ecba3c7236d34a21799856b24d5a85ab89b;2013-03-05 21:26:53 -0500;- Removed some old code that's no longer needed - Updated canny detector to use new code - Updated binary contour to use new code
13a298e9ae569b4a0bd675402c33f51838c8fb2d;2013-03-07 08:59:19 -0500;- Continued improvements to binary contour and canny edge - Got OpenCV comparison to compile again - Reworked examples and demonstration applications - Updated rest of the library too for these changes - Tweaks to android example
0b6711f7bf11a4c9394582de33afe25f5bf83e2a;2013-03-08 13:58:32 -0500;- Fixed unit tests - Added more unit tests - Fixed a problem in HysteresisEdgeTraceMark
175be904429cea392ee7f3fb663ec6a4bdb5c94c;2013-03-11 19:36:31 -0400;- Adding ways to convert between different color formats
a1f7f12d707649f785c2cfb5bb04c094e4726d74;2013-03-11 23:47:54 -0400;- More improvements to color processing
7c6355d930fc68946fe419697a0feaa1a9882eae;2013-03-12 08:38:35 -0400;- Tweaks to color code   * Added benchmark and improved comments
c237d50058fb5ff62473f909a6f72d6df4fed780;2013-03-12 08:39:25 -0400;- Forgot these changes in the last commit
61994a353eb6cf7497f9d8a4de5bdbe9a53e902f;2013-03-12 22:05:15 -0400;- Using XStream for XML serialization - Improved detection of calibration targets
b2c21a28b35bfb6b199a9ecaf14932999345fe12;2013-03-12 22:26:31 -0400;- fixed issue with new xml parser
fed89d53840a90869ed60ae41973a61109dc7abd;2013-03-14 08:06:29 -0400;- Added vertical line to RectifiedPairPanel - Changed to inlier percent in VO example
c74c9cd847ee9a8324859beebffaeb5c17d3680f;2013-03-14 12:18:14 -0400;- Added ConfigFast - Improved FAST JavaDoc - Changed HoughTransformLineFootOfNorm to use unsafe_set() - Updated applet code
8d7ff63daecb7a8beb1bd428e2bea438a583c8ab;2013-03-17 23:12:08 -0400;- Improving documentation - put a code generator in the correct package
2811cf743f5f5293055a14a938b6e57a7fa1a890;2013-03-17 23:12:53 -0400;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
bc544e3c25f2fda60aec930036d93a13afa9bd61;2013-03-18 21:40:11 -0400;- Changed image pyramids   * there is one class for the data structure and updating   * Pyramids provides information on the blur in each layer
952d8119c4fe37a5b61cc47f6b91f031cc6ffcef;2013-03-18 21:40:53 -0400;- Changed image pyramids   * there is one class for the data structure and updating   * Pyramids provides information on the blur in each layer
12462f0c1ee712ca5717597de0b65f64ea06fccf;2013-03-19 11:06:15 -0400;- Consolidated GaussianScaleSpace and other features detectors into one class - Removed everything related to GaussianScaleSpace - Fixed a few related bugs
69f8ead3c4510386663e04a541258c31aab33e1e;2013-03-19 12:17:14 -0400;- Removing debug print statements - Removing last traces of ScaleSpace class types - Added reference to new test image
c1a9f5824023a141d2ef603acce4b34d11a8d3ab;2013-03-20 10:36:41 -0400;- Tweaked stereo disparity example - Added a second stereo disparity example - Tweaked point cloud display panels
5549f078a80cad61db2fac6eabb29136c692cf2c;2013-03-20 17:11:30 -0400;- Renamed an example
cf328aed31d8259d56ef1c9503ae0a09c8265aea;2013-03-22 09:21:37 -0400;- Added polynomial fitting
2780deffb2484100b7c0d4ceeed0d70688ed57cd;2013-03-22 09:22:20 -0400;adding plynomial fitting
3e725adf6b8e3024e9b6b11f756bf17fbbacb412;2013-03-24 21:24:03 -0400;- minor changes
e224873cab12aa8d7f9453f282665dbc9da42251;2013-03-25 23:31:38 -0400;- Fit circle - fixed bug in SplitMergeLineFitLoop   * improved unit tests
ec1806e0257185a9e122f883824ab35eb9a7b249;2013-03-29 22:34:24 -0400;- Finishing touches on fitting ellipses
4759e01aedf21a207c07c157a311b5c7e3911923;2013-03-31 13:30:53 -0400;- Added visualization applications for image enhancement and shape fitting - fixed bug in ellipse fit
743ecf5f3ecf6d93437da64d9f8ce8ffa40c8dd7;2013-03-31 18:33:58 -0400;- Improved speed of BRIEF computation - Tweaks to visualization apps
1e39a0f8e565570c06fdba1eea969db58c78e644;2013-04-03 15:24:45 -0400;- Made PointCloudViewer more adjustable - Added Contour.copy() - made BRIEF descriptor more generic and consistent with the literature
d991fca7d7760f256e924be60c01682aef0e49eb;2013-04-03 23:13:00 -0400;- Fixed javadoc for ImageSingleBand.subimage()
f0f9fe56ac1575fc5bcd0e38d399de3e1bfbe089;2013-04-04 14:25:41 -0400;- image mosaic can now work in color again   * MsToGrayMotion2D - Generalized how images are specified in several classes so that types other than single band can be specified
0d96dd6bbc8ece81f6f3326f75151d5c1c9260d6;2013-04-04 16:39:22 -0400;- Updating IntelliJ files
7512446d769398dc426573a8c11cc9488386a919;2013-04-04 18:06:26 -0500;- Adding FastQueueArray_F64
9f5b3d7595aa21bf4a479d18b266ba6d18494258;2013-04-06 13:41:20 -0400;- Added new way for creating discrete image pyramids by down sampling square regions
0f1ca3d7480e8bf610f4c04a879b92c2a1125fb9;2013-04-08 12:49:21 -0400;- Android NV21 to RGB works - Improvements to YUV
bf550f8d87f2a01c7bc57b18eb2aa483d6992cdc;2013-04-09 15:46:23 -0400;- Fixed bug in contour - Tweaked examples
bcde4aa55de298c3e0edac3df5bc6cf0c8ddf145;2013-04-12 05:49:12 -0400;- Tweaks to visualization code to make it work as applets better
ba780221c3683a8b4a110650a47d1ec8afc9950e;2013-04-12 10:02:12 -0400;- Updated EJML jar so that it's more beans compatible - Using a hacked xstream so that it will work in applets
96bebb9bdbcd1aa0f737114c4bc84843371b4399;2013-04-12 12:13:00 -0400;- Updating data directory
acc7007c0404674d15e28eee8bc7c182533649c9;2013-04-12 14:50:23 -0400;- new hacked version of xstream which can be run multiple times
ff6d0b25c045a8cf6897902872d478443328e72c;2013-04-12 15:30:17 -0400;Fixed Affine versus Homography bug in video mosaic app
78aa6e4416eb338ae630bc93d192510deb17a549;2013-04-15 09:53:59 -0400;- Final candidate for v0.14? - Tweaks to example code - Added ExampleColorSpace
cb0c61eec442cae9574e270d7a76b126ed42cd0f;2013-04-15 17:41:04 -0400;- ant scripts for building v4l4j integration
25ffff6eebdad88b5e8836640b98b1e9ad950256;2013-04-16 15:44:19 -0400;Adding kinect integration
813bf833001d0d1df68312015b805d803e273df8;2013-04-16 15:46:37 -0400;- Added missing copyright info
dcd7c8be23af5d6c34c3e9c3775c48470cf2f2f2;2013-04-17 00:02:22 -0400;- RGB band order issue resolved - kinect log example can now display images
2cd1d8bc0fec174d3cfd9dbe315ee8331129372b;2013-04-18 12:35:12 -0400;- More improvements to kinect integration - Added image PPM support - Fixed bug Zhang99Parameters where it wasn't copying skew - Improved PointCloudViewer so that you can move the view around more - LensDistortOps.removeRadialImage() you can now specify how borders are handled
2e8907fda5fcad9c7636ba5508bc72eaa6f64bd1;2013-04-18 13:38:07 -0400;Fixed two bugs and updating data directory
baf28a301d930149142f30309f2da4cdfd5d9c35;2013-04-19 09:58:07 -0400;- Added code for depth sensor based visual odometry - Fixed bug in kinect to 3D code
54b86e0c51c75a15b9e12296225080e02e98ced2;2013-04-19 12:21:21 -0400;- Improved documentation of units in calibration
ec5d4789759b7b5a0a3898cf277afdd9534f4b0a;2013-04-25 11:29:23 -0500;- Adding Tuple2 data type for passing around multiple return objects - Added MultiViewOps.decomposeHomography() - Added IntrinsicParameters.set( param ) - Added set and assign to AssociatedPair - renamed variables in DistanceSe3SymmetricSq so that it refers to cam1 and cam2 and not key/curr
0a69ce46471c81a520f867fa48f9d6b5ed12596c;2013-04-25 21:11:48 -0400;- Added support for non-symmetric chessboard calibration grids   * several modifications in chessboard code.  changed logic a bit. doesn't *seem* to break anything
8fdd9ee5e7f9a8cb2cb89cd06c5203515db8b387;2013-04-27 19:16:01 -0500;- Induced homographies from planes
b6b6a13ead2751929f7e088f8b69a0cd720ea884;2013-04-28 22:38:48 -0500;- Fixed bugs related to homographies induced by planes - Added related functions to MultiViewOps
7ee9e586175b0a209cb9667eef14057b78bfbb9b;2013-04-30 21:49:59 -0400;- Can do visual odometry with kinect data - Improved support for 16bit image conversion in BufferedImages - Example code and visualization for depth VO - New format which combines arbitrary files together   * PNG image streams because of their support for compressed 16bit gray scale images
d2305d21b9269576c24683c20060334e25b25ed9;2013-04-30 21:55:56 -0400;merging
ddee821672e8b5fd61c388ba8fcb1969b8253a10;2013-04-30 21:58:10 -0400;conflict resolved
ab148448c723583ca2c47b5984b98e0f6347f66e;2013-05-02 08:59:03 -0400;- Improved chessboard calibration so that it can detect visually small target - Fixed bug in stereo calibration where if the right image failed and not the left the left had an extract image
d61e9812532ceb2e8cf4d01308aadc8f99c4a6c0;2013-05-02 14:47:06 -0400;- minor tweaks - unit test
489d6c2af633ec31af4f6027a545de63282e83fb;2013-05-03 12:06:37 -0400;- added NearestNeighborPixel_U16 - other minor changes
9c54af8755a9c088c3287232434bc308975057f2;2013-05-03 15:37:02 -0400;- Pushed some kinect functions into the main code base since it can support other RGB-D type sensors - Other minor bug fixes and comment changes
122f5d46d7e0eca642c1717ca96fc16ec7538c22;2013-05-04 11:10:38 -0400;- Added sanity check to visual odometry apps so that it won't try to use a config file with the wrong resolution - Switched reference to new data files for kinect - Created VisualDepthParameters for RGB-D cameras
1a9878df240c77e6d80d852c2bb04e02976a8910;2013-05-06 17:53:32 -0400;- ImageStreamSequence was reference an internal java class
abba27f45aca2c2a9774e025b5de9b47f066d074;2013-05-06 18:47:43 -0500;- BoofMiscOps.pause() changed from int to long - Fixed color order in save PPM
4cf5418739fd183b168e9ac63c963e7daa7366f3;2013-05-07 18:27:30 -0500;- Updating for changes in georegression - Changed implementation of saveXML() slightly
c99e6e3285c939dce263da65c06c8a1830eb3e89;2013-05-24 12:08:34 -0400;- committing a few minor changes - BoofMiscOps.pause() handles terruptedException better
a73fdcd237898062fae8a60cd3e3ddcfaf3afece;2013-06-03 00:45:10 -0500;- Added initial attempt at a monocular visual odometry algorithm which uses the ground plane - Fixed JavaDoc in TriangulateTwoViewsCalibrated - Modified GImageSingleBand to allow index access - Added code to create an othogonal overhead view of a plane - Tweaks to visual odometry interfaces - Added numBands to ImageDataType - Added addAll() to GrowQueue* classes -
7eea52e92e4d83d314a068540d6778eee0e95fa7;2013-06-03 10:04:13 -0500;- unit tests - package name refactoring for overhead
772c2905956304de0dc21116d7e12354a9570afb;2013-06-04 09:58:25 -0500;- Added StereoVisualOdometryScaleInput - Changed StereoVisualOdometry.getImageType() to return ImageDataType   * Same for DepthVisualOdometry - Unit tests
79b47143c14110363dbb494a7789ce303a1c73e3;2013-06-05 22:41:27 -0500;- Another planar VO algorithm (mostly done) - Better unit test for planar algorithm - more related code
e825540a20f5f7b378b630aa4241840bfcc786c7;2013-06-07 14:04:41 -0500;- Updating for changes in georegression - Changed implementation of saveXML() slightly
b4e3d9ecf676238bf2e83d48d561759325cd8dae;2013-06-13 10:40:03 -0500;- Added important missing warning to feature related JavaDoc - Minor tweaks to mono plane infinity VO
d4c072f87462a8e3f44507b8c29813182cb5caf9;2013-06-14 17:46:22 -0500;- SIFT discards detected features which are too close to the image border and can't be interpolated
767ee3ec7859b45dbe145580be10144204c7196d;2013-06-14 19:26:25 -0500;- Updating Maven build to reference snapshots
4493b353c30e4f71609da5e044888e42115dd252;2013-06-15 17:56:16 -0400;- Adjustments to pom.xml so that it references correct libraries - Formatting in BoofMiscOps
e81a002825fee960637fcc2cb35eeb11f5bbc12b;2013-06-16 15:24:47 -0400;- Visualization for planar visual odometry - planar VO wrappers support track interface - Added MonoPlaneParameters
80de31069ece360e168dc6a8c16991fe512273bc;2013-06-16 22:20:30 -0400;- Added 2D view to mono plane app - Example for mono plane visual odometry
111c18107125cd12796310a0120300690c47821f;2013-06-18 15:39:58 +0200;boofcv can now be build with maven again
8fdbec1185c09de55c37c3c1c7dc32562df9e4d8;2013-06-18 12:19:21 -0400;- minor tweaks
4a40b95b1a80fe264e10c1e11c9405b70c701508;2013-06-18 12:20:33 -0400;Merge branch 'master' of https://github.com/JensKapitza/BoofCV into JensKapitza-master
d6f5eeb6d9b82fd67c5e639e9c1eed53412daee5;2013-06-19 00:38:24 -0400;- Minor improvement for SURF - Added a RGB re-order to ShowRectifyCalibratedApp - Clarified SIFT config parameter - Switched to standard xstream   * breaks applets.  need to fix that
69bcfdb05e4bfd0f3bed3149a62c2d3ef6cab95b;2013-06-19 13:31:39 -0400;- several patches for x-stream classes have been hacked in and now works with applets while using standard x-stream jar
6aed23c969cf1499e285cab8108b32d33e887268;2013-06-19 16:49:16 -0400;- Fixed issue with orderBandsIntoRGB() and ABGR images - JavaDoc - Added orderBandsIntoRGB() to a few evaluation apps that were missing it
f2264193ba7f9d88cd5f3ed2182ae3acc2831cf0;2013-06-20 02:19:34 -0400;- moved applet into integration - fixed bugs in examples
68fe4b59b9b9a78c6892b68f890da960c4e66d25;2013-06-20 02:37:38 -0400;removing unused file
c1e84ca5b58c4bc911e234a0eed98d8dfcb5abc4;2013-06-20 18:26:03 -0400;fixing bugs related to applets and other tweaks
5e987fb311602f92a01a6873db725c4d9cb8fbf6;2013-06-21 12:32:58 -0400;- Final 0.15 commit? - Updating change log and pom.xml
fd57f89589f91a8d3e5f4423809f55c632093884;2013-06-24 17:31:15 -0400;- fixed version in pom.xml
71492c8296779da2880db565b09e7e1a0cb54a1d;2013-06-30 16:55:48 -0400;- Simplified computeDescription()
565408a5ec1f14acf1a4c547a5e30689fc9c0fc9;2013-06-30 20:29:12 -0400;- Removed getDescriptionLength() - Created a class for computing descriptors from MultiSpectral images
4dca9baba56a70906b596616f48bf331e36fa833;2013-07-01 14:26:47 -0400;- Added Color SURF
2d46b59f802c483a772a86c2f0a9fcf352715226;2013-07-01 17:30:33 -0400;color SURF normalizes the whole descriptor and not each component individually
3f8c649acbd7e79b52ec62315f18153d574c2ba0;2013-07-03 12:29:52 -0400;- Fixed PyramidDiscreteAverage.  Incorrect getSampleOffset
8abf3c166cfe1c7bb47631de824499f2b3b80a1f;2013-07-09 22:33:25 -0400;- Added integral images for F64 and I64 - added models for scale and translation motion
7c7e504f1568e6b26884967460352ac80c496310;2013-07-10 09:38:53 -0400;- ImageRectangle now extends RectangleCorner2D_I32   * Added function for intersection
d93ae99782f3ff48d561b68f1198da7be91f2f50;2013-07-14 13:44:11 -0400;- fixed bugs in specialized FastQueues - Added more support for different image types in IntegralImageOps - Made NCC distance more mathematically correct
419f42e045fad105b68d24506a750ae312ef66b3;2013-07-14 18:31:35 -0400;- fixed unit tests - reorganized integral image unit tests
3b740a9397ba959f207194c7f73eb32de811d1fb;2013-07-15 16:54:14 -0400;- KLT setDescription() can fail due to lack of texture now
40b10d45432ead6b47f90289187c8b9f211fdcc0;2013-07-22 21:50:55 -0400;- Adding TLD code - Created a recognition package since there wasn't any place good to put it
fcee29e4e3db055ca4f698ab1e05863805944ce7;2013-07-22 21:52:35 -0400;- Adding missing copyright stuff to recognition
3c8b80d2b96747c86d5e74600338439cf5ff04e7;2013-07-26 10:20:35 -0400;- adding recognition to ant build script - improvements to TLD tracking.  Ignoring what the paper says.  Starting to perform close to what the authors claim
dcb1b9f5ff5351b59b65bbf41d906267c6b24c04;2013-07-28 12:18:45 +0300;- Improvements to TLD   * Almost always learns   * Pyramid has been tweaked to handle smaller images   * Performance significantly improved in several scenarios
73bf58717715d953c6f55f2e0d8262ba73c8ad0c;2013-07-29 03:19:08 +0300;- TLD  * Tested and removed distort image learning  * Tweaked threshold for NCC similarity  * Fixed bug in test for outside of image distortion  * Random ferns are now added. Fewer situations where there is no detection early on
d63a0ce8ac2d7b121e2085e90b3bf971b86e4ca4;2013-08-19 09:37:04 +0300;adding latest TLD.  hopefully it's an improvement
361e2a3ab0f1b7b1bb1e6716f6592b926d3f0888;2013-08-21 07:28:06 -0400;Improved TLD code
65b52c19faa2e068ebe558354368ed8236a21117;2013-08-22 07:02:11 -0400;- more improvements to TLD   * Trying to improve stability
e6f7515414fbebf481fb692f7118a602d39e37cb;2013-08-22 14:20:47 -0400;TLD seems to be working well with U8 and F32 images.  I think this means its relatively stable
be79286d9ad740b3ec2cfcba32158f10132bf49d;2013-08-24 16:35:21 -0400;- Finalizing TLD
0ef975c293ee968ff7df00b9af0271aa9b5efbc8;2013-08-27 08:24:17 -0400;- More TLD unit tests - Start of new tracker
e78647b25d95b5db6d0346d9a60a28f9acd7ee74;2013-08-28 11:17:57 -0400;- lots of unit tests.  Basically everything passes now
470aab7eadc758ac9cc665898b47c312ef49a6e9;2013-08-28 15:21:42 -0400;Refactoring to make TrackerObjectQuad more generic
010a3f9d2e27a62ab955d52857efd4788f58d892;2013-08-29 17:19:55 -0400;- Finished draft version of Sparse Flow Object Tracker - Added motion models for Scale-Translate-Rotate
44e30a0ed77e09fdb6bb0de606e34575af1be32f;2013-09-03 13:07:33 -0400;- Adding tracking videos - Updating tracking application
687f90687a942e8c734bf3c37995b8dbeab09832;2013-09-10 11:18:54 -0400;- Added basic mean shift tracking with different histogram models - Realized the TLD implementation is a bit off
39fb0a69e3a8580944f1ee4261b75a0d75bd890f;2013-09-11 13:34:12 -0400;- Moved FastQueue and GrowQueue into DDogleg project
793d9eae3b266545ab4236bc2fe2f60128fc89f0;2013-09-15 21:35:30 -0400;- Made ConvertBufferedImage easier to use for multi spectral images
975ce3151af37acbb4255b41ab1d059bb91672fb;2013-09-21 19:03:02 -0400;updating for changes in DDogleg
9cedc63d8fbef4017acad4f5379e92366dd20ca1;2013-09-25 19:36:58 -0400;- Updated for refactoring in GeoRegression library   * Rodrigues to Rodrigues_F64
95d6f2fd4e55b42f133ac74591ad6e74bdee2065;2013-10-01 08:24:02 -0400;- Adding ModelManagers for fitting   * Change in DDogleg
a89febd87f9239c9ef8aa9a8fe29611b34df5f05;2013-10-07 12:30:53 -0400;- Saving current progress of integrating in FFT from General Purpose FFT via JTransform
5d85e8f7423f1d94985783e4f615b6b782fc9b96;2013-10-07 14:21:30 -0400;- JavaDoc and copyright got mangled in new files
5c8dfc9a3a2b62c6b623c154362e264ea8306f23;2013-10-08 22:41:13 -0400;- Added pixel-wise multiplication and division - More improvements to FFT related code
089277d50d2ca075e581a36e5926ebed69638959;2013-10-10 22:25:41 -0400;- Finished high level DFT implementations and unit tests
392cf4c2ed3a5cca7e88a68cf1cd08976a76bb33;2013-10-11 18:26:18 -0400;- Fourier transform example and related tweaks
6ff10c58030a04a08bb65ffd1ffb207c3516b97e;2013-10-12 13:49:25 -0400;- Removed GeoModelRefine and replaced with ModelFitter - Tweaks and unit tests related to FFT
aa1c48ca81d284c7b49916e7520b5eea4660fd3c;2013-10-12 17:44:26 -0400;- Improved interleaved images - Changed DFT to use interleaved image type - Lots of updates to unit testing as a result - Added ImageBase.subimage because the previous test was faulty - Fixed GenerateWaveletTransformOps
ae34d5bc9981b1a8569102b9d62d813f3cfccdce;2013-10-14 21:14:02 -0400;- Fixed JavaDoc in ThresholdImageOps.   * Thanks pcmoen for reporting the error
0462ce36e125ecb48150ad4a2ab4211404e38c22;2013-10-16 13:03:48 -0400;- Added interpolation interface for multi-band images - Unit test
4f737da15a7eba6d94c6c40acabcb15451cb9b32;2013-10-18 09:23:15 -0400;- Fixed bug on ConvertBufferedImage.extractInterleavedU8()   * renamed from extractInterlacedInt8 to extractInterleavedU8   * stride and offset are correctly set now   * improved unit tests   * Thanks pcmoen for reporting the issue - Added ImageMultiBand which all multi-band images now extend - Minor progess on  new mean-shift algorithm
280f2db8d7e69fcca5708095ef13912d67672a84;2013-10-18 09:33:33 -0400;- fixed sub-image issue in ConvertBufferedImage.extractImageUInt8()
0bc63ce764ddb0a0312c47b334a3a239cd424b5c;2013-10-20 19:47:59 -0400;- Limited support for interleaved images in ImageMiscOps - redid image types a bit to improve support for interleaved images - unit tests
404feca0e641736e7c80748db74607e2ce94bcd2;2013-10-20 22:26:20 -0400;- Finished DFT unit tests for F32
8d1a7b41f971f78af983426b341f9b4b023e3f3b;2013-10-20 22:56:42 -0400;- Added support for F64 images in DCF ops
381e9854d933a5713f7604f6648999ebcb987f58;2013-10-21 23:25:59 -0400;- moved abst.wavelet to abst.transform.wavelet - DFT application - Created GDiscreteFourierTransformOps
5880c5ae85587f80591e3e5ca1a722eec4716999;2013-10-22 20:09:18 -0400;- unit tests
bf42deab2cbf2e38eee8d30a8442a962484432c4;2013-10-30 14:20:13 -0400;- minor changes - unit tests related to Comaniciu2003
22c59e0021d4bf7ceaa551f69d76489b0d9eef92;2013-11-03 15:36:03 -0500;- Mostly finished another mean-shift style tracker - rename some image stuff
9d20bf9e0d97a3056f210ba7e32af2c516526424;2013-11-04 19:58:15 -0500;- Added option to assume a constant scale for Comaniciu2003 - Fixed/implemented unit tests
6e8e03603882f59575f7a7d145911036e604a5ed;2013-11-05 18:29:38 -0500;Improved Comaniciu tracker tweaks to tracking unit testes
678e53aa71ac26492f3cf0755c267ea62a934fab;2013-11-05 23:52:19 -0500;- minor changes and unit tests
d5b61a5d12a18683c605a1bd536dd4f58e22b60f;2013-11-07 13:01:55 -0500;- code clean up
a9f5b10c9a72c68da1c2904e24def386569559f6;2013-11-11 01:14:45 -0500;- added ability to provide storage for sub-image - copy rectangular region - Draft of circulant tracker
912e66fa5a7d248784824171ae02d44c1a5a1472;2013-11-11 17:10:57 -0500;- Fixed a SIFT bug where the extractor's ignore border was not being ignored by SIFT   * Updated unit test to detect the bug - Updated TestImageMiscOps for copy()
cdf013d71054d318c62bea52930bcd04ee9ffd5a;2013-11-12 23:41:03 -0500;- bug fixes and unit testes for CirculantTracker
d655d828df64b73c7241601e27137a91d4e76f0b;2013-11-12 23:56:48 -0500;scale change can be specified in Camaniciu mean-shift
0262fc2c4dafe2204b2ecc115278bb5d9d34ef2c;2013-11-13 22:01:54 -0500;Finished adding circulant tracker.  Needs more rigorous stability testing.
655393d7c27853d4cb43cd5e6a4c8bdcb177ce64;2013-11-13 22:25:48 -0500;- Update for changes in GeoRegression
36440233d18d7d4f6d8171dd116ae1e53ef6c1d0;2013-11-13 23:05:24 -0500;- Tweaked track location of rectangle - Updated pom for SNAPSHOT
4c69ff8bd21a51954676989969e0849afc0a329b;2013-11-13 23:59:38 -0500;updating data
eb3e435956b6c9b6c0b92a64fa5c21154fa97593;2013-11-14 10:50:45 -0600;- SURF detector takes in account extractor ignore region better - More unit test improvements
33033265fa4e2410e93a96885989e51e27fecdd4;2013-11-15 11:10:54 -0600;- Variant of circulant which copies track region into a fixed sized region and does motion estimation there
4e7df342a19c037c2707bcf84a3795140723d1c6;2013-11-17 16:35:15 -0500;- example was ignoring image type
95acccc524a5ce63d4bdca932c50d0fd5a1b9e92;2013-11-18 16:47:53 -0500;- added more print options to image files - Made CirculantTracker more like the python code   * still deviates over time
535a02ca80eee3d3574b27394fe3dfbfb0c77dd9;2013-11-18 18:21:28 -0500;changed circulant to 64bit
04cdcbed7f0781369695ea79fcb43d78db768504;2013-11-18 19:30:04 -0500;- changed circulant to 64bit - pushed more parameters into config - added padding to user specified track region - uses generic interpolation
9ffb7d852a66b2d0ed261b96911853d6fe2ea84b;2013-11-18 19:44:41 -0500;- removed pointless alpha computation from circulant
80a7fffb688e2f51fdbdcd935d0a04be2dfb4f44;2013-11-18 19:47:40 -0500;- removed pointless alpha computation from circulant
aa95bf8dfe37064194d973a13d6de787af369940;2013-11-19 11:15:23 -0500;- Visualization for circulant tracker - fixed a bug in circulant tracker - starting adding a new resampling method
db0f9f1fbbce19d0a20fe9b9429cc159918092a3;2013-11-19 13:18:49 -0500;- fixed pointless -1 introduced by accident into SURF stable
22b63498a50407221edb505027d569b8b77714a4;2013-11-19 23:56:26 -0500;- fix for circulant tracker
c11db19dd05ae99e4bf168ee86279f7182624163;2013-11-22 19:23:49 -0500;- Added adaptive blurring and improved various unit tests
0153f6601667be217fc13fab71c2c314da6108ae;2013-11-23 13:09:47 -0500;- Reduced numerical error in normalized integer convolution operators
1eae90e913f98bb336484b46a95bd8079b055127;2013-11-23 16:18:53 -0500;- Fixed multiple bugs related to FFT and improved unit tests
394ff0f7b05ec84da4aa45445c60be12862d2462;2013-11-25 15:59:41 -0600;- Added new example - Tweaks to circulant
806d421c106b72ffb51f69aa1d5b557e422d6f26;2013-11-25 21:32:36 -0500;- Calibration target detection now uses adaptive thresholding - More tests pass - Canny edge now uses three derivative by default.  Blur is already being added
bba6af6fe27744e0d37105557bb928a30322737e;2013-11-25 22:12:02 -0500;- Added storage parameters to adaptive threshold in GThresholdImageOps - Benchmark for thresholding
6a07d45fab3b478ab60f3dea777d9d6b3c1c702e;2013-11-26 11:58:41 -0600;- User has access to threshold parameters now in Config* for calibration target detection - UI tweaks
f5ce7ddb1652d446dd5ff42bb5dd589cf5bffd4c;2013-11-26 23:39:55 -0600;- updated for changes in georegression and ddogleg - improvements in detecting small chessboard
458d38677b04136a9b04ccad487c89386275daeb;2013-11-28 00:55:51 -0600;- Improved small target chessboard detector
9096210e22d387e481a25665c954f26cc7958844;2013-11-28 12:17:42 -0500;Rename the circulant tracker in this branch to orig in preparation to a merge
c2958ea1cdf36e67afbfcc1ec4da1c38cbf39052;2013-11-28 12:36:00 -0500;Merge branch 'master' into circulant
db14d8b187e0c9b1d8d81990230c77baf758d373;2013-11-29 02:36:31 -0500;- Added Bilinear interpolation for F64 images - Added mean-shift peak finding to circulant tracker   * Put unit test back in
15935b9128e1608db90b503e86f5e22145f6293b;2013-12-02 00:55:15 -0500;- Finished circulant tracker.  All test pass.  deprecated original class, but keeping it around for testing purposes
513c160f285935bd42f77c556f0b40fcae341134;2013-12-02 00:56:43 -0500;forget keeping the original circulant around.  will just confuse people.  can extract it again from the history.
894b25b710b3c228176eb802ec6265d4707dfe14;2013-12-02 14:58:10 -0500;Fixed gray scale conversion bug for floating point images in ImplConvertBitmap
956bf03f32b1e5bfb9fa2d12e4a95e7bae0d259b;2013-12-02 22:28:16 -0500;- Initial code for allowing KLT to handle tracks along the image border   * breaks lots of stuff.  Might not be entirely correct yet
28a659359bdfec3ea0353bb2ebae08ab5296e023;2013-12-03 16:09:20 -0500;- Bug fixes to KltTracker - More and improved unit tests
c76e22f39141dafb00199d7f53f38e422aa575f4;2013-12-03 17:22:14 -0500;- Added wrapper for JCodec.  Can't get it to read any files so jar isn't being added. - Added more videos to Quad Tracker valuation app
ddfba62f93952b15bd28324b443285d1a8e6dd50;2013-12-02 22:28:16 -0500;- Initial code for allowing KLT to handle tracks along the image border   * breaks lots of stuff.  Might not be entirely correct yet
e7dfe0e703ab610f7c112d661639f8cc965e500f;2013-12-03 16:09:20 -0500;- Bug fixes to KltTracker - More and improved unit tests
57a8f2a5214837d533248bb0f1ab4ee8abbe29df;2013-12-03 21:41:30 -0500;- Finished unit tests for KltTracker - Modified PyramidKltTracker for changes in KltTracker   * Still doing unit tests - Modified other code to handle this change in behavior   * added unit tests which will fail
e798f89e0f68563429719f7f84f279e05e65a48f;2013-12-04 12:08:09 -0500;- Changed behavior of interpolation so that the pixels inside of the image are defined as 1 to N-1   * Lots of unit tests still fail
fe47b3e4b628efc09f0cd47d9b69f3467162a173;2013-12-04 16:00:42 -0500;- Fixed last of the interpolation related failed unit tests
e724a074bb664d610a673567831c1a60a8e4c476;2013-12-04 16:54:01 -0500;- resolving merge conflict
04ece1879c3b2691e736dc3e0ac4868df9ba453b;2013-12-05 01:41:11 -0500;- All unit tests related to KLT tracking and interpolation now pass again - Fixed a few bugs
47bcba4080e38a3669a23311a410f5c120cdd7fd;2013-12-05 02:05:10 -0500;- Fixed bug in DistortionSupport.scale() where it incorrectly was specifying the image's scale factor
4962c66e2aefa8a7dacd9a5672670d8db8470772;2013-12-05 23:14:07 -0500;- KltTracker now just uses rectangular bilinear interpolation instead of that and the per pixel interface
615209788b50329c3af8f0b9566c3dcec6e51add;2013-12-05 23:31:20 -0500;- VideoTrackerObjectQuadApp can now load different file types, again.
be7cc0e9cfdd06de86638d76e3ce3f0e26ab8086;2013-12-06 11:15:39 -0500;- For chessboard detector minimum contour is actually used again - Improved comments in RefinePnP
c675046b7d1db99352df72a17d1b857a8830ff97;2013-12-06 12:54:54 -0500;- Refactored optimization input/output size names
23145700ee03ebdaed939a2e883f8625ff67ad3c;2013-12-06 20:59:20 -0600;- Orders calibration points in chessboard using QuadBlobs.  This allows for orientation ambiguity to be removed in many cases.
38443ee9a390e3f42db3e29660c432f35bc0c9f8;2013-12-06 21:15:13 -0600;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
0ae4f7e415256624c8839525b0e956e5879924fb;2013-12-06 21:15:44 -0600;- Updating log file after merge
2a55b0eb5bc0cb084cea9b53fee6acd57ad5e437;2013-12-07 12:22:23 -0500;- Tweaked optimization function interface again - Some unit test
221161ce603fc6c528c98b324899a58c24d0ab16;2013-12-08 12:41:29 -0500;- Added object tracking examples - Removed bad trackers from VideoTrackerObjectQuadApp - Abstracted mean-shift likelihood tracker some more - Refactored some names for consistency - More unit tests
e63dd4fddb76167ab950033f05e36769d8d85d42;2013-12-08 23:07:28 -0600;- improved testing for chessboard calibration ordering - Tweaked how the first corner is selected for symmetric targets - Added ant build for creating source jar
7a28c06dff6a709cdcb4750539ba63849effc9b2;2013-12-10 00:21:33 -0500;- Local peak finding for intensity images   * specialized mean-shift
311b6dd2a6be2f8640808eb4951adfee941bbbb5;2013-12-10 00:58:34 -0500;- reorganized examples by subject to make it easier to find what you're interested in
811878ec49ba240dfc2848d0188b13190ad1325f;2013-12-10 19:24:52 -0500;- PointCloudViewer's camera can be more easily controlled now - Improved example's visualization - Added new videos - Made PeakFinder compatible with different image types - Swapped in PeakFinder into circulant tracker
e4fa6767725753d59edaea193526e0dc8798c789;2013-12-10 21:11:27 -0500;- Example showing how perspective distortion is removed
9f61d6e4fce10765b690ef69dafc37d9ae12653e;2013-12-10 22:24:16 -0500;- Tweaks to examples
3dcacc4439ed61f05479ecd7f109a57be831ea0d;2013-12-12 11:44:03 -0500;- Fixed off by one errors in TLD tracker.  was interpolating between 0 and width, inclusive.   Should have been 0 to width-1 - Added test to rectangular trackers where it checks to see if it can handle change in image size   * fixed TLD tracker's inability to be initalized with a different image size
bfe281122e4ad8f52fa7dfe216915750b13fd5bd;2013-12-13 11:18:11 -0500;- Can handle comments in PPM files - Support for PGM files - Make SURF and SURF-Color more distinctive in factory
9c7780d4a7c815251aad6227879fefd48252a29a;2013-12-13 12:44:43 -0500;- Fixed compilation errors caused by recent feature refactoring - Tweaked comments
2608a4ae8680a60ec0ecee57a5af98893ca1bc9c;2013-12-14 00:56:03 -0500;- VisOdomDualTrackPnP can produce a fatal error - Broke up SURF and SURF Color in descriptor factory - Allowed KLTConfig to trickle down through trackers factories
694e219cf7323bf7a2e6ac6a053af2f745945433;2013-12-14 13:58:32 -0500;- Added change input image size checks to stereo visual odometry unit test - Simplified some factories which take in KLT pyramid parameters - Fixed failing tests and compilor errors - VisOdomPixelDpethPnP now computes a description instead of extracting it   * Deleted ExtractTrackDescription
dd1b3a390e5bc3a8da6ae4232a667354c0e15ab9;2013-12-14 22:49:37 -0500;- Removed image type from KLT config - moved PkltConfig into boofcv.alg.tracker.klt - No more KLT*.default() function to create default configuration
6ea825f666313d5f4a395f45cf88a04de9ea5b44;2013-12-15 01:46:03 -0500;- Fixed overflow issue in integer Harris corner detector.   * Added unit tests to detect overflow in Harris and ShiTomasi
33cd5fb4939b752dfef470880ccb2c7d3f0d6cf7;2013-12-15 15:53:15 -0500;- Added stabilization example
55ad008e1877fef2c991f2d7757c829cda52faf8;2013-12-16 00:58:34 -0500;- Improved maven support
cfe01344a3a8660ee61ca2492ebc79baacc62834;2013-12-17 23:17:53 -0500;- Android: render the magnitude of images - Documentation in PyramidOps - Fixed a bug in UtilWavelet.adjustForDisplay() where width and height got swapped for integer images
eb2b4e705741aa8724c916db293d6baf341a1112;2013-12-23 21:16:44 -0500;- Android: Visualization for EdgeContour - TLD: Separated out image type from configuration parameters
38d206457e3d33b3f59173d7f327c72fbcfe7895;2013-12-24 18:12:54 -0500;- Updated object tracker evaluation for new videos - Circulant tracker can now detect one type of failure
09198d307cd6b3ccb03ab613b7fda14cb4b372a7;2013-12-24 18:22:51 -0500;updating data submodule
562bdeb8f2a61b242a23d54e5449624d13e889e3;2013-12-25 12:39:36 -0600;- first release candidate for v0.16 - Minor changes
cd8f67d52e0b82b9e038d94b9e1c838b58ce5809;2013-12-25 14:44:29 -0600;- moved shape fit examples - reverted part of TLD to improve performance
eb156f9b200c4885cc8eb88fc9434638311114d2;2013-12-26 09:56:26 -0500;Tweaked TLD so that it is better at reaquiring tracks.  When the target is selected it also learns regions right next to it.  This seems to reduce performance in MILTrack data, which rarely needs to reaquire.
93194f7e79ab5103f99db261dc4f8e1b623a73eb;2013-12-26 09:58:13 -0500;- forgot to add these files in the last commit
5aa7b19ef2a09a7c8dbc7ced970e1089afbb4c00;2013-12-26 14:49:46 -0600;- fixing merge
3faa565d41fb1b099fcb545b858755ebcd2274f7;2013-12-26 15:11:18 -0600;- Adding tweaks to examples and fix to applet stuff
0238b283facb081226510f378d1a393f3f377eb8;2013-12-27 18:01:12 -0500;- potentially final v0.16 commit - cleaning up pom.xml (or breaking them) - adding jars
b473902e725b7a67ad2e158c5ac69e11b6a14946;2013-12-27 18:25:17 -0500;ARG stupid data directory wasn't correctly set
1dac50b4473e9d8fa704c3a8a5a84dd99382f300;2013-12-27 19:30:02 -0500;- Add a comment that shouldn't be there in change.txt
f1a812ab5c76f865b855f003330c7d360db0b429;2013-12-28 14:11:45 -0500;- Added python code for doing Maven release stuff
b6e6fc50211fe047e60a9f0a14a2fe4172b1bfa4;2013-12-29 13:32:39 -0500;- improving maven build process - updating maven documentation
3b7f5f5575e209edd1db3e69fc8791526214be39;2013-12-29 15:31:10 -0500;- maven seems to be working now - set stuff up for 0.17
043a7b3590cc8700856e7081da4392fed9920ddb;2013-12-30 21:06:28 -0600;- added instructions for where to download 3rd party jars - fixed type-os - added a tracker to the object tracker app
de87914373530bb85865be4c12be87d7f1ebdffa;2014-01-03 22:06:35 -0500;- Dense optical flow progress - Fixed places where factories didn't use the default when a null config was provided - Improved documentation - Fixed a minor bug in SelectOverheadParameters
c58fc573d68d116f465980b489c3dfaaca685d99;2014-01-05 00:10:48 -0500;- Finished adding all dense optical flow tests - Added F32 and U8 versions of block optical flow - Reverted a bad simplification from KltTracker
304353ff355fb4b7f4e8fda5dff8ce06663560a2;2014-01-05 00:37:27 -0500;- DenseOpticalFlowBlock now selects the hypothesis with the least motion when there is a tie
b01a49fd440c707390665c3d3126cceee63fa152;2014-01-05 15:56:25 -0600;- added unit tests for serialization - added no argument constructor
e8b88ba0e1f2e61c51449e15430a6aa7051759b0;2014-01-06 12:24:24 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
1796f1ff50933073edc2cbe882000f7419083290;2014-01-08 17:00:58 -0500;- Added ImageMiscOps.flipHorizontal()
13f4cc709b78a34d7a1a70b3e70eb56ce3fca86b;2014-01-10 17:08:01 -0500;- Added functions for computing weights   * Reduced number of needed classes for MeanShiftPeak - Added sketch for mean-shift segmentation
991554ed741ec1bda37e28f9219ab950750cf4fb;2014-01-13 00:10:39 -0500;- moved weights package from alg to struct - finished initial implementation of Mean Shift segmentation   * fixing issued with it now.   produces too many regions with the same color and are adjacent
9bcf0a141a1f9fcb23db9852916f0e9ff9f33b85;2014-01-13 12:44:34 -0500;- Fix for pathological case in canny edge   * Thanks Lucaro for finding the bug   * improved canny edge unit tests - Cleared up documentation in edge non-maximum suppression - Basic mean-shift segmentation is working, but needs additional work to produce more meaningful results   * visualization code
18020fa39bb612dddc621b0e1e8eac11868d3882;2014-01-13 13:05:27 -0500;- Fixed the actual problem in canny instead of putting a bandaid on it
560ad1bbdb82badbdf2b4a7509301037bda49413;2014-01-13 23:44:28 -0500;- Tweaked CannyEdgeDynamics again.  If pathological case it finds nothing - Saving current progress on mean-shift segmentation.  Going to try improving its speed.  Getting closer to final version
3658646a411c35e7529685fab6473a65656ae86b;2014-01-15 19:11:04 -0500;- mean-shift segmentation region merging is much much faster - Not sure if mean-shift segmentation is 100% correct since it seems to have a bunch of odd points not matched with anything inside of objects
488041fc3db30af76bc47ef97ae76e8a7ca186cd;2014-01-15 21:50:02 -0500;- WeightPixel_F32 can now have different radius along x and y axis - Tweaks to SegmentMeanShiftGray
fe92ea34678b4b00065a91a4416578a83ee7c0aa;2014-01-16 09:38:30 -0500;- Added color mean-shift   * needs to be properly unit tested - Changed MergeRegionMeanShiftGray into MergeRegionMeanShift to make it more generic   * Region colors are now float[] instead of float - Changed copyright to 2014
a37f8341b3ca8b6a72b3f39eecc304c846f8c9c1;2014-01-16 21:12:35 -0500;- mean shift segmentation   * Some refactoring   * improved JavaDoc   * Identified possible reasons for why it doesn't appear as good as another implementation - GBlurImageOps supports MultiSpectral images now - Added GImageMultiBand for abstract reading of pixels in multi-band images - Fixed problem in ConvertNV21
c3ba2542ced74612e86f54f294d0e4232ab1f8e1;2014-01-17 12:03:29 -0500;- Fixed bug in ImplConvertBitmap - Updated android example for all the fixes in the android demonstration app
759cd36da027fda197e88a1b5153029413b198b4;2014-01-22 15:26:40 -0500;- More improvements to mean-shift segmentation.  Looking good now, but unit tests need to be finished.
7bb5f5e72a06a60ad0341185fcb3e4eb82f5f122;2014-01-22 15:28:26 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
8f5485dce8efb282d2af24b8f1d3a98960b8e13c;2014-01-23 20:25:54 -0500;- Finished unit tests for mean-shift segmentation - Improved speed of MergeRegionMeanShift   * Produces slightly different results than NN algorithm.  Not sure why.
06744a7af754acf6dbf82a8b669ecc105b567f7f;2014-01-24 11:34:33 -0500;- Added fast approximate mean-shift segmentation - Changed mean-shift segmentation such that it takes in account the possibility that a pixel, which is a mode, might not be its own mode.
7c2c07059ff5f1f7940da4c248be0398220b8b4f;2014-01-25 09:50:23 -0500;- Added code to ensure pixels in a segments are all connected
e97a4b1e84f36597627cb574dc39de425ca92302;2014-01-25 10:52:07 -0500;-Support for MultiSpectral images in BlurImageOps
2cb1e50163d52185349d35279d79f31bfa7af229;2014-01-26 16:36:27 -0500;- Just realized my RegionMergeTree is a fairly standard graph operation and have implemented a simpler version.
65f1169c43c34c3ea66e012919355509205506d2;2014-01-28 15:24:21 -0500;- Initial sketch of Felzenszwalb04 segmentation - Moved mean-shift segmentation into its own package
25c68895cf511ae665ebf8ea300b6bc1b3d4fccb;2014-01-28 22:13:42 -0500;- Felzenszwalb04 appears to be working but its results do appear to be significantly different from the original   * need to finish unit tests
00c86147be153838dcd1b833c0088dc46e577da3;2014-01-29 05:39:39 -0500;- ImageBase now provides ImageType
7e7368baa71c60dad90f9e2597e9716d2e963b89;2014-01-29 16:54:44 -0500;- tweaks to make Felzenswalb behave more like the original - Experimenting with alternative sorting methods
4fe01ea278bc4a7c936ed3925897a2b4ac3c2eb3;2014-01-30 01:02:44 -0500;- Tracking down difference from reference implementation of Felzenszwalb04   * The algorithm appears to be a bit unstable and very small changes in input can result in different regions   * Current reason for a difference in output appears to be the gradual increase in floating point error   * sort order, edge calculation, and merge had been taken in account - Sort takes more then 1/2 the computation time
6fa2a2d722c719f76504ce9b0786c8426082ceba;2014-01-30 13:30:14 -0500;- renamed Felzeszwalb to FelzenHutten since there are two authors - improved java doc in FelzenHutte - fixed potential sub-image issue
6931d62be4326ad4701de5800a43cf1c983bfef2;2014-01-31 00:33:41 -0500;- FelzenHutten is basically done now   * Wrote auto generated code for computing weights   * Found a bug in weigh calculation for floating point images which does make it more like reference implementation - Added ConnectRule for specifying 4 or 8 connect
698e08f692e43e174ccf56258ad67867a64e7ea9;2014-01-31 21:26:47 -0500;- Added sketch of SLIC superpixels
5e84a73cda727e6699db9514c7167e97a9b54f17;2014-02-03 00:23:56 -0500;- Added high level image segmentation - SLIC is getting close to being finished.  needs to clean up the segmentation a bit more and support more image formats
b01eb67268d37ceec070a7adc22b1a250a10a38a;2014-02-03 11:38:52 -0500;- More progress on SLIC   * producing more square like regions   * Added color support   * merging small regions
70b3db476de793c5d137e8ffff6e53be91ef8f37;2014-02-03 14:43:42 -0500;SLIC image border is working better.  need to do more tests
d2efe4d4afb8e799e20c10fa476153eb8ff142ee;2014-02-03 21:58:58 -0600;- Added connect-8 to MergeSmallRegions - FH04 implementation of ImageSegmentation
f9d76e689c1dd00380d58955b5a2d06abddc7efe;2014-02-04 14:51:17 -0600;- Added more image types to SLIC - Tweaked cluster initial location - all unit tests in alg.segmentation now pass - added unit tests to abst.segmentation
1ae6c5e5aa216bce989402c708499e42597331d6;2014-02-05 16:47:58 -0600;- Finished writing generic segmentation tests - Fixed bugs - Fixed association issues due to change in NN threshold - Added ImageType.toString()
cc7ba3cf73f25c2b0cfc3823eb23da98956432cc;2014-02-05 18:53:52 -0600;- Added image segmentation example - Created a real image segmentation application   * still need more work
4ec9588ad1b243c41c5f5d8323c6a2748c22ba1b;2014-02-06 01:09:31 -0500;- Updating android code to make processing camera previews easier - Updated for changes in EJML
f609c48d547bea9b6f863327ecf481033cfe94f9;2014-02-06 01:58:21 -0500;committing comment so that it's not lost
cc68331f4f853952c7694bf13368dd1a2ca5cd3e;2014-02-06 13:09:19 -0500;- Improved visualization app for image segmentation - Expanded android javadoc - Added images for segmentation
f88fe2e63d0b0b92f707ba0f4241c1f491c4e932;2014-02-06 16:19:57 -0600;- Fixed segmentation visualization app, I think
c1beff0cba942a4c8154e44caf9ada40796c3bac;2014-02-06 19:10:20 -0600;- Added approximate sort to FH04 segmentation
29e5790f41bbf44b5e0225c58d5b46eb762b5494;2014-02-06 19:13:49 -0600;- bug fix
46b2e487a8b80661bb3b07045448974caa7bed06;2014-02-08 10:19:20 -0500;- Added XYZ and LAB color models   * updated evaluation and examples - Changed behavior of GImageMiscOps.fillUniform().  max is always inclusive   * Tweaked documentation of ImageMiscOps so that fillUniform() max inclusive/exclusive is correctly specified.
9a11969d48ba7f66cf96a034a65f04a41073ec55;2014-02-09 15:41:45 -0500;- pom.xml was refering to GeoRegression repository by accident - updated binary label code to use ConnectRule
60cbfd6a3cf30cd26de97a3525a00a95c360988a;2014-02-15 00:46:46 -0500;- Realized the wrong kernel was being used in mean-shift segmentation.  Fixed and produces similar results.   * No longer needs to be provided external functions for computing color and spacial weights - Fixed bug mean-shift config in segmentation app - Changed images in ExampleImageSegmentation
15afe8ebebb73a2608a314b5f690f65da2db7c67;2014-02-16 11:44:31 -0500;- Moved image type out of SfotConfig
bdc1d4f4ed7f505d9afe932508f795d149567b4e;2014-02-16 21:59:36 -0500;- Added more documentation to bundle adjustment - fixed Sparse flow config.  missed something in the last commit
f4d1660603e95922db474dae48b5f5f08cc7b3b7;2014-02-18 20:19:18 -0500;- Sketch of watershed
a9be542dc60aa30924deec32e280043dfc221fa3;2014-02-19 23:13:19 -0500;- more improvements to watershed.  Getting close to being done.  Just need to implement seeds
d287cbf8247bfdd25a44df455c6b50a0c2c94ad9;2014-02-20 10:15:54 -0500;- more unit tests for watershed - fixed bug in watershed - minor tweaks
ed43d9d3784a27cfb389722048c5fb867e8a4bb7;2014-02-20 23:22:22 -0500;- I think watershed is finished   * Supports seeds now   * Added example for seeded watershed - Added visualization tools for segmentation.  Updated code to use it - Erode and dilate can now be applied N times
7393728f2336691f57eac6cbd4023b5842d08002;2014-02-20 23:59:38 -0500;- Fixed bugs in visualization of segmentation
5c77635fd9a7450c5c4870c34c9e87a2147b3faa;2014-02-24 00:52:27 -0500;- StitchingFromMotion2D can now resize and translate the stitch image   * Thanks Julien Seinturier for the suggestion   * Updated ExampleVideoMosaic for this change and fixed previous problems
2ba6129107b821f84347bcf83c16f03d7fc81274;2014-02-24 22:34:04 -0500;- Dense Optical Flow example
bb8308a1f05b1fcfc4b1bab4eb4ea68dba74e23e;2014-02-27 23:25:44 -0500;- Removed flag from opticalflow image for invalid - changed KLT dense flow to Pyramid KLT
b1879697594b7b7a017153197b3ec476f72884f4;2014-03-01 00:59:17 -0500;- Changed block dense optical flow into a pyramidal algorithm
daf56f3f599afa77e0ebebee5615f1680afff46b;2014-03-05 00:00:40 -0500;- Initial sketch of HornSchunck - Changed ImageDerivative to return ImageType
a02ac760d957c8acf1cf70b8399b60cacc6adbe7;2014-03-05 21:49:46 -0500;- finished Horn-Schunck   * Kinda sucks.  Maybe there is a mistake some place?
33b17a50af21bdb76f441821742e3d25d8b7286c;2014-03-06 20:09:55 -0500;- Renamed HornSchunck to remove dense optical flow - "start" of a pyramidal HornSchunck
98ed4ac711e2ea86c617350ddecb4b51dcb92d55;2014-03-07 09:26:58 -0500;- Made Horn-Schunck more authentic and performance has improved quite a bit
a0ef44945e4517d4d5f804e93d56deb6ed2983ed;2014-03-23 14:26:50 -0400;- 1D convolution kernels which are not symmetric and/or odd are now supported
13b164a942de3b4b80731bae9f74d7dda7b99f97;2014-03-25 16:27:52 -0500;- Current work in progress for pyramidal Horn Schunck - Image gradient-2 added - Minor clean up
5cbc765f308c820971a30dc2750387e61640f394;2014-03-25 16:57:05 -0500;- Fixed commented out code
65c21047a0199bdf47ddf4658871e8824fe3528c;2014-03-27 17:17:18 -0500;- Current work in progress for pyramidal Horn Schunck - Image gradient-2 added - fixed bug in image derivative unit tests - Minor clean up
e44943749eb37679a36ea4dc55db13e8b415afbb;2014-04-02 09:55:12 -0500;- IntrinsicParameters.print() can now handle null radial
91e07ac92b9b8e9dde3cfbc01220acb37aa578b8;2014-04-24 01:06:10 -0400;- Finally process in Horn Schunck pyramid.   * Track down problem to a very subtle error.
57d4e0a3db6bb1ce4ef83268143994c15c25179c;2014-04-24 09:33:08 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
4e4360aa108777cf0cfafc2a870d1c84451f4a1f;2014-04-24 22:43:36 -0500;- Finished HornSchunckPyramid
7d0973ee742e4ee68da49d52882658085cbd4e81;2014-04-24 23:15:13 -0500;- Should have run unit tests first...
c1abe8f779b825936f98a925eacee0ada7e8d1d2;2014-04-29 12:15:33 -0500;- complete sketch of BroxWarpingSpacial - abstracted out some common functions for pyramidal dense flow
b63ce1c673109528b4b9f4fa246747ca7158ae6f;2014-04-30 21:57:00 -0500;- Complete brox dense optical flow.  Doesn't seem to work yet and fails some unit tests
0f2d9a04891b8f6ed4b61a6962ce26a055b4de13;2014-05-01 17:55:19 -0400;- Brox seems to produce reasonable results now.  Need to finish unit tests
0a00c6a8cccd67f63c81effe115d3446b3f08840;2014-05-13 23:45:42 -0500;adding gradle support. experimenting with making it the preferred way to build boofcv
aa3c04e73b16cbbb3bb8bfe7f2f797e1000963de;2014-05-14 01:02:55 -0400;- Updated brox javadoc
1f78bea5384c308c1d2101ffd9fbf4670ff52df8;2014-05-14 01:19:25 -0400;Merge branch 'master' into gradle
4f3a9019f87e3f09ce11723959004e8c461529aa;2014-05-15 09:19:02 -0400;- Gradle references snapshots now
bb9512d417395dc158dc80969b5af58d5231f304;2014-05-15 10:49:33 -0500;- removing intellij files which are now auto generated - tweaks to gradle build
25af25d8fe25b52347ab0654808fec0f648134a7;2014-05-15 11:01:51 -0500;Merge branch 'gradle' of github.com:lessthanoptimal/BoofCV into gradle
83d390beb84e06e85db329fa5ba6ac138d67dd3c;2014-05-15 11:27:11 -0500;- moved serialXML to IO package   * first step in moving IO related stuff out of Image Processing - Created main/checks so that a dependency doesn't need to be added between IO and Feature
0f11a82a861680eab48b464976afeb1b9c4714e0;2014-05-15 11:34:18 -0500;- deleting IntelliJ iml files again.   * I fail at merging apparently
7ee4b912d79697b2e2416f92b25bbb0642173491;2014-05-15 11:53:43 -0500;- Adding IntelliJ configuration for copyright - Removing XStream Hack   * I hope the latest version really does fix applets - Adding .gitignore so that iml files aren't constantly being added again
ccf2332289476294cb0d6e03f73fff1176a7ab44;2014-05-15 12:02:15 -0500;- deleting IntelliJ iml yet files again. - maybe this will be the last after all the ignores have been added
0704bedead1def716bf1a762c3d4741e542fac00;2014-05-15 12:04:45 -0500;(sign)
7b17c1e7ae98baa5efd4a9fa3c70e191e5ac78ff;2014-05-15 13:51:16 -0500;Cleaning up .idea directories Fully specifying copy right and scores and vcs in the root .idea directory
b47e28d6ca52ab7421b1d53cc440dd854ff54c6a;2014-05-19 11:51:36 -0500; - moved benchmarks from benchmark/src to benchmark  - added default code style to IntelliJ
708fce2cd770a910f29b1fb3e9011aaa4e96e11a;2014-05-19 17:01:28 -0500;- Added support for combined javadoc - trying to inject adsense and analytics to javadoc
474335673a3eb382f5f63c2ac5da26829041a29a;2014-05-21 11:36:44 -0400;- gradle can now upload to maven central.  Only SNAPSHOT tested so far - Android build simplified by just referencing jars directly - Attempted to add OSGI support - Fixed single javadoc generation.   * Not sure how to get injection of google analytics and adsense into JavaDoc
4a722028f43291a3ddda32fd195e16cac3b74cdf;2014-05-21 10:59:14 -0500;- It can run now even if gradle.properties has not been setup - Removed signedArchives.enabled = false from sub-projects which were missed in the first pass
207c5e3a356baf12cd382654cc0dd5c6ab027104;2014-05-23 11:31:34 -0500;- Adding visualization application for dense flow
dfae143c240569df949c64acb3817c63396dd93c;2014-05-26 12:22:50 -0400;- Working on SFM example - Named jar created for applet
46ffe1d6c2a845175fe8c10896eef66e84883378;2014-05-27 09:52:30 -0400;- SFM example actually works now
4d7222d77f1e99af5d34f6a55f9111b9dec4e4c3;2014-05-28 16:54:44 -0500;- more improvements to SFM example
34193bbd714e99eb7285c93128e1f85fd688034c;2014-05-29 11:48:42 -0400;- Added very basic Processing support
3ee03ed00c956e77881bcaddb57c678956f4f89f;2014-05-29 11:51:33 -0400;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
bfb38f633a4ce9b01b3942dc0e1aec0d29943f69;2014-05-29 12:33:09 -0400;- improved processing API.  Can now chain commands
2786efb18ba52839962ba6a52fa9d5b3e480cd44;2014-05-29 18:24:49 -0500;- FactoryDerivative now uses the default derivative type when appropriate - More work on Processing API
cde44561b3679546b2840ea91a9f9f9681afc6e0;2014-05-30 17:12:59 -0500;- Added getImageType() to interpolation and ImageSegmentation - New stuff for Processing integration
32d36b78e1e4c704f35cd915744e04e695bb702a;2014-06-01 20:34:02 -0400;- Processing   * DenseOpticalFlow   * DetectInterestPoints   * AssociateInterestPoints - Fixed imagetype in some dense optical flow classes
09871dbab580315aef00db157d2b303177c95bf8;2014-06-02 00:00:07 -0400;- Added Config* for line detection algorithms - Added image enhancement to Processing interface - Added dark.png to applet/enhance because dark.jpg has issues with some jpeg codecs
c0fa03c9b60f95f8957f8b901fbc436ccbb40344;2014-06-02 16:04:44 -0400;- Processing examples   - Detect lines   - Remove perspective
9b334852e3d8ecbef78f84438e4921cb595dbadb;2014-06-04 11:45:00 -0400;- XML serialization works in applets (if you uncomment a line) - Tweaked processing example - removed libs
649fe201e17e240ecf5b61f982e326826c21fe62;2014-06-04 12:35:21 -0500;- Updated serialized objects in data directory for javabeans converter - UtilIO has beans turned on
cbaf985a4d139c899ee4e494d3f91f68c190d484;2014-06-04 20:29:22 -0500;- single band images pass object serialization tests
b7891f2ba435adbb2f8477f0b92f6350d18ad3a4;2014-06-05 01:23:41 -0400;- some how the gradle script was broken for Maven/SNAPSHOTS
3dd835af7891c0aaebe1af628f000366e79deb29;2014-06-05 10:07:35 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
2b7c1aa3f79026f7c33dea16aea2de4146f2ad43;2014-06-05 10:12:14 -0500;- Updated main readme to MD format
2ee69ff320d286af99607255cabd0966faee6978;2014-06-06 14:12:33 -0500;- Added eclipse plugin to build.gradle - Updated readme for eclipse
a924aef51d13ff193ddb9253b5a8de72e3579e31;2014-06-06 14:29:24 -0500;- Fixed gradle build.  Now works with Eclipse - Moved a class which was in the wrong directory in ip/benchmark.  No idea how this didn't cause a compilation problem before - Updated comments in two calibration examples
93d63e1c411b504f389bae1cfa8ed8a621926a80;2014-06-06 20:01:26 -0500;- Fixed/finished AverageDownSample with arbitrary spacing
41c268c06e050fc80ca9f174059a77dae18d6b62;2014-06-09 00:43:09 -0400;- Gradle build now prints out warning messages if it skips something - cleaning up evaluation directory a bit - Clarified integration/processing/README.TXT
2b67ecc23de78b1e6a9a0c84da7432c8a5c1330f;2014-06-09 00:52:32 -0400;- Updated for change in GeoRegression   * AffinePointOps was split into 32 and 64 specialized classes
427ad620050ed2ad0c298c27ea9949c41bd237ac;2014-06-09 13:00:58 -0400;- More updates for that change in GeoRegression - Updated ant script so that it links to external javadoc
9a78a3942b7108dbb03c7640def175ddbd971f26;2014-06-10 10:42:39 -0400;- Added Webcam Capture - Added openkinect/example to gradle build
eb317ca75eb5204e29339ac2d6cfce8e9f038c42;2014-06-10 11:28:17 -0500;- Added single image gradient visualization - Webcam Capture examples
804b78196ddd07a9b9a145401044235edbe3f665;2014-06-11 09:17:45 -0500;- various tweaks to examples and evaluation applications - Commented out EPnP test so that all unit tests can pass
4cef729d0058a16c7cfd0c0a33be5d096193fb1b;2014-06-11 23:02:44 -0400;- Gradle can now output a directly with all the compiled jars and the dependencies for stuff in main
77b39322e92534e1c3c8809f3c419e30d1c201cd;2014-06-11 23:03:02 -0400;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
78c8a072b7e83c68c2380a189f35bc3a6d391b04;2014-06-11 23:54:38 -0400;- Can now run webcam examples using gradle script - Moved classes from boofcv.example to boofcv.examples for consistency sake - Improved README.md
de0958cbaeec92ad2f829a8ff256e6a7a972878b;2014-06-12 09:00:18 -0400;- Android module gradle script is now more intelligent and will search for the latest version of Android - Made the README.md and error messages more idiot proof
8b029d8233eb90d07f5c6ad9dcbfc60bbecf46c8;2014-06-12 09:43:28 -0400;- createLibraryDirectory Gradle task now depends on the jar task so it will for sure copy all the jars over
6b1f57715be43007d3d5fe6ecc35ff84f20d3cb3;2014-06-12 10:23:56 -0500;- Added no argument constructor to VisualizeImageSegmentationApp so that the applet can launch it - readme.txt in integration submodules
6220eeb27eac909c5716e668105217e86319a8e8;2014-06-15 00:14:55 -0400;- Updating build.gradle to use latest stable EJML - processing/library.properties has a better description
aca8ccf3e32271a9d532ce2a988c879500e3b16d;2014-06-15 20:22:33 -0500;- DenseOpticalFlowKlt now assigns each pixel the best score out of overlapping templates
b24e2d0266d8a1ac9b2ca51f728fd80c8f9cf6c1;2014-06-16 12:07:27 -0500;- Minor tweak to DenseOpticalFlowKlt - Updated gradle so that it will install jars locally on a machine
e2d142c3a221db116d18d30e85c5fcfe14bec169;2014-06-16 12:15:43 -0500;- Fixed @Link issue in some javadocs
32fce821f0b295255e685aa91248c713323d6c83;2014-06-16 15:24:00 -0500;- source jars are added to Gradle createLibraryDirectory
f5f26e954c18efa474b6c6133fd338c1034f0d64;2014-06-17 12:34:32 -0500;- "Finished" SFM example - Added load images to UtilImageIO
6ccbbcc302a2ae44fea6dfce5471a6e7c2104777;2014-06-17 12:37:50 -0500;- Updating data directory reference
a6776300628b78c956d1468a03f2dc9d451d9b83;2014-06-17 13:41:21 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
360407136ca2a482857befbcead47a6ce5e4e25d;2014-06-17 17:55:11 -0500;- Added Android visualization code
34a83ea236da30009de64166ad7945732baf67e1;2014-06-17 22:13:01 -0500;- Little bit of clean up. - Preparing for v0.17
27996c178fa3092eea1ab8e7b99652ec4449fa4b;2014-06-19 10:49:03 -0500;- Final candidate for v0.17 - Created an ant script which will build javadoc from main and integration - Updated gradle script for release and added a missing javadoc link
17dbd73a2539489f949c3c540d54f9177e8e1ba5;2014-06-20 10:54:04 -0500;- refactoring - unit test to ensure superpixels are connected - fixed lack of ConnectRule in SLIC
f24b7bb6e1ae607f43f3d17275c2b1f2da89ccc2;2014-06-20 11:08:28 -0500;- Updating version
6670eb2e7029df33b8c3d1a657dec493fcc8b7e5;2014-06-20 19:38:57 -0400;- Fixed a few JavaDoc type-os - Processing  * Copies over processing JavaDoc  * Fixed SimpleTrackerPoints.spawn() which did not update the tracks before  * Added more comments to examples
de88fd7af40bf8e91872d321a708cf203af83d68;2014-06-25 14:23:53 -0500;- Clarified documentation in readme.txt's
47276885577ac6f1646cf727a8915e04e35a938c;2014-06-25 14:24:14 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
9b47d0bf45ed5b78efa5e8fe6846f1e5d44881f1;2014-06-26 14:14:05 -0500;deleting jars so that they can be removed from history
8bde247b93570853821ecd79dcddf02535ba8918;2014-06-26 16:32:57 -0500;- removed caliper
692902c6dbd12706400949ffa2d0b87fb3ccfe89;2014-06-27 15:35:20 -0500;- Removing v4l4j
bdae47003090c03386b6b23e2a884bceba242241;2014-06-27 16:15:21 -0500;- gradle build reference snapshot of EJML and won't try to install directories it can't install
7c905db0c258678988fbecf30fcdfdb5bba3dbf0;2014-06-29 19:43:56 -0500;- Fixed OpenKinect examples
22aa480fde4decb5696983a31de866aabd844b42;2014-07-01 11:21:32 -0500;- Fixed gradle script for install - Tweaks to openkinect examples   * All reference the same location for loading the library - Deleted unused python code
28b96a84c450684a939cf18af05f40281f702bdf;2014-07-03 01:19:46 -0400;- Updated for change in georegression - Fixed KLT dense flow unit test
1076329b1dd94c493b9c200c0e64bb07885a9f2d;2014-07-03 12:57:47 -0400;- Gradle script can now remove duplicate files from appletJar, even if the input jars are incorrectly constructed with duplicates
14f6e95a5f24cbd0676a180e524887380e48a9a1;2014-07-03 20:31:37 -0400;- Applet Jar works for real now, even from a clean build - Applet Jar has required security related manifest attributes
4cc06937b8b6024205338338f16ef3dab9b706bc;2014-07-06 19:55:21 -0500;removed pointless code from VO depth example
47a3e54aaada35b19736bcb1579041cb96c1c70f;2014-07-06 20:03:39 -0500;names were also screwed up
9cb1408236f717917b9d67afc90fa90f9a269532;2014-07-07 08:44:46 -0500;- Fixed javadoc text in ConvertBufferedImage - Cleaned up several javadoc issues
e3324c752d04562362a6ef0fb4766eb46ae8ee15;2014-07-07 08:45:12 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
1c835a52a5510dea26c869c11f6a8f8995c8dec8;2014-07-07 18:17:06 -0500;- Fixed monocular plane VO example - ShowImages.showWindow() returns the JFrame
2856764f1ed867b2a986e376c850b6cb539dd0ab;2014-07-09 22:36:26 -0500;- improved javadoc for FactoryKernelGaussian
c11bd1ed0fc4a2ce329762dfd6d7f1f4ed866627;2014-07-15 23:53:35 -0400;- Modified object tracker examples   * mean-shift moved in with the rest of them after image type was modified   * mean-shift example demonstrates a custom mean-shift implementation - Updated for change in georegression
4103ef8e033ec2f8cf4a6ebf6b310ff133436940;2014-07-16 15:32:32 -0400;- Updated for change in georegression
3939b9e1d5a1a72f0d5a2eacc421b228df1f1ab7;2014-07-17 16:47:13 -0500;- Updating for change in georegression   * homo to homography package name
6296a964895ad1402882ef4a7ace043fdd269408;2014-07-22 09:42:17 -0500;- updating for change in GeoRegression   * rectangle 2D classes had been renamed
7dfc9bc13790c6551c2194120138382a87509a46;2014-07-27 14:03:27 -0500;- ImageDistort now supports a different input and output types - Initial sketch for square fiducials
6c68f4feeecd28a1147c1f02ed5786d3996ebf9c;2014-07-28 18:51:12 -0500;- more work on fiducial  * optimization for outside square
d7866c7b703017ebfab10c0d82ffb76b871cab03;2014-07-28 19:22:09 -0500;- Updating for change in georegression - Removed explicit dependencies for EJML and DDogleg from gradle   * easier to keep versions in synch this way
d75463aec90eebd82b8edb1c2d07ab6f6ef6e6f8;2014-07-29 23:47:59 -0500;- Added two techniques for computing a global threshold - Added an example on image thresholding - Fixed problem in FilterImageReflection where it assumed two arguments but some binary operations have 3 now
a49447633f478a529328ae3144f5726916bb0a2b;2014-07-29 23:59:37 -0500;- renamed ExampleImageSegmentation - updated data reference
b0efe9c5f2331284637db42f95ec70e703bc2ad0;2014-07-30 09:38:01 -0500;- Identified issues with mean and gaussian filter.  Updated unit tests to make them fail. - Improvements to fiducial
4defd0f15b302df1f8853c3a927a5b0b41b0cb6e;2014-07-30 21:42:42 -0500;- updating for change in ddogleg
995697584383b14521081f05e886366535b7a7ef;2014-07-31 13:16:57 -0500;- Added Sauvola thresholding - BinaryImageOps.  Added invert - PixelMath added pow2 and sqrt
ece5ba836321861ba81778d26231972de1904f31;2014-08-01 07:16:38 -0500;- fixed bug in Sauvola   * improved unit test - Found bug in ConvolveImageMean   * added unit test which exposes bug
b904f0c546c47e2334e09b3942b301447917ef0c;2014-08-04 07:57:48 -0500;- Application for creating a binary pattern fiducial in EPS format   * Gradle script for invoking it - Start of detector for binary pattern fiducial - pose estimation for square fiducial - minor tweak to Zhang99 API
b3abc9eff8258395933bb0f0079b3d735fc2a93c;2014-08-04 14:48:45 -0500;- Added applications sub-project - Improved CreateSquareBinaryPatternEPS   * white border   * small text saying the number of size - Example showing how to capture images from camera.  ExampleCollectImages - UtilWebcamCapture   * can configure non-default cameras
15258ceb5361bdc959ef1a73df83bca8fb2ab1a6;2014-08-04 19:06:28 -0500;- added rotateCW and rotateCCW to ImageMiscOps - Finished DetectFiducialSquareBinary
4bda79ccf2df571a52419c6772cc9e5cb99c7636;2014-08-04 22:19:17 -0500;- Fixed GImageMiscOps unit test - DetectFiducialSquareBinary now has a fixed size inner image
ab2868ec1cb23c2a10127ebeab765417d9d959b7;2014-08-06 08:00:38 -0500;- Fixed spelling error in ConfigSurfDescribe.Stablility -> Stability
856449d615fedf6ad5f749c9dee0f6d86a763c94;2014-08-06 08:36:36 -0500;- Fixed ConvolveImageMean so that it can handle images smaller than the radius
1a78d6566b7af5b79b036a698f820a560f75187d;2014-08-07 11:54:52 -0500;- Filter stuff   * Not just single band images   * can get output type   * Created InputToBinary   * Added thresholding filters - Made Fiducial stuff more generic with thresholding
773956081281cabfd2c80a42767aa87914f8660c;2014-08-07 23:35:54 -0500;- unit tests - made removing lens distortion a little bit easier - one function in FactoryDistort for cached and uncached distort
a18700d9995b9b11178d4391aeb516e481c75a0c;2014-08-08 09:42:46 -0500;- Added wrapper for calibration targets with fiducials - Moved ExamplePoseOfCalibrationTarget to fiducials and simplified code
3f7520d2cc61a2b8dae006bb254fa66b1e69ab10;2014-08-09 13:29:28 -0500;- added an example for a binary fiducial
1db996636ae678be4c1c44238b458834d82dabef;2014-08-09 13:31:13 -0500;- Square Binary fiducial works now
c07865c78dbab62ec021cba96a1fb42b3a563655;2014-08-09 21:15:46 -0500;- fiducial stuff
91f796a48eecaf3b5aed804d05e58ff9712285c2;2014-08-10 13:45:41 -0500;- fiducial detection is much faster.  Around 6ms now   * probably not handling lens distortion perfectly.  need to write better unit test - Render for flat cube
4455455cac71fd11aaf4c19d9914b0f124bfb490;2014-08-11 11:24:46 -0500;- Fiducial Square   * Finished unit tests and documented code much more   * Cleaned up configuration functions
207d684b7987e7fa1dc08678302545ecf3a9d4c9;2014-08-11 13:38:50 -0500;- Created fiducial generator for square image
c396897a1bb5277f0adfea60443d30a53d895940;2014-08-11 21:17:17 -0500;- Initial sketch of Fiducial Square Image
24f2c75ff2a36d1e954c8263165aa487e05fbcc2;2014-08-12 18:00:59 -0500;- changed order of calibration target points so that the normal of the plane is pointed upwards - Mostly improvements to debugging apps related to fiducials   * Try to diagnose why it isn't more stable
e5a2df845ea3dbd7ec66934b48cdaa884a4c06fb;2014-08-13 23:41:49 -0500;- Completed image bsaed fiducial
b1596ee36e812b61434bdfdabb462ed85a9b21de;2014-08-21 14:01:45 -0500;- updated for changes in EJML   * CommonOps.divide() change it's signature
3ecf17b06051acf9e158795f2e65369c2a790c1d;2014-08-25 16:13:36 -0500;- Fixed bug in ColorHsv for hsv to rgb multi-spectral images
ec041e9f992b0dcf47f80a2206b0542f43635705;2014-08-26 12:10:10 -0500;- updating for changes to EJML
1f0b6760909b42b99004e24e6b40a6f2891fb2e6;2014-08-26 12:10:43 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
4e3e643eb79769306adf0e799ab1ae41b5cec291;2014-08-28 07:55:40 -0500;- Added text fiducial to ExampleFiducialImage - Added ExampleConvolution - Fixed generics in GConvolutionImageOps - Fixed handling of null inside of VisualizeImageData
c61f65f32690a023d48698d0a5620ee4cee03440;2014-08-28 07:55:58 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
c4cc78c1574f5a4838fa8177ffb4af4362ab8fac;2014-08-29 11:48:53 -0500;- Fixing numerical issue with mean filter for integers - Completely broken several low level filters in the process - Intermediate check in
761c63eb191fcf6cbb83243093ade96385410c06;2014-09-02 10:16:57 -0500;- checking in intermediate results   * Standard convolution supports offset for 2D kernel - Unit tests to catch offset errors
5fe4520068586a2cf757c025a31bd4f9490b4b0b;2014-09-02 15:38:03 -0500;- getting closer to having convolution working   * ConvolveNormalized isn't handling column borders correctly
9823795ba6d3a6c5df18b82271ac46d5962efa0e;2014-09-02 23:07:37 -0500;- Finished reducing round off error in mean()
54b7922068c187a67850f12d2a009080f8279200;2014-09-04 17:49:12 -0500;- Minor tweaks to fiducial examples
c13f7b8b802efc60d4995b66f49d9ca1647fd2f5;2014-09-04 22:47:25 -0500;- merging changes together - javadoc comments and such
bbc83160b2dc738c0cf253213050076c2fc74d6d;2014-09-05 16:33:12 -0500;- more minor tweaks to fiducials - adding images for calibration fiducial
c93b8086d4c710ad90844090c6e5351f12eaebcc;2014-09-08 08:47:11 -0500;- partial revert.  Vertical U16 to U8 no longer done.  mean and gaussian are only approximately correct
4e19011a5aae8328c472cabc6253868869be4247;2014-09-08 11:12:51 -0500;Generated PS files for square fiducials are now wider.  Should handle slanted views better now
4bc62e3a1f12bff31958105c4d299b4d4dabab89;2014-09-08 14:43:45 -0500;- increased size of border in square fiducials to improve performance at small acute angles
1823f32dcd1a546743180d1569b57c089ba89f4b;2014-09-09 23:18:59 +0900;Add Gradle wrapper
4cb993caea9b42b4dd831062761e44198907b36c;2014-09-09 20:27:36 -0500;- Updated for new fiducial file names
9cec23a478b9751ae4090598a3d061f1009df477;2014-09-09 20:29:02 -0500;Merge branch 'add-gradle-wrapper' of https://github.com/nobusue/BoofCV into nobusue-add-gradle-wrapper
c2275e6456fea3deea5729bb1d689941a717ee30;2014-09-09 20:30:49 -0500;Merge branch 'nobusue-add-gradle-wrapper'
5ba77795393a62f029ad0c6b3ee49ec14e6ac41a;2014-09-15 11:25:47 -0500;- Borders in watershed can be larger now and easier to see when visualized
06ae651c6c720c9512937ede30b0166ec4ade9dd;2014-09-15 11:26:03 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
6ebbdc71b81219d96cbf8266d1567a305164388f;2014-09-17 08:35:02 -0500;- minor tweaks
10df7e86a6d7c4962b23f1122dfabbcfee56dd6d;2014-09-17 11:32:48 -0500;- Adding fiducial movies
fb91589fd16989d59540c35caa1889d7f1d0fbfc;2014-09-17 11:34:07 -0500;- updating data reference - comment in VisualizeRegions
40aecdb5d7909889f486a4c3c6ada26bcdfa40f7;2014-09-19 12:58:56 -0500;- candidate for v0.18 - tweaks to documentation
470ecbf43c026043e1172d6e759eb991c3d677b6;2014-09-19 15:46:05 -0500;- Updated processing   * Still needs to be tested - Fixed broken unit tests
31b3377c5f0b1f4af43dce116acfc9c61ab32956;2014-09-19 16:58:41 -0500;- Processing stuff is working - Visualization of fiducial in processing
8e5e8ef591e4dce598b2f59a1071305a855df642;2014-09-22 14:18:39 -0500;- Updating data directory
ff186246fd3f147eec323db85d5386f387145449;2014-09-22 15:04:56 -0500;- candidate v0.18
80b4b05f7b436e6b9013a366f26cad76f413c67f;2014-09-22 21:55:10 -0500;- fixing xml issues and a tweak to an example
46da9c7ad7499fd0f9ce0c232a6a1d23ff939ab5;2014-09-22 21:58:40 -0500;- final candidate for v0.18?
e673767fa85e600e18b4354531e0f90e8d787c8d;2014-09-22 22:51:06 -0500;- Fixed bug in association visualization application
9159ed96b2374ac38d19efe7c0bc4b9e711d8711;2014-09-23 05:15:40 -0500;- updating release check list
2b7cd09ecae36426b7e2c3972700bbb82de30260;2014-10-01 11:52:30 -0500;- updated gradle to snapshot - Comments in ColorHsv
1e195935bccd165730e3ea24af900b1dcabde1a8;2014-10-01 13:59:17 -0500;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
54fbdffd8a9832297c6cb012d0cb512e143203c2;2014-11-18 14:41:11 -0600;- Updated code for change in DDogleg and EJML - Changed CachedSineCosine by removing -1
8a601eead55aa2e9461c7a15ece21e30b4515b42;2014-11-18 15:00:34 -0600;- Moved BufferedImage to IO package since it is swing dependent   * Suggested by Baha Elkassaby
936ec42217608ce2efd21dbc204db5afd23a7cb4;2015-03-10 20:05:09 -0400;- early sketch of scene classification using new clustering code
b152827151c5451a7101bca19203af4ffbdd1b70;2015-03-13 00:21:12 -0400;- Added JCodec back in   * convert from Picture to boof
990f88dfa1c8f1984fc1310ff0687340fe8aa582;2015-03-18 14:19:13 -0700;- Made converting between images in Android easier.   * Don't need to know the boof type in advance - Similar for AverageDownSampleOps - Created DynamicVideoInterface which sees what libraries are available and then switches   between them at runtime - more unit tests related to visual words
29c7b379d3a63224b130870ff9c5067c7bda66b9;2015-03-20 15:13:25 -0700;- Added ConvertBitmap.boofToBitmap() which takes the usual boofcv image formats and converts them into a bitmap
46a501793893ebd74226249f96a1426139309231;2015-03-20 15:27:49 -0700;- Made ImageType serializable so that images can be serialized   * Added serialization to singleband and multispectral images
1bac315a78244fdee06e8f7f3cf137afe9316b54;2015-03-25 14:08:52 -0700;- Added set function to Point2D3D
88e1ecd7f5396f1f19ba393d9973d9a8b0f9d529;2015-03-29 11:04:10 -0700;- BOW   * unit tests   * documentation
3846ade64fa1a736f317aaffde965f2b04c4b5e1;2015-03-29 11:42:28 -0700;- Updated readme - added main:all package for including everything
e675543902a48169e41e05ba4d95a02aa0189413;2015-03-29 12:23:18 -0700;- More improvements to README.md
70c3ce4cc0382a750aaf0b4dbeb8c8e377cba8ab;2015-04-14 08:40:57 -0700;- Adding class to all package so that it can be uploaded to maven central - More useful error message in ConvertBitmap.grayToBitmap() - disabled tests in Android pacakge
0fdad04dabc358e2bc8d718f2685c34c362d0e23;2015-04-17 08:26:41 -0700;- change behavior of image.setTo() so that it will resize to match the input - removed accidential relaxing of function permission in VideoDisplayActivity
e4671f8b72de58dff459b9cdb4fb764624c4c840;2015-04-17 22:47:01 -0700;- updating release check list - fixed test in TestImageInterleaved
87d3dea4441acdd37ab7dd7bd56eb9d9fde4f5b6;2015-04-18 08:44:40 -0700;- In-place square image rotation
bd4edc181cb17871b004b519fc81c99c7eeb0bef;2015-04-18 10:54:23 -0700;- fiducial image now can have the size independently set - added getWidth() to fiducial interface - fixed TestGImageMiscOps
1ff6e47300469d150cb2d7a55a2c9711bb842f63;2015-04-18 12:06:21 -0700;- better documentation in Pixelmath   * specifies that upper and lower bounds are inclusive - BaseDetectorFiducialSquare gives a better error message if you don't call configure
b42890a2d621d9cefdecf8687dc7a3b741acc234;2015-04-18 14:29:14 -0700;- refactored fiducial stuff - added new function to PerspectiveOps
b5faa90242a17bbb439c088e78a72ef82a917504;2015-04-18 14:58:57 -0700;- refactoring
e1725ba84b45875b7bcc4807222bde753bb86004;2015-04-20 19:49:31 -0700;adding a downsizing application
38b8603f69e88e4954ab08fd73d9d7930fdc7949;2015-04-20 20:08:25 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
0d88539f0351e7c7b051d36d11ac7f6e21690663;2015-04-20 20:31:55 -0700;- Deleted old BatchShrinkImage - Fixed bug in AverageDownSampleOps - Type-o in  UtilImageIO.saveImage()
02f5bd4cdacd464702d6bb3b36974f02f4dd3b81;2015-04-22 15:22:31 -0700;updating reference to data
eaf0fdb7aaf81d462a2b14a590f1294a70649e06;2015-04-22 21:39:18 -0700;- Put new in-place rotation to use in square image fiducial - Improved comments in geometry classes
7319db19514fe74ae8eb8db853270962f40e7183;2015-04-22 23:22:12 -0700;- Created a FactoryMultiViewRobust   * Simplified code a bit using that factory - Worthless start of ExamplePnP - moved robust geometry code into geometry package from SFM
e77ac8d53917b5b5e33f4c7905042d3b8ad1aa76;2015-04-23 08:34:37 -0700;- FactoryMultiViewRobust now uses config classes
23d2d1577770085ddc0d0063ec90272e256e8317;2015-04-24 10:55:48 -0700;- Adding work in progress for histogram color feature
88165bac058832a9581ac7df46ff63fabd979cb0;2015-04-24 10:56:25 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
5b345ffb5e1a65bafd359e5f93a923bf9ed0d584;2015-04-25 07:02:51 -0700;- Intrinsic parameters   * flow style assignment   * tangental distortion parameters
ae6d8c7a6d5e89ca49f9ae917849c6d43818e2f5;2015-04-25 07:03:53 -0700;- Android  * CameraPreview constructor is now public so other applications can use it directory
20a6464ea61d13d1be340f6d230cdfc9b06fb88a;2015-04-26 21:28:27 -0700;- Added serialization test for IntrinsicParameters and MultiSpectral image
de26a56223d83a5b2b8612831309717a81b6d085;2015-04-27 06:56:08 -0700;- added tangential to Zhang99Parameters
61bea1a33a7a485e7b18ae05aa6bdd89b0181fad;2015-04-28 10:36:52 -0700;- Zhang99 jacobian with tangential distortion is working, I think   * switch to using relative error for comparing against numerical   * tolerance still seems a bit too large - Fixed bug in Zhang99 Jacobian   * used undistorted instead of distorted normalized image coordinate in one spot
34bbf5af114d2d42a237c4b318d1cc29ea127be1;2015-04-28 23:33:32 -0700;- cleaned up some Zhang99 related unit tests - Updated distortion models to include tangential terms
4302f05300f4c588161faa2c29df18d6913daf91;2015-04-29 07:53:10 -0700;- ported changes to F32
921685d7c08d72d8167ea6ce36fb1a75e10f6968;2015-04-29 07:57:55 -0700;- reverting two changes that shouldn't have been committed
a7f94f9c42c9c6cbee035126bc39b0ad0959b0d0;2015-04-29 08:23:49 -0700;- provided easier access to calibration parameters
f0122fe13c7655c065873e950655f92eb4d472d1;2015-04-29 11:58:50 -0700;- Abstracted lens distortion, resulted in some significant changes to code - Removed P to P distortion since it can be accomplished using a little bit of abstraction
fed329c98e58f695d24cfbc1566a44fc4263bb99;2015-04-29 14:08:03 -0700;- Removed flipY from intrinsic   * Never used and you can just flip the image   * simplifies code and reduces edge cases that need to be checked - Removed unnecessary functions fom LensDistortionOps
9f8b2e9d168dba8aacf96ba8dad57653cba2d476;2015-04-29 16:29:22 -0700;- LensDistortionOps   * Can specify direction of transform which adjusts view to be full or all inside - Tweaks to calibration apps   * when undistorted location of visuals are also adjusted   * fullView is used now - Removed more references to flipY
ebcf10220aa24a849230723e885da0d9d4798926;2015-04-29 16:30:13 -0700;- Removed flipY
f697e6b38e12c2839b6118235c00c680682edd65;2015-04-29 18:52:31 -0700;- Calibration visualization prints out files it can't load - LensDistortionOps fixed fullView and allInside - DefaultMediaManager.openImage() returns null instead of a RuntimeException if it can't load an image
0b33cd44b4640be3d3f2693dbc7af3412f61638a;2015-04-29 22:16:13 -0700;- fixed square grid calibration targets detector and description - turned on numerical jacobian in optimization to speed it up    * seems to produce same solution up to 5 decimal places in cost function    * much faster in one data set - minor usability improvements in apps
acfb30c120f02794c1bc94f4d94ce2d3fce0bde6;2015-04-29 23:29:03 -0700;- Single class to describe a calibration target - Noticed important classes without unit tests, created some empty place holders
39db2cbe7f3845dbe8aabc935022b766a0475e7a;2015-04-30 11:00:52 -0700;updating data directory
e66a880b63fe2b47b77f6579c1ba082575814bb6;2015-04-30 21:50:40 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
d1f121ab4d037aade97002e17ff5c84819cea4aa;2015-04-30 22:45:14 -0700;- cleaned up 1D convolution kernels   * Removed comments about it only working with odd kernels   * Made it easier to work by providing an offset directly instead of automatically settings the offset - Added copy to kernel base class
27117e30687565a5c13e4f7b18c1c7e1df6a8328;2015-04-30 23:19:19 -0700;- Created generator for Kernel2D - random 2D kernels now takes in width + offset instead of radius - Made it easier to create a 2D kernel from width + offset
d5a39389a9a071923089c71f1a51f5a2fc803c07;2015-05-01 00:39:26 -0700;- More generic functions for creating kernels in FactoryKernel - More rigorous tests in ConvolveImageStandard   * explicitly tests kernels with an even width
ee2b6f49420845af96a5a73ff03b140f67222906;2015-05-01 06:58:18 -0700;- fixed issues recently introduced to the kernel data structures - more rigorous testing for different shape kernels to:   * ConvolveImageNoBorder   * ConvolveWithBorder
3d0078ecd0b62245430c08e6b53297404ddc3dd1;2015-05-01 08:45:37 -0700;- Created auto generator for NearestNeighborPixel - Interpolation now has a function which can interpolate along and outside of the image border
d8e911674202ca599f362e1c511bfdd01492b56d;2015-05-01 08:53:44 -0700;- merge from head - resolve conflict
75728d52c53312fb9552510c888f190e01b03d10;2015-05-01 08:54:16 -0700;WTF it didn't commit everything
e764ae5408af1897ecb874d23533a0130b3fa18b;2015-05-01 11:00:15 -0700;- Fixed an edge case with border bilinear interpolation.  When very large coordinates are encountered you need to use a different method to find the remainder - All unit tests pass now
b42c8efab8ba623b188339c8dfc5991e98924e80;2015-05-01 11:01:44 -0700;- minor tweak to bilinear pixel generator
94fe13135aed77bc4ddb5347c37fa36f194512cf;2015-05-01 11:02:20 -0700;Merge branch 'master' into tangental
5a617b91810ba5d32f4d942567411539542b1d61;2015-05-01 14:14:59 -0700;- wrote more unit tests
5e9c570add4b3bd14a711b42b48093c4bb23974b;2015-05-02 09:20:26 -0700;- wrote more unit tests
fb88ec002cf6626e89e7f5b89a9fb013a2a4df5a;2015-05-02 12:55:54 -0700;- added two more unit tests for mono and stereo planar calibration
dc79f1d4fa7c2490010df127d72ae3c9d49f0b32;2015-05-12 20:27:45 -0700;- removed extra information from help in BatchDownSizeimage - Fixed layout of square-grid calibration target to make it symmetric - Added unit tests which check to see if calibration points are symmetric
37d24ee6902e569042612a47776596328ab1b6e5;2015-05-12 20:46:56 -0700;- LensDistortionOps   * Re-wrote computation of adjusted intrinsic parameters   * Added unit tests for adjusted intrinsic parameters - PerspectiveOps   * Simplified adjustIntrinsic().  No longer creates a PointTransform   * Added F32 versions of a couple of functions - RectifyImageOps   * Cleaned up comments and made it clear if an input was modified or not
2f833556a4cff1588e883f4c23091525e20f284c;2015-05-14 11:13:08 -0700;- updated ShowLensDistortion application   * Thought I already did that - LensDistortionOps.removeDistortion() now takes an enum in for the type of adjustment
2a35ca81d4515d92c1465799abdff0f1144df747;2015-05-14 11:23:59 -0700;ShowLensDistortion now has better defaults
7ba4f145b6d84732e162d4aae6fb46afb646e7d8;2015-05-15 08:51:22 -0700;- VisualDepthOps   * Now uses the new method for correcting lens distortion
eabf36fe7a4a101e57db9049020da01354cc5ecc;2015-05-16 15:23:09 -0700;- initial sketch of new square detector
898b2c9b4501ae4b3aa3c817396c99112579e4cb;2015-05-16 19:36:41 -0700;- Added FDistort   * switches lots of classes to use that instead of ImageDistortOps - ImageDistortOps   * Can now specify how the borders are handled.   * bad.  defaults to no border - Changes how scale scales yet again, which breaks some stuff
e55468f65aa1dabea9c6fcb66d3b1f04ba182091;2015-05-16 20:36:31 -0700;- Updated BroxWrapping to handle the new scaling - Added more border options to FDistort - EvaluateInterpolateEnlargeApp now uses an extended border which fixes its problem
ec322fadfddd88149a8cf19037e71331552c5e67;2015-05-16 21:00:23 -0700;- Added FDistort.scaleExt() to scale and use extended border   * changed more functions which scale to that since it's really what they should use - Fixed bug in VisualizeBinaryData.renderBinary() when invert was true
c6d42a0ac6cb1f262c67ec5399a0b8562892df72;2015-05-16 23:47:38 -0700;- new refinement alg seems to be working   * two more unit tests left   * accurate to about 0.15 pixel - FDistort now can take in an affine2d class
2f989943b4feb9ed9836006a912341aed15734e3;2015-05-17 10:08:56 -0700;- Added minus to PixelMath
22d39e91777cf4e2e881fcb1dce047a3bd4b7319;2015-05-17 15:55:04 -0700;UtilImageIO can now save images in BoofCV format directly
f95bbe5c7191927ba973df92faa65bcd2dab3906;2015-05-17 23:09:19 -0700;- polygon to quad finished
18b4a721eb8aa211ea17679f65aa8b7d1559c1a6;2015-05-17 23:19:27 -0700;- renamed square to quadrilateral
27637eb3e2f8ff489390c3b6b8d4c93f82c61768;2015-05-22 06:40:00 -0700;- image fiducial generator now can output variable resolution images to the EPS document   * resolution is dependent upon the input image
952f72bee7d8024dd2f125d7bf593723741b1403;2015-05-22 09:19:03 -0700;- Sparse gradient   * prewitt   * sobel
c3d5c583bc4ea8d998fa653e2c659f90af015b5a;2015-05-22 18:07:50 -0700;- merging in improvements to CreateFiducialSquareImageEPS
5de5306806640799102699edc7849fcb76a43829;2015-05-22 21:46:13 -0700;- Sparse gradients added - Initial sketch of corner fitter - Updated for changes in ddogleg
407a090a2e83fe922184e625c01c5511de2f247c;2015-05-22 21:46:30 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
d284a29e1cba58c0689196f7ec2f2082f699a06a;2015-05-23 09:40:24 -0700;- flushed out corner fitting   * tests show there is some room for improvement   * change optimization to use dot product since it is a minimization algorithm - Sparse three gradient - ShowImages   * Now takes in a generic boofcv image
871da8bc4add67ebd9b5e1d548fb05f2f96e8283;2015-05-23 20:41:20 -0700;- added crude version of weighting to SubpixelSparseCornerFit - can now take a float point as input
d20d69c4365bfed43643ec4bd4f1cec81b15a40a;2015-05-24 12:08:07 -0700;- Sparse Corner Fit   * fixed bug in functions where it didn't handle r2 = 0   * created a benchmark - GImageSingleBand   * can wrap an image now   * new getter function with less overhead - ShowImages   * Added back the capability to display an intensity image
d4e172ee7dde76ceecc448e58feb09a68464e636;2015-05-24 12:22:44 -0700;- SubpixelSparseCornerFit   * optimization tolerances were too tight making it run slow
df3ed11726e7cecb97202a83923602e63359b5e4;2015-05-25 22:47:24 -0700;- minor changes
bbeac3877a8c8f832ab1b07abc1a6cee36750acb;2015-05-26 23:11:04 -0700;- Initial sketch of retooling.   * find quadrilateral to generic polygon
e3570a62005167a40a6fc7ee40c7a35abd705f47;2015-05-26 23:11:21 -0700;- Initial sketch of retooling.   * find quadrilateral to generic polygon
2d5d5c757a810ee1f18fd72ec2bb6aac0aa92916;2015-05-26 23:54:36 -0700;- fixed unit tests for RefinePolgonLineToImage
efab4f15ee2a927426818692a1d4c71e89d0bd82;2015-05-27 22:17:56 -0700;- Partially working ImageLineIntegral - Modified test for RefinePolyugoneLineToImage so that it checks for what I think is the correct behavior now
afa8df8bc74f9f54d3505b2dc11dbae171d62aa8;2015-05-27 22:28:18 -0700;- line integral can better handle image limits
302f921f8b7646c295cf4a5fc581aeb08eedd964;2015-05-28 17:25:28 -0700;- RefinePolygonLineToImage now passes all unit tests
2b935cb6b16fb4b150a44001ddfe82c96f9bcaf4;2015-05-28 19:09:46 -0700;- Fixed bug in bubbleSortLines   * appears to have broken something else   * might need an entirely new approach
92716034937ecae52926ed16a46bf47fd5574d67;2015-05-28 21:28:15 -0700;- deleted ReduceCornersInContourPolygon   * just do a better job for tuning split merge - first successful extraction of polygons using the full process in a unit test
3da6cfbdd6af7b5574923a4596776203627786fd;2015-05-31 11:01:07 -0700;- rewrote a good chunk of polygon fitting - abstracted out with a factory and config files - integrated new square finding into fiducials
c36946d2cb83b36201d891746082cb3cd2f39a86;2015-06-01 18:42:10 -0700;- bunch of square detection and fiducial changes   * appears much more stable now and no known bad real-world cases - added VideoPolygonDetectionApp for a video which shows it detecting squares in a fiducial - FactoryMultiView.refineHomography()   * fixed simple and sampson being swapped
e2be29d7e307656ed9603804c2ae69da6b0c1531;2015-06-02 17:00:35 -0700;- more unit tests for polygon detector - added ability to run applications in evaluation through gradle - minor javadoc and config changes
1393f09575e61d4c9b6bcad821752cb00d1eb506;2015-06-03 08:59:52 -0700;- Can convert from 8888 to 3 channel multi-spectral images - fiducial benchmark added
82b8c698be836fd826dfda890815df11415c67e7;2015-06-04 07:26:15 -0700;- bunch of tweaks to initial polygon finding
e08668db3ef20deb15a020fe9182412b953221a4;2015-06-04 14:44:47 -0700;- polygon detector no longer needs to undistort the image.  It only does so along the contour then the line integral can do it internally.
051ad3b8a1431b5bc3326b6b31407be0b293db6f;2015-06-04 16:10:11 -0700;- unit tests in image processing - unit tests for PointGradient - fixed some fiducial unit tests with a configuration problem
c4655b8cf296d12c4d16a3224d19bf5a640773c6;2015-06-06 10:17:07 -0700;- unit tests for polygon detector and fiducials
2263f2ce6c21f2bf2179a092f2903b56959b909f;2015-06-07 10:50:40 -0700;- more sparse gradient functions - another variant on two-gradient -
ef2c9aa1fe80c41951668308762c40f55f498a3d;2015-06-08 05:56:21 -0700;- Created SnapToEdge from code in polygon fitting
f1651cc99e767f6cd22b1e9de258b317feb6b0db;2015-06-08 05:56:48 -0700;- Created SnapToEdge from code in polygon fitting
891e5855ba0cb42944de2b86be84eb1db89d97d6;2015-06-08 07:24:00 -0700;- updated comments - initial sketch of RefineCornerToImage
8a507e67c4b9521f11dc80714e7ed318280a6015;2015-06-12 08:51:03 -0700;- work in progress for RefineCOrnerLinesToImage
0a3359fdaa90a81045c39e912128cd29b46a1d42;2015-06-12 12:44:27 -0700;- Added what I think is a working corner refinement algorithm
ed9960f3f4598621af9f64384c6ce7c52d9bcd74;2015-06-14 21:29:25 -0700;- Changed the coordinate system used in BaseDetectFiducialSquare   * I picked some god forsaken one arbitrarily which made no sense in any context.  While I forgot that I did that and picked a sane one everywhere else.   * Added unit tests for said bug
dc966626756af25237213835b3c958eb01fb5d0b;2015-06-14 21:49:12 -0700;- some improvements to applications - other minor tweaks and code comments
04b678bc9e1997904f96c5f5dcfb322ec05f1e05;2015-06-15 05:15:57 -0700;- adjusted how the homography is computed in the fiducial to better sample the outside edge
7b1ab889242372410bc72a009217c5222dc55717;2015-06-15 18:04:33 -0700;- Can print a grid of fiducials on image - Start of common class between fudicial creators
1f390cd4a187217eeb9df92546c7235ad2d4b1b8;2015-06-15 18:32:40 -0700;- fixed bug with eps fiducial width
10a6960fcaf0038914ee87b20f6452d23c60b71f;2015-06-15 20:38:39 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
485131efaaf7557ddf197efd67a73c6048cb25c1;2015-06-16 11:04:20 -0700;- fixed flipping issue in fiducial square - fixed homography calculation for removing distortion   * Unconvered a fundamental flaw for how distortion is removed that causes pixels outside to influence pixels inside   * Changed from bilinear to nearest-neighbor interpolation to reduce this issue - improved fiducial unit tests
4952ea5da309c79c234b0456399cb1f83d0c30d2;2015-06-18 06:06:30 -0700;- synchronizing code   * empty unit testes and removed unused code
3032ec90ebdc393779956b7665e735cee7e13cad;2015-06-18 07:16:20 -0700;- refactored LensDistoritonOps - changed fullView to shrink
44fa6078a05d1e690a7fe845b559743734aced06;2015-06-18 07:46:14 -0700;RemoveLensDistortionApp uses a border to make edges smoother
ac0b8d4707b9378d0318c90195161f162bf4685c;2015-06-18 09:24:28 -0700;- InterpolatePixelS   * combined get and get_border.     get needed to do the bounds check anyways.  might as well call get_border - SnapToEdge   - No longer requires that the transform be inside.   - interpolate border is set and it should be inside the image 99% of the time anyways since the original coordinate came from the input image - BinaryPolygonConcexDetector   * now this checks to make sure that the undistorted image has the same bounds as the distorted image
2ad16b0cab4ee878e9aea618a98e9b65b3a34dc3;2015-06-18 15:47:14 -0700;- more support for F64 distortions - BaseDetectFiducialSquare correctly handles distorted images
18e58b636f24c14aee27801e96b00531f657382e;2015-06-18 20:31:49 -0700;- work in progress on applications
3c8b8133c179558b8d0be447ba40685ff5ee6c4f;2015-06-18 22:09:53 -0700;- improved image fiducial app   * can specify a paper size   * automatically centers   * can include multiple images in the same document   * more - fixed and cleaned up unit tests - removed failed path
f1f1c057ef4420b3acd43d0b8dbc9a8e0883a8f0;2015-06-19 07:59:38 -0700;- added page border to fiducial EPS - Fiducial examples now use getWidth() instead of a hard coded width -
fc977f8a1a82ee7aa0efa6d107e9cc7ccaf6bc8d;2015-06-19 10:02:33 -0700;- webcam fiducial code now displays the ID number - Changed ExampleFiducialNumber to ExampleFiducialBinary
7dd6dac3cf0770f7741d2139134f5ea329487a58;2015-06-19 15:14:28 -0700;- Reduced default minimum contour size of polygon detector so that smaller regions can be found - Refine homography in BaseDetectFiducialSquare   * Doesn't seem to do anything but is there - New error message in DetectFiducialSquareImage if addImage() has null image - Turned on sub-pixel rendering of polygons and cubes - drawCube() now draws a whole cube instead of half a cube
10fe466470e4cd339b25c5fbab6fd71abc9c1d9a;2015-06-20 11:10:12 -0700;- Switched BaseDetectorFiducialSquare over to using PNP based method - PerspectiveOps now checks input intrinsic and makes sure it doesn't have distortion parameters - Added WorldToCameraToPixel - Identified bug in conversion of rotation matrix to rodrigues
d0cc00870b8ba4a5755f509190a5457583ff3a05;2015-06-20 15:31:23 -0700;- removed debugging print statements
a6eca46aca9b58e34d08897a52dfd59b3f310836;2015-06-21 21:13:43 -0700;- Updated Webcam Capture to 0.3.10
c4a2a33a80d2682433d1a88d03bde509923b9efc;2015-06-23 04:36:18 -0700;- Changed AdjustmentAType.SHRINK to EXPAND, since that's what it actually does - LensDistortionOps   * Functions which take in IntrinsicParameters will not account for lens distortion since I couldn't even get it right before - IntrinsicParameters.isDistorted() now checks to see if radial values are all zeros too - Correctely turned on anti-aliasing in several visualizations - ShowImages now provides an option for exiting on close
a051d3a75dbeabd8781f4f1ff001fac293c895ea;2015-06-23 16:53:42 -0700;CreateFiducialSquareImageEPS  - More control and easier to handle grids  - Can print grids too
c4499cb7a78b09cf2189e831882096e537b77fdc;2015-06-23 18:46:01 -0700;- Added new function to BinaryImageOps   * labelToBinary() can now be called with a sparse set of blob IDs
bda39e731bb6ff1578ff640297762d350560fc58;2015-06-23 20:52:37 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
758a5efcde0a52795468f6eb44fb05e599757c9e;2015-06-24 07:43:06 -0700;- unit tests and bug fixed
e7f2026afe91b618a43528324cfdf92024e7c8b9;2015-06-24 10:38:10 -0700;- unit tests - Renamed LensDistortionOps.removeDistortion to LensDistortionOps.imageRemoveDistortion   * less confusion when trying to find a function to distort an image versus point
b9a6631df2a466c173fbd81c129f75e2822e9a22;2015-06-24 22:37:53 -0700;- more unit tests - all tests that should pass do pass again
2a78fe060f93bb3d1f78de63efdd4d2cf7b97764;2015-06-25 10:17:08 -0700;- Added mask to template matching
1f90aa9deb18649d3df6539d05066aa43d2e1ed9;2015-06-26 21:43:28 -0700;- ConvertBufferedImage   * Tweaked defaults for boof to BufferedImage.  Single band images return single band images.   * Thanks thhart for pointing this out - More applications in evaluate quit when you close the window
07917c842959f4e7025bba4273a8c68b25aace84;2015-06-27 07:42:45 -0700;- Changed threshold up from >= to >
41e833fb6375f2a581ae6dd90e7c8bb30f0e5bc9;2015-06-27 08:15:15 -0700;- Added images to fiducial javadoc - changed image fiducial to take in binary image    * High level interface can take binary or regular images
a22fbec8d8126fdbc96903154a83cecb8c2ed2be;2015-06-27 18:31:25 -0700;- Made it easier to render the fiducial's number - Updated square fiducial examples for new images - Applications   * Fully featured command-line application for making square image fiducials   * gradle task for creating a jar
552e6de3be412865157f5da6e4e7b955c3ab2f61;2015-06-27 18:53:54 -0700;- update reference to data
0e69599e6a173566de84301173c76deecc035898;2015-06-28 05:53:41 -0700;- update reference to data
170d8f19248b860cda09fa5a1ed0e07338c1cfaa;2015-06-28 07:18:28 -0700;- Updated template example to use mask
ce4cb6da782a3473a461aceb4a5cafd0e6a9759d;2015-06-28 07:18:53 -0700;- update reference to data
ae2f538c15f7ceed5cbf59932d4a1c27ce0591b0;2015-06-28 07:22:01 -0700;- added comment about who requested a new feature
ea0423a3f3c599823504ae2ab39013f3f783adb1;2015-06-28 11:02:10 -0700;- Fixed/Created unit tests - Added subimage which does not require null to be provided
866cc9a612b446c9211386bd650bc5811188650d;2015-06-28 12:22:09 -0700;- abstract out BaseFiducialSquareEPS so that it doesn't contain image specific code any more
7880ecb29552b6740c1c8e27d8786292e089fec2;2015-06-28 21:23:25 -0700;- Updated binary fiducial generator application to use new code - abstracted generic code even more
5f86926c3d53e23b2e7029dc65e2129d1b48682f;2015-06-29 15:41:39 -0700;- added toString() to several fiducial related config classes - formatting
0d9886f77c8372853d84587fc1ea0eb93ae63b45;2015-06-30 16:45:15 -0700;- Initial check in of PyBoof
4d721c500f589569ef9f73d394a1ad0a98a8447a;2015-06-30 16:48:23 -0700;- update change and settings.gradle for PyBoof
cd08d0d8c85ffee0962921638a44afa00ae35ee6;2015-06-30 17:23:08 -0700;- pyboof readme
e62e1101811ab80e1703eed4ef33079d76f1a5f0;2015-07-01 06:31:06 -0700;- comments and minor changes
892f3ddc5c1749615df3b900a179cbaee0feac28;2015-07-01 06:31:19 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
fb8c2894bc96bdd1c7551b41db7c453272e47f81;2015-07-02 19:42:43 -0700;- PyBoof   * Added more image conversion types   * Supports color images now   * Wrapper around ImageType
d2b37ecb9ea1bd10aad3e5ffa2d5fa18fc692542;2015-07-02 19:53:15 -0700;- added ImageBase.createShapeShape() to create an image of the same shape
756c9210560f79071d79fffe23193731acbcbeae;2015-07-02 22:04:44 -0700;- Used createSameShape() in examples - Fixed bug in ShowImages.showGrid() when the number of input images was not the same as the number of elements in the grid
691cd641f42663d353ff80f207bbc02774db5437;2015-07-03 06:20:47 -0700;- PyBoof   * Pushed java visualization code into swing.py   * Added gradient example   * Updated code for BoofCV changes
4f4b8a12cf69641300d20e2b42c63e09a30152f7;2015-07-03 06:21:52 -0700;- VisualizeImageData   * Added image type generic visualization function for gradient - Used said function above - GImageDerivativeOps.two1() was added
8c77f01d3a4fa4ef2f09f23bd6faaf7997e97011;2015-07-04 09:05:27 -0700;- BatchRemoveLensDistortion now checks to see if the width/height from intrinsic match the actual images - Updated TODO list in change.txt
39a73adb13726e65c7a11bb8ec0573ede38339d3;2015-07-05 12:08:11 -0700;- Added PnP example - Discovered regression issue in P3P and fixed it - renamed LensDistortionOps.distortTransform() to transformPoint
7b20c952d747003d665f33f9ca51d1cee8d0582b;2015-07-05 17:53:09 -0700;Merge branch 'master' into histogram
5f89fc9db3aecb3adf58bb9694e165700c76d293;2015-07-05 18:10:36 -0700;- updated change.txt
c002003dc1852309b5d6536f97506925bc64471e;2015-07-05 18:10:52 -0700;Merge branch 'master' into histogram
c7c900e3f85f72ec82f6be41e96d0f2dee3a749a;2015-07-05 20:46:44 -0700;- Added normalize to UtilFeature - HistogramOps does not work on a special data type.  It's just a Tuple - Added fill to TupleDesc_F64
58eaa50d7143dd59e4ab91cdd467f55587a63a65;2015-07-06 16:17:59 -0700;- Moved descriptor related stuff into its down package - Flushed out color histogram features more
2bf3d145ac5233aa19e78b5dc299da113d55afe3;2015-07-06 17:08:33 -0700;- more classed to Application help - Tweaks to ColorHsv javadoc - grayMagnitude for ImageFloat64F
6316524c3eb03a0984582b164414e0253ecd6835;2015-07-06 17:08:44 -0700;Merge branch 'histogram' of github.com:lessthanoptimal/BoofCV into histogram
df39f99b0b6cc583aad1357385d430730f832090;2015-07-06 17:23:53 -0700;- refactored fiducial image
48a5cdda04b27907863cde543171c1584f5acd8f;2015-07-06 17:35:49 -0700;- Moved FactoryTriangulate into FactoryMultiView
1bf5124cb6876735042a42a739eb832cdd00035d;2015-07-07 16:49:45 -0700;- visualization is done with interpolation now in calibration app view
c0e11b5ba0a255b7c4c7036220a108b90885667e;2015-07-07 22:26:57 -0700;- flushed out color histogram features more - renamed MultiSpectral.getType() to getBandType() to make it clearly different from getImageType()
244383bfa65b26f908631c59e7e3ab476a81fa22;2015-07-08 09:07:51 -0700;- Moved imports into __init__.py making it so you don't need to import each module independently.
9cc94f2ae0f16073959d44ce2dc4c33bc5043873;2015-07-08 09:08:23 -0700;Merge branch 'histogram' of github.com:lessthanoptimal/BoofCV into histogram
e2c66c6129fa11cf633a381a9a2331a67e09305e;2015-07-08 19:25:49 -0700;- updated ImageZoomPanel to give easier access to drawing inside
65b38cd45f925ce729a53f58a925a8d39c895848;2015-07-09 14:40:32 -0700;- fixed behavior of XugglerSimplified   * won't read frames by just calling hasNext() need to call next() or that other function
fa8b9d232bcda80fca55bb4dd9ea0fc87495baa3;2015-07-09 17:12:03 -0700;- include some intellij file in .gitignore - added visualization of additional primitive shapes to VisualizeShapes
7fd38710b5893e3ab375fa72491ace9dddaa7dbf;2015-07-09 19:14:25 -0700;- Python object tracking
bc118c8ac8fac81fc82bacb22dd24afc3ba2b87b;2015-07-10 18:00:57 -0700;- added synchronize to fix threading issues
10bcb3a856e28b09eb0f056b45b718ded6d4e1d5;2015-07-11 09:34:13 -0700;- tweaked object tracker quad example - MultiSpectral now includes setBand() for pyboof
fcc05074c3477a576a594476f49749f0d061bfaf;2015-07-11 09:55:40 -0700;Merge branch 'histogram' of github.com:lessthanoptimal/BoofCV into histogram
0fe01e3a227b36627320260905b88bd71de54ce8;2015-07-11 11:13:48 -0700;- unit tests for Histogram_F64 - minor tweaks
3459a12eb2d260903319e22ee895003a2555af80;2015-07-11 16:58:16 -0700;- first out color histogram features more
23a6b071d4757bf2d22905d5dae9023174dcabf8;2015-07-12 01:05:27 -0700;- BatchDownSizeImage   * -rename flag   * Can take in a single argument for size.  Will set maximum width or height to that value
b31c7794aab225342f340f37a63c85c533fc8311;2015-07-12 01:10:42 -0700;- Added copy to Histogram_F64 - Added example showing image retrieval using color histograms - MultiSpectral added partialSpectrum() - Added automaticPreferredSize() which selects a size that will accomodate all panels
e4bc61382e135b4ca053285a6036e0f6deeff3db;2015-07-12 01:41:47 -0700;- flushed out histogram feature example more
34d1bd6d61e72a9d966785a5e44924a93d3267fd;2015-07-12 09:07:01 -0700;- More tweaks to ExampleColorHistogramFeature - ImagePanel now has more options for how to rescales images
f40b31ac51592a01f3d172baf762b6b70e4eedc7;2015-07-12 09:39:47 -0700;- Updating data directory reference
e7c2e1f8c8a85839aa5a77fc215d3649612f151f;2015-07-12 19:10:07 -0700;- ListDisplayPanel   * made it so the width is correctly adjusted
e35f9d4656883df729ea6face3410172ce371735;2015-07-12 19:58:00 -0700;example showing how to compute the image derivatives
15763b746b729ea1e714f3ee1e85b764bd1b1862;2015-07-12 21:32:10 -0700;- Fixed bugs in ListDisplayPanel - Fixed type-os
473ebe50807dc50e5332cd2dfa8c0181aafd35ce;2015-07-13 09:46:30 -0700;- cleaned up derivative API
99ec0d8e8b6d46a1910467cb576ae4672563540b;2015-07-14 22:30:49 -0700;- fixed polygon fit with corner bug   * wasn't passing along information on lens distortion   * added unit tests to detect that problem - fixed code in processing due to recent refactoring
ad59d8115a65ea9b398c9355b197b57fd476fd0c;2015-07-14 22:38:00 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
952ad2300937ac60b35f36508f93e4167fffbd76;2015-07-15 07:15:55 -0700;- Implemented two unit tests - JavaDoc and API cleaning - moved some tasks out of immediate list
caaf4c7db1a17d51c6246a3f36b975ed4d4324fe;2015-07-15 17:24:20 -0700;- fixed Android ConvertBitmap for latest version - updated pyboof ip.py for latest version
d67439fdf82a9cf69f301b5a304e4ec39bb911ad;2015-07-15 17:36:52 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
e8a353621b753a516ef7e782d6188b1e9fbdb807;2015-07-16 10:46:57 -0700;- changing how I'm getting class using suggestion from Barthelemy Dagenais
28db5be4ec59f3eab111e7c6ae985841f4eee00c;2015-07-18 10:22:43 -0700;- improved stability of fiducials at a distance viewed head on - improved visualization
a52147ba7132d34902e67766bf45b97914658897;2015-07-18 10:33:01 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
941d71411930ab7fb023d6eee1be4d74c40538e6;2015-07-18 13:16:49 -0700;- Increased QuadPose fudge factor to improve performance in regression tests - minot tweaks
fd47489b352dc501e70ec7c74008882ccc33efbe;2015-07-20 06:49:33 -0700;- work in check in progress of square calibration using new polygon detection code
7d4706646b77a0d49a66ca7efd8329d4c8143efb;2015-07-21 11:58:54 -0700;- Change how ImageDistort worked.  It now uses the distortion inside of InterpolatePixel - Initial sketch of background subtraction
f328b6f79b906224b718f93e92e186fc5fbed1b1;2015-07-21 21:33:05 -0700;- working in progress check in
7131b710d58657716852d8c264e947642fd2f93b;2015-07-22 17:39:55 -0700;- added line size to VisualizeFiducial.drawCube - QuadPoseEstimator can return the reprojection error - Rendered cubes now don't have transparent lines
9a8b58759b8ebbc18ae781ea1d80ef6dcda8763f;2015-07-22 21:22:33 -0700;- background unit tests pass - comments and stuff
f7416887a5130133a36e2e80055bc4b8566ab606;2015-07-22 21:32:38 -0700;Merge branch 'master' into background
464a95801d5d71cd7d7bac4f41026f0554485b59;2015-07-22 23:03:35 -0700;-single band background moving gaussian
1c34fd905ed14327a915c760bcd9868e4ff6cc33;2015-07-23 09:30:52 -0700;- color gaussian - updated processing code for boofcv changes - example for background removal
0e041fc2c44554c2531a92e360f9651caa8f48e1;2015-07-24 07:00:55 -0700;- fixed issue with mosaic and stabilization   * recent changes to interpolation and borders introduce the issue - Added support for another swing raster that's used by WebcamCapture
596afcb435c771c4c3d4eec03eb54628a198a0e9;2015-07-24 08:51:52 -0700;- initial sketch of stationary background subtraction
dc95dc331d70e08e2695c9175b6519e49ab4a5d6;2015-07-24 11:58:55 -0700;- more static background - fixed GConvertImage for multi spectral   * copied when it should have not
74152445b26291bf82c7b09d7bc8b7e2400aec3a;2015-07-24 17:07:36 -0700;- flushed out static background subtraction more - added a minimum difference to reduce random point noise in Gaussian
7a5eab59f262a385fbf39a4feec9b87b4b0de3a9;2015-07-25 05:28:39 -0700;- Added support for ImageInterleaved to ConvertBufferedImage   * untested code, that's next
1dce0287fa5945297681899d97f016298d0f55f5;2015-07-25 10:27:07 -0700;- unit tests for Conversion between boofcv interleaved and BufferedImage
8953f09dc7321ecfa6d6ae7b5196d76c03c7b981;2015-07-25 11:21:35 -0700;- Convert for Interleaved images - Experimental implementation of BackgroundStationaryBasic using interleaved image
a8ed17b617f503ec310954b957dc6172fe1f31de;2015-07-26 06:55:34 -0700;- Added minimal support for Interleaved interpolation - Refactored code to make it less single band specific - Added and updated related unit tests
bb7fc694875c77244edfe32e7d00b701513fbefc;2015-07-26 10:07:04 -0700;- Got distort working for interleaved images - Added nearest neighbor interpolation for interleaved F32 - Generalized some code
efc5603b9eede085c1b5eefec18cc6bfc1f81ae1;2015-07-26 11:57:53 -0700;- added and fixed unit tests
ee5bf7e30ce8be5433e6deef053f4e61d8a46738;2015-07-26 14:05:09 -0700;- Fixed some ConvertRaster issues and all unit tests pass now
31a76eb054435e530f983aa3fbcf2ce6fe86c4bc;2015-07-26 17:32:33 -0700;- Added interlaced to single conversion
01cc16af3c6d223ca1f6ef8c9956bc2a5764bfb6;2015-07-26 18:29:15 -0700;- background moving for interleaved images
0bca0b00e112057cd7480fa557d75ab2ac8229e8;2015-07-26 22:57:49 -0700;- minor tweaks and comments
9811ac259049c4c19c2b6abee2e9e7282b4b9bf5;2015-07-27 09:11:49 -0700;- Added support for ImageInterleaved to several functions in ImageMiscOps - Fixed/implemented unit tests related to recentcode
8557296de3fdad6b21b3a6d8cc9faea8d00b0038;2015-08-01 11:10:43 -0700;- added specific unit tests for background algorithms for static case
3b9171922a643f977f880b55d7af1cc259bbbb87;2015-08-02 12:37:15 -0700;- fixed bug in BackgroundMovingIL which was causing it to produce different results than MS - Improved unit testing to catch that bug - Added unit tests from stationary case
c8919e75421e20e937d00acefc84e6d361382b49;2015-08-02 12:54:16 -0700;- the homography didn't actually cause the problem to be detected
492e877375141b74661974f6bd16391ce9a28674;2015-08-02 13:51:47 -0700;- made it so mean-shift trackers can work on SingleBand images - cleaned up names of some classes
1383de796a208c3d60343dd31c77059f6f827621;2015-08-02 20:54:10 -0700;- added fill for multi-band images which allows for each band to be filled with a unique value
6e04d3a27e340e529f6e9cff75582f1b27d30e9c;2015-08-02 21:59:20 -0700;- insert band - fill band
762dec2ab576a72a34a6f69118d24eb225fbf19b;2015-08-02 22:14:40 -0700;- put Comaniciu2003 into Factory Algs
b102a9d6f4ede41861ec9c48278b83d3d588f532;2015-08-02 22:21:33 -0700;Merge branch 'background' of github.com:lessthanoptimal/BoofCV into background
10fedcfe71ffa758c91ee17bc66a3f09b181f44e;2015-08-02 23:12:35 -0700;- Added more interleaved versions of background subtraction
faea8895a8ff36e53a12e958e97d338ff9a7c054;2015-08-03 18:24:18 -0700;-Added support for bilinear interpolation for more interleaved image types   * this required more border support - Related changes to the interleaved image types
62b7abccf786213d122d6ac0b4d6fdf5f03c0091;2015-08-03 20:58:03 -0700;- Deleted MultiSpectral background subtraction since it is 10% to 50% slower then ImageInterleaved equivalent algorithms.
8301cd46417bb1d5e604b5dc42f8511108ab59e4;2015-08-04 08:08:02 -0700;- brought back multispectral background subtraction since android doesn't fully support interleaved yet - added partial support for interleaved images to Android
258f34b9e47dc43389ba8d878fc38ca93b87cd0d;2015-08-05 07:07:21 -0700;- moved ConvertNV21 out of android since it can be used in other projects, such as webcams   * Was put into boofcv.core.encoding in main package due to the lack of a better place   * plus unit testing will be easier now
568516a2b449b9378102cdfff05004f255bac200;2015-08-05 09:37:31 -0700;- factory for background model - updated background examples
9fb048f739899516bbbb3b6ac83e6f6ffb7f0aeb;2015-08-05 11:06:34 -0700;Adding conversion tools for YV12 encoded byte images
4fb923e7579aa2465bb777a7f53aa9c149c7046a;2015-08-05 18:28:09 -0700;minor tweaks to image panel
68215b67c09234949e5bc2528c0860ee2887a8e1;2015-08-05 22:43:35 -0700;- wrote unit tests for two classes
fe3d7a7057e107c47f262499248f0a09e61124e7;2015-08-05 22:50:05 -0700;- adding (empty) unit tests for YV12
7c3e0724a10ea1ba4acf75675b27c3302c415176;2015-08-05 22:50:18 -0700;Merge branch 'master' into detector
7dd03fdd4a101d95e5e3c4a41ce4a69160f67298;2015-08-06 22:13:27 -0700;- high level sketch of graph stuff for new square calibration detector
3e6b85feabb355ed1d7c0082f5be74e92ce8ef96;2015-08-07 08:20:18 -0700;- added comments on background modeling
e043106c76d7a99555ffde7b7dc6e5ed8c2da6f9;2015-08-08 09:55:40 -0700;- unit tests for square graph - broke a large class up into two
746e35befd82e87b816df53080dab944875a597f;2015-08-09 21:11:35 -0700;- more unit tests
6270a5ade16fd2ff7d15e8251be137ceb6466339;2015-08-12 08:18:59 -0700;- unit tests for CONVERT NV21 and YV12   * fixed one bug that was repeated a few times   * still work in progress
9ddc4d55e36e13ca6b05c59dcd7f0ef274b68f19;2015-08-12 14:08:20 -0700;- fixed NV21 unit test
7926084308252da5d2687c5b18022626baad61b4;2015-08-12 21:08:31 -0700;- more unit tests for squares calibration detector thingy
9e9cdf20ac97f1bc6a84a6d00bbb0a9253723af1;2015-08-13 08:54:20 -0700;Merge branch 'master' into detector
6499c279552f0248b19f750016f7b4bd68795f43;2015-08-13 09:41:23 -0700;- work in progress commit -one more unit test and bug fix
50ec2f0e943ac52a1f0ee19c8f860223de5dab5d;2015-08-13 15:32:12 -0700;- square detector unit tests and bug fixes
aa12606eff5506cf6987490d5fb04768e41e3d2a;2015-08-14 14:00:06 -0700;- negative laplacian features was never turned on
45eac55cfd39381346da11e796ef7e53d9c64d08;2015-08-16 11:07:50 -0700;- initial sketch of square grid calibration detector
5a9aa498ecf647183ed49a12bc0ee5dad9703bad;2015-08-16 20:47:01 -0700;- more work in progress on square grid detector - minor tweaks in random parts of the code base
b2abc941e214e7b32e563682b74bc148a3b49e79;2015-08-16 23:01:48 -0700;- another work in progress commit
3cf182712f312e6d942f684a507a67f8704f49df;2015-08-17 09:10:48 -0700;- working copy of new square grid calibration detector
5c8b21c52e0d22ef34a75ef9c8e8f55f78c6a90a;2015-08-17 22:11:41 -0700;- finished draft on square detector calibration   * still got a couple of unit tests
ae60952f3c34a4ea960afa9e24c2c9e108b68b44;2015-08-18 16:49:16 -0700;- added more unit tests
6e9198a68a643feac7bfb0d87553d80358bb76e5;2015-08-18 21:14:11 -0700;moved InputToBinary output of polygon detector to make it easier to remove quad detector
361e84c2ce5bee2621cafc4cb083574279dfc06d;2015-08-20 23:34:10 -0700;- abstracted out square grid fiducial some - updating chessboard so that quad can be deleted   * still work in progress
75bfbd606f8a9a6ea69322853778eba2d8144de5;2015-08-21 09:09:20 -0700;- finished sketch for detect chess squares binary
fca1c35017df0565b447137e1af149d3da27f2e7;2015-08-21 20:23:23 -0700;- unit tests - work in progress check in
e1fce5cacde5f1584c7e560fb717789d697f2c2e;2015-08-22 17:49:19 -0700;- working prototype for new chessboard   * Run on one data set and failed to detect one image - removed quad crap
c113b77b6b8db927ba7887d4d2177531e67e5f19;2015-08-22 18:59:59 -0700;- improved visualization of chessboard detector app - unit tests - refactoring with chessboard stuff
df226d7754363d84676c4a0af0d606b07e080272;2015-08-22 20:23:04 -0700;- chessboard now just uses the square detector.  No more feature intensity   * appears to produce more accurate results   * faster tpp
92ccbdbe29d9636aa303100236c035131d8b3efe;2015-08-22 22:08:17 -0700;BinaryPolygonConvexDetector now can detect shapes with multiple sides all at once
90250b5f78c1957d9b2eef4922cf14b3996a9634;2015-08-22 22:26:08 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
da4a773b6a720be5463928ee37cd31fc9432fd03;2015-08-22 22:58:23 -0700;- Fixed QuadPoseEstimator unit tests   * Unit test was not updated when pixels were undistorted on input
4d9c1093cdfef398cf23b85684e507915d9bc449;2015-08-22 23:27:49 -0700;- tweaked chessboard detector so that it can detect smaller targets
9a2d55e0ecfb8a1923a279d891aa1105073f7950;2015-08-23 06:19:01 -0700;- changed Otsu and entropy from max exclusive to max inclusive to make it less confusing - shape detector example - put ExampleBinaryOps into a single window - fixed bug in RefinePolygonLineToImage where it didn't like it if the polygon had more than 4 sides
fd7bf62adc76c1448f2282652d272fccfe41d6b0;2015-08-23 16:21:48 -0700;- seveveral minor tweaks
a040c1bccf24394641ea60c1a968707dd34520f5;2015-08-24 08:17:02 -0700;- provided access to inner data structures in planar grid stuff
46c8bffb55e5875e962739dc4c835e27a8e0f42e;2015-08-24 08:17:34 -0700;- work in progress on adding thinning binary operator
6eab6387bfa1eba5679d6c959cd8fa20c2664ab9;2015-08-24 18:46:08 -0700;- initial sketch of thinning algorithm
c096e8fcf2c255386dbf6b1cff496285ef49f97f;2015-08-24 21:33:34 -0700;- Finished the thin operator
68fc9208853e8c41b7dfa6be9dcfc2030f54af79;2015-08-24 21:33:50 -0700;Merge branch 'thinning'
4dbf30503f2d5d9d0cc3f703747605bbfabdc2aa;2015-08-24 21:44:34 -0700;- thinning example uses an image which is already there.  Changed thresholding to adaptive
935a1f0c4e3927bc22a6a02e78fc51ddc6058411;2015-08-24 21:46:48 -0700;- clarified the type of thinning it does
47e96aa150649e523799c0c27a0512bd4dd42e81;2015-08-25 07:11:21 -0700;- Cleaned up a few examples   * Added  dependency to xuggler so that much smaller videos can be used - Added nextWidth and nextHeight to generic image sequence
120bbd478f063be2438802298d35c0bf8713e2e0;2015-08-25 07:14:48 -0700;- updated data directory
46c77cf2520479b171b23e035467222c7cc777ea;2015-08-28 07:41:32 -0700;worked on learn scene factory for dense feature added radius to scale to describe
f11d5b990f326e1be6a867aa0c20c55d788c38f4;2015-08-31 08:23:57 -0700;- fix for build
f886929823ce4c14e89d806f724779503e5920fe;2015-09-06 09:45:20 -0700;- changed describe feature to return canonical width - found a bug in ExampleLearnSceneKnn and not now gets 49% accuracy   * Shocked it worked so well before
759690c27fb168d95d2636e0be3a52a76f1a2f40;2015-09-06 17:12:54 -0700;- tweaks to Learn Scene KNN example
885ff3f7fdf2edf88f4d2da32a73a26ed455284e;2015-09-06 19:19:04 -0700;Final tweaks to scene KNN scene classification
35ec503fdb733405246e1052d9f9705045deb2b2;2015-09-08 17:38:18 -0700;- added gradle oneJarBin to create a single jar with all of boofcv
98c79e20f4fed103350abefba090188b4c0050a5;2015-09-11 20:08:53 -0700;- fixed gradle
9da114e3daa6c1a2d6c40dfd2f26f5ebb8ba03be;2015-09-11 20:38:08 -0700;- updated Ant build.xml
f19dc46543eff87485b2b3d23b45685daac41fb9;2015-09-12 13:23:17 -0700;- Android VideoRenderProcessing can now handle interleaved images
b50b13c4a9abb7afde3de8aafc83519ab8c2320d;2015-09-12 15:31:23 -0700;- improved support for interleaved images   * Nearest-neighbor interpolation   * Image Distort   * Android - Updated JavaDoc in DistortImageOps by telling where you should go for deprecated functions
3896aa2a0435b77478f0185fa22c8e9739fd2e86;2015-09-13 11:17:53 -0700;- fixed bug where a pathological shape could not be CW even after the order is flipped
5a06dc848dfa041175822cf06e7de37c4a9f9b72;2015-09-13 17:01:21 -0700;- added ability to remove false positives from polygon detector using edge intensity
e9f2fc5d676ce1aeae8a39993be0bc8fc4e67cd2;2015-09-13 19:46:07 -0700;- tuned performance of ficudials   * significantly reduced false negatives and only slightly degraded other metrics
b25a07a6ba47db8c1ca4c50b1cba2a3f4fc26217;2015-09-13 20:34:44 -0700;- tweaked polygon to handle the poor initial estimate in chessboard - tweaked chessboard detector to optimize more since there is no second pass.
b06d7c965f305b74e3dc4154d763d5eed1663e2e;2015-09-13 21:53:26 -0700;- went through examples and fixed a few problems
05e46bc7e021810d1c71ba081310189336027086;2015-09-14 07:57:57 -0700;- fixed a few unit tests - changed behavior of BinaryPolygonConvexDetector   * can prune by edge before OR after
4b85f57d035be86c570054cd7a8465f8a1c19805;2015-09-14 22:43:46 -0700;- fixed ExampleVideoMosaic   * slight change to decoding with Xuggler was messing it up   * just added more RANSAC iterations
d1c1a05a81573bd241ed1fa737bdabf2c50669ac;2015-09-15 09:08:36 -0700;- cleaned up evaluation
681e1314f112f37cbad3705e05f555411bf7758e;2015-09-15 21:55:53 -0700;Candidate 0.19
afd7f37b4c109253779b639289d1f0023d6e5b85;2015-09-18 16:31:21 -0700;- updated for georegression 0.8 release - updated py4j to 0.9 - other minor tweaks
827051c8fcaa09df8a323b3e6e8fd5c61bf0fc06;2015-09-19 17:53:50 -0700;- Created visualization tool for confusion matrices - Renamed ExampleColorHistogramFeature
96073580a28844897e71c841b9ac8764a67603bb;2015-09-19 22:40:13 -0700;- tweaks to examples - removed old android example which was pre-android studio
7851a74d76e1f8c702edd66f94ddff051ade6e6c;2015-09-19 22:46:56 -0700;- adding new android studio example project
eeaa83494cfa9d770e239589c27c5fa15bda1eef;2015-09-19 22:54:03 -0700;- adding missing android example files
91108497f70a358d805d12f99a1dbf7b3d1b1769;2015-09-20 00:35:13 -0700;- updated and fixed gradle build for processing
c909cb6cdd32b8d3ca94a3b78301a35915d31b6f;2015-09-20 14:16:39 -0700;- Added an application which can run any type of fiducial through webcam capture with command-line interface - Fixed crash bug in chessboard detector - Fixed lack of width in square grid fiducial detector - Broke a bunch of unit tests - Deleted benchmarks in evaluation   * That functionality has been moved to ValidationBoof - Improved rendering in DetectCalibrationChessApp - removed unused Gradle tasks
70c4d64aec5420e607304869d71776ded17d0532;2015-09-20 17:08:29 -0700;- Fixed fiducial detector stuff
879cc10d55d674abc93f7392ca28703dd28db4a4;2015-09-20 19:15:55 -0700;- more rigerous unit tests for SquareGridTools - changed check checkFlip to use cross product
d2527580d02bfa88f8a444ec49b3bf60679f1272;2015-09-20 21:40:12 -0700;- minor tweaks
b8d294e59cbd5fde88289f401804915b305e0431;2015-09-20 22:10:50 -0700;- final candidate v0.19? - removed evaluation jar, again
d4cca43da76420432a825a09089c6e41eaf882ad;2015-09-20 23:03:42 -0700;- removed accidental use of proprietary APIs   * fixed some unit tests when run in gradle - more tweaks and notes
f3de6fe517a8e63f15ec138e7de0a5f64b4b5f4d;2015-09-20 23:15:39 -0700;... and the year is out of date in the ant scripts ...
60cf57ce694210fa2eac2816eb2550168bd5abb1;2015-09-21 13:27:29 -0700;- Reverting an accidental change to ExampleCalibrateMonocularPlanar
191b89002f6b6678afe286ed06eab166cc9bc7bd;2015-09-22 06:31:40 -0700;- improved stability of calibration target as fiducial   * now uses PnP based non-linear refinement
969697dee68d092203f57631fb7bb1277fbdd0f0;2015-09-22 06:47:54 -0700;- changed version to 0.20-SNAPSHOT - Fixed an error in WebcamTrackFiducial instructions
62a5464475a895776094396432373cb3387c9dc7;2015-09-22 17:51:44 -0700;- created start of calibration application
0ab1e60111777eab6356df3b8f238f70c852c23e;2015-09-24 22:11:01 -0700;- work in progress for calibration app
d4de83a2300bdd5feec91fab2d1eafa0f2dbe469;2015-09-25 08:21:59 -0700;- improved some comments - work in progress commit for assisted calibration
791f2e6ed3fee4e64160f6f55c7f3ac85756d6f1;2015-09-25 21:03:04 -0700;work in progress check in
30fb135e39c6ea44e5583136b32a7e7f68476ae4;2015-09-27 15:13:28 -0700;- added paper citation to background modeling and improved comments
0cf91399838d60b2a12b8f45c367050bb1db1dfb;2015-09-27 15:29:01 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
1ac09e28528fbca9812f9923073cdf3820fb7532;2015-09-27 16:37:02 -0700;- Examples can now open webcams - new simple interface for webcams
690c50715cee0b1b033cb0af0caf839f43a47f5a;2015-09-27 20:28:13 -0700;- tweaks to examples
7d0f210534d7531fdfe1a15aa381626dc6ee0630;2015-09-27 22:11:34 -0700;- removed requirement that CW/CCW or black/white must be known for several classes in polygon detection chain   * code simplication
28d8b18523c3e92a46ba349e417853528b6fd4c0;2015-10-01 18:11:19 -0700;- Work in progress commit on assisted calibration
464282f45f2677908f0cde38875de7d89be9ba8a;2015-10-01 22:50:24 -0700;- black polygon detector works much better now on non-square shapes   * contour to polygon algorith was changed/fixed - Updated a bunch of code to reflect change in parameters
17d03214505d42c5fd8803970710d43c06fbb434;2015-10-02 15:24:03 -0700;- improved chessboard detection app visualization - fixed "bugs"   * changed chessboard rejection rules.  Loosened one tolerance and made another one shape specific   * Tweaked square detector settings to handle small squares better - Removed stuff in VisualizeShapes which shouldn't have been there
532dc74882c77c49cda3e518c27cd8df4bd3fd61;2015-10-02 17:20:55 -0700;- update config for fiducials   * calibration and square   * produces very similar results to what it did before.  better in most but slightly worse in static
c8d41cc54a7ae90faa0a4e413503375a29ac1f59;2015-10-02 22:03:06 -0700;- renamed boofcv/evaluation to boofcv/demonstrations - merged data/evaluation into data/applet and renamed data/applet data/examples - Update code in examples to reference data locations   * everyhting in demonstrations needs to be updated - Created UtilIO.pathExample() that provides a relative path from data/examples from anywhere in boofcv - Added more functions to UtilImageIO which accept a directory as input
b6101afe513d894f3710b4bc8410e2914804ea3b;2015-10-02 22:09:53 -0700;- boofcv/demonstrations   * put src in the correct location - updated change log
1b0e068af9176f7ade4b8292f67481d5267ef811;2015-10-03 16:32:39 -0700;- Updated black polygon detector with line optimization so that it won't diverge on very small objects   * computes the score after each iteration and if it gets worse it stops
019ff1f7a0d265166a9ba336115467956f9526a3;2015-10-04 21:09:09 -0700;updated demonstrations for new data directory
7c5215f28f5f22073974034d314873a410dbe45a;2015-10-04 21:18:22 -0700;- updating data reference
c3539a7c53ee6688443c88afd392f2722b2d5446;2015-10-05 17:08:00 -0700;merge
d2b2d9cfd8e1cb84af91a42f8e2abc13440a6ef9;2015-10-05 18:57:04 -0700;- start of black polygon detector demo application - minor refactoring
f81a551ddc4ce868cce9a9f9b46916c1725cc3b1;2015-10-06 05:34:57 -0700;- flushed out black polygon detector app more - refine black polygon lines   * experimenting with minimum line length for refine   * removed edge score code since it broke large object too much
85c6c5649923344e8c8881dfc00ad790f09d12fe;2015-10-06 10:46:03 -0700;- integrated use of ConfigThreshold is some parts of the code
8561056ad3d75371fd111f3b6759fcde89066865;2015-10-06 14:04:04 -0700;- Square Fiducial Generator App   * no longer defaults to a page border of 1cm   * page border is actually user configurable   * border and white border are correctly handled
f4f3372adc62cb69658d970b977c39aede98f145;2015-10-06 18:14:59 -0700;- Moved PyBoof out into its own repository
4d4c5ad783064eb8260a420740d31df94bb6e687;2015-10-06 20:06:10 -0700;- Changed ConfigSquareGrid to use new ConfigThreshold
e728017336e1d6a817db07c797c60a26b9409bdf;2015-10-06 20:33:24 -0700;- min/max number of sides - colorized polygons
d1f5e220d65d2e2cef37567cb020b2c148865c93;2015-10-08 16:48:34 -0700;- another permutation on stopping line fit from diverging - javadoc improvements
0210eb2f46fb00716dcbb84aa6455eb1e4764a95;2015-10-08 20:35:58 -0700;- modified RefinePolygonLineToImage so that it will only accept a line fit if it moves the two corners it touches less than a user specified threshold   * appears to improve pose estimation accuracy according to regression   * small polygons also diverge less, but not as much as other approaches.  Appears to be a reasonable compromise since typically approaches which improve large polygons make small ones worse and the reverse.
fd69004220a42fa4e020c936beb0dba277cb46eb;2015-10-08 20:52:54 -0700;Merge branch 'optimize'
0ae83c7c1a563500b473bda7633b3c5cc9955daa;2015-10-08 21:47:31 -0700;- fixed/wrote unit tests - PolygonEdgeScore and ScoreLineSegmentEdge now actually return the true average   * PolygonEdgeScore does not divide by the radius. That's because a large radius would return a smaller edge score even for a perfectly in focus image
d4938b5dd7f0ffdc993ec32c51f60dd2c1938b16;2015-10-08 22:14:38 -0700;- updating data directory reference
ae20131326e41a644bbfd49ebab336b31dcf84c5;2015-10-09 18:54:05 -0700;- black polygon app   - can open images now   - added another option
74ee9c0f50bb4c7850f9dc27994901ae3073971f;2015-10-09 22:10:06 -0700;- fixed polygon split merge so that it doesn't abort too early - tweaked allowed range in DetectPolygonControlPanel
9bb0d53118f99dddc3b6eba3ce96de2ac45d1850;2015-10-11 12:01:00 -0700;- added max corner change to RefineCornerLinesToImage to prevent divergence
0a6b92c2aa07a701eafc66922bc6630f9c181726;2015-10-11 18:18:14 -0700;- added ability to detect convex polygons - UtilIO.pathExample() will honor absolute paths unmolested
dc1bdb4240b354523a6786d98fa3e01740cc1576;2015-10-11 22:05:28 -0700;- fixed or wrote all unit tests
fd5f8f077d4fb016cf84bf46912b74603a4486db;2015-10-12 17:37:33 -0700;- if you specify an image which does not exist, CreateFiducialSquareImage no longer creates an EPS document
4e0168d28855e906ecc4073f5548f16e71e546bb;2015-10-12 22:29:40 -0700;- Can now add an invisible an invisible border around the document   * Done to prevent a professional printer from cropping the white border away
5ec69bedf6232252ed200220aa0296abf9acac5a;2015-10-14 18:30:06 -0700;- added right status panel to assisted calibration   * Shows geometric information computed from SVD
2265a51794fafeca88191f32339c8065d487c574;2015-10-14 18:33:25 -0700;- made BoofCV codecs default for mjpeg and mpng
9d2dcc3efd0be644daeaddb291bef31b8e674d57;2015-10-15 04:46:13 -0700;- Added PolygonHelper to provide the ability to manipulate BinaryPolygonDetector's low level behavior - Chessboard detector now expands out the initial square so that its closer to its initial edge - Made max corner distance in chessboard configurable
e5e29c686f037426e30332b2ea45c6daa9f3f461;2015-10-15 17:31:50 -0700;- updated example code to use FDistort
e6bcf74c7632aaa32f7a6a20c027067fff002aae;2015-10-15 18:31:01 -0700;- more improvements to assisted calibration - wrote class for removing perspective distortion
5f020eb5f52c69decbac199007ad4aca2c2edd95;2015-10-16 17:05:40 -0700;- focus/template match score working
c6a08fd8e3caa61220167585296d04e0f0552b24;2015-10-16 20:02:22 -0700;- Square grid works with assisted calibration - fixed calibration example
daef4b1a100ddb1d8aed5cf71f4f9f179a0f880f;2015-10-17 09:05:24 -0700;- Added square grid to fiducial demonstration app
83298a91ffc0a561b72cb8efaf4e59db18aa911d;2015-10-17 11:05:56 -0700;- fixed bug in PointTrackerKltPyramid constructor   * reduced number of constructors from 2 to 1 - Fixed bug in FDistort that was recently added
bb133cc40519a02908a4b26fcc465ecc90b9c440;2015-10-17 11:16:04 -0700;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
52e517020c315e93070bbcedfca849ec8ea8de99;2015-10-17 11:16:44 -0700;- updated reference to data directory
8691db1018046f84bf2aefe1a330820ac977e463;2015-10-17 19:01:20 -0700;- moved demonstrations into boofcv.demonstrations package
ddd948216dcb1b7f89e2cc57cecae2f6d43271dd;2015-10-17 19:01:45 -0700;- fixed bug where NaN could be introduced when adjusting chessboard squares
4e9a81ee80d7a146927e58ba34fb6647efe307bc;2015-10-17 21:36:12 -0700;- broke refine polygon off from binary polygon to make it more flexible
997e27e01fbb3bcfd911cd75e18048ab94c13455;2015-10-18 20:56:08 -0700;- working on changing how polygons are handled to improve calibration from small to large images - currently fixed a few cases and borks several others - improved visualization too
0bd4b4e20f2c74ae118a2780243f7cabcb481400;2015-10-19 08:50:24 -0700;- moved function involving circular list indexes into CircularIndex so that they can be found easier - Initial sketch of a function which prunes corners from polygons by minimizing energy
f31581eb17143459ad85a1e58aaab9e497ff2e81;2015-10-19 09:04:25 -0700;- Created base class for demonstration apps
02190db3fd1756cc089a5878263508e84e493035;2015-10-19 14:40:44 -0700;- BinaryPolygonDetector now specifies min/max sides with two variables - Uses new polygon corner pruner   * appears to fix most of the issues - Initial polygon fit will abort if too many splits are created
745a2c8ea3417cf32f048331f2e21a0a39e19c86;2015-10-19 21:39:54 -0700;- more work on pruning corners for shape fitting   * performs some basic optimization afterwords - added threading to two related demonstration applications so that they don't crash when I try to enter a debugger
f295b1f16c09e717863aedcbe7b619787c63906c;2015-10-19 22:46:20 -0700;- gui enhancements - converted chessboard detector demonstration over to the new format
b7c8d46a419ae649bec370a5ecaa09f913c38e1e;2015-10-20 11:58:02 -0700;- work in progress commit for line fitting along a contour
896ecc5e926522f56493af170d9a919c72f9b6f1;2015-10-20 22:22:57 -0700;- fixed many issues with FitLinesToContour   * overall it produces stable results with a only a very small number of cases where it doesn't work well - two known problems   1) MinimizeEnergyPrune appears to follow a bad path and removes too many corners.  Try a non-greedy algorithm   2) A noise generated square is connected to a legit graph causing it to be rejected
be41fc4d9a1d28b4faad36ae418e6e6f5f2c3608;2015-10-21 00:01:30 -0700;- added a minimum split size to SplitMergeLineFitLoop - removed some debugging messages
a7dbb6c9bb9bad797ff8a36606db065383fc3418;2015-10-21 00:15:13 -0700;- improved code comments in DetectFiducialSquareBinary
3f8425f39d8ea6df34b22adef958acf5428bf4cf;2015-10-21 00:20:11 -0700;- fixed a comment
e32b7de93f12d7b054dc9feeec97f12fcce8ae8c;2015-10-21 00:21:52 -0700;- work in progress commit for line fitting along a contour
283ca9f9a998c1fb1395a7f1572bbdb12b2fc30c;2015-10-21 07:54:39 -0700;- polygon line has a new parameter, minimum line length fraction
fa7572b2ea252182b48d5b9c6637eef14068a6be;2015-10-21 08:47:19 -0700;- tuning
1f244f72bf95c6c6818c6785a172db3d75a22da4;2015-10-21 12:32:33 -0700;- Retuned everything and it appears to work as good or better than before.  Will double check later - Added mouse wheel zoom to calibration fiducial detector app
390efafb756e48f47ac4c88ec043e97d3c2b9b07;2015-10-21 18:25:26 -0700;- added code which estimate the stability of a fiducial's pose estimate   * added it to the high level interface
415a52d6c6a834ad6f2882a479b63cad08d1b4b0;2015-10-21 19:48:01 -0700;- CalibrationFiducialDetector now computes the max using all fiducials - Calibration fiducials now correctly report stability
cbd35c51149173c0fce262862adf6afe3a0e8fe3;2015-10-22 10:18:26 -0700;- added generic unit test for fiducial stability
f3b0d49cb7d456179edc9e21be85a5df3507a994;2015-10-22 11:09:33 -0700;- fixed a couple more unit tests
64d9e25b840c0a3f881293808bb2db0fd45c84c5;2015-10-22 16:39:16 -0700;- added support for partially observable calibration targets
a0456230a34d16fc6e485b42a7c193e1523b01c3;2015-10-22 20:38:48 -0700;- updated boofcv/data - unit test
9cb597778855448fe6bcd57b9bc764fbc7cf9ddf;2015-10-23 00:22:20 -0700;- added code back in that some how got reverted out
e7dec79e00e40935282514aa5b854b960f11a18f;2015-10-23 08:43:59 -0700;- wrote unit tests which test to see if calibration can handle partial observations
7aebe4b110d48ebf70f0e0ecdcfa0443d21c6969;2015-10-23 12:05:09 -0700;- fixed zhang99 unit test   * Geometry was pathological and points were outside of the image
b6ed124b9c9a7b32b32f883f76ff08ff459524e5;2015-10-23 19:41:25 -0300;First shot at creating and detecting binary fiducials that are more or less than 4x4.
3b24acb2a33b13079c7493b89266ce9fdb0a5712;2015-10-23 19:58:20 -0300;Fix two bugs with printing.
634ea463042b14bc544c487444d3139261e66901;2015-10-23 20:04:32 -0300;Fix bug in array initialization.
2c62c8ec31456989edbb786752bbb5d4907d52d2;2015-10-23 17:36:31 -0700;- RemovePerspectiveDistortion unit test
29cea51804b33e44573f8124cd0db62fd4a28b4b;2015-10-23 18:34:51 -0700;Merge branch 'fiducials' of github.com:lessthanoptimal/BoofCV into fiducials
22f48044ab24af4a9d5f8f1bcd94a9ecacc72a96;2015-10-23 21:40:48 -0700;- updated comments - turned off annoying print in unit test
8e960152bcb1f5f8464ddeab2a83d2514a2eec69;2015-10-23 22:47:23 -0700;- optimized polygon a bit and appears to be as fast as it was before
5b6f804f8d7479054c72b4d8b728419696bc563a;2015-10-24 11:56:08 -0300;Fix bug in generation of 5x5 grid.
a500dc758a4b04594aed60cbc9a2bb7cd1e63e84;2015-10-24 08:54:12 -0700;- added a new function that strips the alpha channel from a BufferedImage to prevent an example from crashing
b8c5a99aab4745b34d72e73764fae580771d4371;2015-10-24 09:12:45 -0700;Merge branch 'fiducials' of github.com:lessthanoptimal/BoofCV into fiducials
3d0322418f037c775ef3948e47234b73693356f8;2015-10-24 13:37:30 -0300;Webcam Application supports specifying different grid sizes, and also supports detecting all 3 grid sizes at the same time.
40af32a1c6b2d0c232ad88fb8694750d0aae812c;2015-10-24 13:44:29 -0300;Make 1.6 compile friendly.
8b9affe88273a2e8d5fdb630ae0c0dca6c0cf5f2;2015-10-24 11:32:20 -0700;merged
312943eaf4fd896f0bcec1e69819cce81c2bd3b2;2015-10-24 12:04:22 -0700;updated black polygon example to include concave updating data directory
bf421d4d05bb4a119f3067ebd054a1ba472cf04b;2015-10-24 12:40:37 -0700;- resolved merge conflicts - converted indentation from spaces to tabs in some files
7262fec14a6f412e552e74f662e69b1002d022b9;2015-10-24 12:41:16 -0700;- resolved merge conflicts - converted indentation from spaces to tabs in some files
06eeb399c01d68213e88bf8b3574a150e2fcae25;2015-10-24 19:34:31 -0700;- Changed BinaryFiducialGridSize to an integer   * Way simpler and less verbose   * Down side is that its easier for the user to do something silly   * Still a few places which use it - Added the ability to adjust the border size for square binary fiducials
49313b30c88246407fb9b73d4b251410f1675be0;2015-10-25 09:40:14 -0700;- Updated EPS generating doc
85e3adac0293b49be7cb9560453f7879fef76ec6;2015-10-25 09:56:27 -0700;- renamed FiducialDetector to FiducialPoseDetector   * There are situations where you don't need the fiducial's pose and its calculation can be a disadvantage because it can fail   * Will create a new class for just detecting a fiducial and the number it encodes
559024fef5207c519d36f2f353f04974e862f682;2015-10-25 10:10:17 -0700;- removed debugging print message
328b23de0f9321aa0630cf8758fd5eb73f6e912f;2015-10-25 14:08:24 -0700;- added support for multiple pages PS documents
d186ea5506109adf7e61fb6c3c0b4d9b6e4bf10a;2015-10-25 17:52:12 -0700;- removed document type name from create fiducial apps - removed "pose" from fiducial interface name   * back to original name - flushed out fiducial interface more   * has flags to indicate if some functionality is supported
2d75b9fdf97a7b5bad8a3bffb259839065724404;2015-10-25 18:13:42 -0700;made the border of image fiducials adjustable
dba5f11cc4694a09cd5683984fd7b6d0b1ceb284;2015-10-25 22:35:37 -0700;- finished unit tests for new fiducial features   * fixed bug in square image fiducial
96739fdb9b6b83af6cb77259e2b07512eff7fd10;2015-10-26 08:17:13 -0700;Merge branch 'binary_fiducials'
cf250b3bd25cf47f96db7a33ef1ffe9e7d15a013;2015-10-26 16:49:02 -0300;Fix creating multiple page fiducal output.
4e1205341a3c66aa56689575b6bf1a6f68fd7a37;2015-10-26 16:51:07 -0300;Remove unneeded method.
292b2bcea6d7e3544acc19c53617e7827c74e52f;2015-10-26 14:24:06 -0700;Merge pull request #33 from Capta360/master
7ef15fc656cebe6c13a3cb364f65ca789ae73af4;2015-10-26 14:46:13 -0700;- PS information is printed out once only at the start of the document   * previously I thought that some of that info had to be duplicated for each page. - That fixes a bug the pull request introduced
024096b9cbf6a0fd636921f508aba106bd8eb245;2015-10-26 18:14:28 -0700;- fixed some unit tests and maybe fixed some a subtle bug in SplitMergeLineFitLoop
63e58682bd630f1151a3402df58c042a6107ba42;2015-10-26 21:10:26 -0700;Fixed issue in SplitMergeLineFitLoop where tolerances were applied in an asymetric fashion   - seemed to improve stability in regression tests
8692802ff83b42362792f4a90d3409360a7071d1;2015-10-28 15:09:46 -0700;- unit test for MinimizeEnergyPrune - Added maximum sample size inside of MinmiizeEnergyPrune
c91306c8ff85566171fb8873adc8d9c8521820dd;2015-10-28 17:48:50 -0700;- moving fiducial code around a bit
0db25db53ba1681f72230b116e06fa103bc2cd88;2015-10-29 07:50:00 -0700;- unit tests and bug fixes
6344f84729b63c9eda79c1f9f725face73427aca;2015-10-29 17:52:28 -0700;- sketch of new square fiducial based calibration fiducial - moved calibration fiducials into recognition directory   * plus related refactoring
9cf53f1f42bc1db889c77e305916683b2cfc562f;2015-10-30 12:58:52 -0700;- updating tuning of square fiducials   * minor improvement in regression tests   * was causing flickering in demo application - Tweaked stability visualization in fiducial demonstration
5ad101db9904b108032baac9e306a7bf85f94933;2015-10-30 19:09:06 -0700;- refactored CalibrationObservation to make it easier to sort - flushed out and unit tested DetectFiducialSquareGrid
a3751fbeece893f9b5c27a0de0b92bc35c59b69f;2015-10-30 19:15:26 -0700;- Removed the word Planar from CalibrationDetector since all of them are planar and it was making things excessively verbose
bd0bd92f41b0d4c5115a99f48ef6480858718b7b;2015-10-30 20:12:10 -0700;- added square grid binary to fiducial visualization   * looks good most of the time, but there's some weird quirks - Fixed issue in CalibrationFiducialDetector for fiducials that can observe partial points
e891fb5cc07671e2ab3d715926de59a2fd9e2230;2015-10-30 20:15:59 -0700;Updating data directory
eed2a53400c95aac4477297cb167cfe2b7e4352d;2015-10-30 21:31:23 -0700;- tuned EPNP parameter so that it doesn't diverge in square binary grid fiducial example
78321909a197f87e16e5362e11d8b067485d7109;2015-10-31 10:17:03 -0700;- Fixed BinaryThinning so that it doesn't break lines up as much and is closer to a "standard" implementaiton - Added more thinning example images
5977e82326c6babd5f282be8b3d5c4a8b294f991;2015-11-01 19:28:37 -0800;- updated unit tests   * They all pass now!
3142f9c8b689dcc677c57844601f8191698db185;2015-11-01 21:57:25 -0800;- added the ability to turn on add off the pruning of polygons that touch the image border
e355656ee1d7ba61abc361ccaa93c1877be2f1ef;2015-11-02 10:40:46 -0800;- manual merge - small improvements to assisted calibration
dd1093bc51caf26a6b0fbfd0ddd051e6f9a9703e;2015-11-03 06:19:47 -0800;- Locally adaptive threshold techniques that had a bias term now have a scale term.   * Much more useful since bias was intensity and value range dependent
af0bc37ddbbe2bd1e5688bb89f3c5a3b619ce230;2015-11-03 09:25:12 -0800;- determined the runtime speed calibration fiducial regression problem.   * When the threshold bias was removed in Oct 18  #997e27 it got a lot slower   * Added something similar back using the threshold scale factor   * Doesn't speed things up as much but only a very slight degradation in stability
e1d893e32cedb0549da85685a27e8a7464764503;2015-11-03 11:40:02 -0800;- SquaresIntoClusters   * now sees if the shape of squares are similar by comparing the ratio of largest and smalleset sides before connecting two squares   * max distance is now configurable - Updated calibration detection demonstrations to refer to images in data - Slightly improved stability of calibration targets
44028d9c9da64c882bdab9b1e0e3d7e39c5347b1;2015-11-04 20:05:51 -0800;- reduce number of sample points for polygon line refine - general tweaks to demonstration apps
ab160a29d7d341da13cdfbfac9848839699222cd;2015-11-04 22:03:34 -0800;- fixed concave polygon   * sub-sampling during corner merge was skipping over valuable bits
9a95a1deaaae53b0c391aa0daf8b8b37b700213e;2015-11-04 22:20:55 -0800;- fixed unit tests and increased number of sample points for polygon fitting for stability (which fixed a few unit tests)
1612baf37dc094b40068cb7c31845e814704b59d;2015-11-05 17:25:59 -0800;- DemonstrationBase   * processes image inside a thread   * can handle webcams now - Updated children of DemonstrationBase
c4d910d2ebe913c843b29e9e8f5c944afc8f3e40;2015-11-05 21:30:49 -0800;- fixed multi-band binary image code
4fef9c46b1bbb7672bd7ff887d715052fab32f22;2015-11-05 22:26:40 -0800;- ThresholdImageOps scale is applied different for up and down so that the same value has the same meaning   * default value for scale set to 0.95 - default values for threshold in FactoryFiducial
3b13d43284d11d4be9e2d7acb7508d066b26d2e0;2015-11-06 08:09:34 -0800;- DemonstrationBase   * Please wait dialog when opening webcam and closing it   * several minor tweaks   * Fixed issues with inheriting classes - VisualizeBinaryData   * faster rendering supported for int rasters
068b45c83c44431cfd3bc60d064a99723501a9d1;2015-11-06 08:12:34 -0800;forgot to remove a print statement
1a560de22e944926c196a854470938354ec405af;2015-11-06 10:37:15 -0800;- DemonstrationBase   * can now open a video file   * change API slightly
003df9133c3c61f1f7cde697c2dcf3aa7ccf3a3a;2015-11-06 11:10:09 -0800;- added looping support to xuggler
e19d1ca2ede1c098bdc8bae61c6f378922e4e415;2015-11-06 18:33:16 -0800;- Fixed showAll option in CalibratedImageGridPanel - AssistedCalibration will now save images and compute the  output
0f9e70a9a72f0b666755cc6fa449b4d4b40f5e91;2015-11-07 21:20:21 -0800;fixing several demonstrations
a41c5a658bd2eaa3932746236cf082f845c30f69;2015-11-07 21:31:04 -0800;- updated readme.md
bf84f16cf4c4d570765b572602f3af5742a78895;2015-11-08 12:10:02 -0800;- improvements to assisted calibration   * added arrows back   * motion detection uses an initial location too   * score is always updated when detected   * results directory is deleted on start - SquaresIntoClusters   * New does a better job at filtering out near by square like objects - updated gradle version to 0.20
6307e8106bc1b24b5ce6e8be760926ad77f1ac2c;2015-11-08 15:36:36 -0800;- AssistedCalibration   * reset motion after scale selected - Fixed javadoc for binary threshold filters and factory
6383cbe18a0c30d9f0d09f23fd92dfb7ed4680ad;2015-11-08 20:52:11 -0800;- commented assisted calibration - fixed unit test
08b787530363a05adb42c7e96267669063ece87b;2015-11-08 23:00:01 -0800;- added access to detector inside of CalibrationFiducialDetector
fa4875089a595a1917e3ad44d6973e7dfef909a3;2015-11-09 09:10:08 -0800;- refactoring and comment changes for consistency - sorry thhart if this slightly mangles your patch
65a31c696fd77aa988fe9c5060783c4c61483502;2015-11-09 09:12:14 -0800;- fixed spelling error
017ba2a7a122c16aacc8de7ac48d6c971a4a4915;2015-11-09 18:53:10 -0800;- fixed bugs and updated WebcamTrackFiducial application
0090bcf705228d0ed38b364f0573d962401cb3c4;2015-11-09 19:55:41 -0800;- draws the fiducial number in ExampleFiducialBinary
37582f0d5320dceebffa5da1a18165eaa05e8232;2015-11-09 21:24:38 -0800;- fixed bug in assisted calibration where the blue border was saved to disk - put intrinsic.xml in correct location
a2a07eb259ca4634e52fcfbae32db4ab9f303595;2015-11-09 22:17:30 -0800;- removed references from readme to integration packages which no longer exist
d45a2d24c8e42aded5939c23294b51ff25acd3e9;2015-11-09 22:37:16 -0800;- fixed error in readme
9bcb027c947f195fa6f99a8f56c54394b65fed5d;2015-11-12 11:01:40 -0800;- updated version to 0.21-SNAPSHOT - put high priority items as TODO in change.txt
c965ed46770c625deee7638083e648f0c89fd31c;2015-11-14 21:17:04 -0800;- checking in a few items before the big sift update - cleaned up some functions in KernelMath - 1D kernels to FactoryConvolveSparse - Added NoneMaxLimiter which prunes results from nonmax using feature intensity
15173a5b936088746b50cde0fc394d604ab66e4b;2015-11-14 21:19:08 -0800;- reverting an accidental change to the original SIFT implementation
d2275d7c7cd6002aa31027e72bf0d2173efd768b;2015-11-14 22:35:58 -0800;- work in progress commit for new SIFT   * detector seems to be working well   * a bit bothered that the "scale" sigma for detected features is exactly the real radius.     It should be sigma*2.5 or something similar
3b32d1cfe53490372b2354fd6c72af37d1ae9ccd;2015-11-16 09:10:51 -0800;- attempted to improve scale laplacian pyramid by interpolation location and scale
5f8591e81cb03513cf4bb0c49ae3d6ab8f507212;2015-11-17 07:52:10 -0800;- SparseScaleGradient now uses setWidth() instead of setScale() - Fixed bug in SparseIntegralGradient_NoBorder where r < 0 should have been r <= 0   * This is most likely what caused a noticeable improvement in SURF stability
a969a081a1b32a9f7dbcd0ac5ad4362f3485fbc0;2015-11-17 07:58:07 -0800;- noted change in SURF behavior in change log
b8cec2b13a3a2e686a63892cde0e0d22c8afad37;2015-11-18 21:42:45 -0800;- Interest point now uses radius instead of scale to specify the size of the blob
18ef4f914b6af9eb95ac7691777062e62bec1f3e;2015-11-18 22:48:26 -0800;- re-tuned SURF and SIFT scale to radius so that the radius is about the radius of a sunflower in the sunflower image
293304457bc7d4f6403d8476af6659a1119ef1e4;2015-11-19 20:48:01 -0800;- finished sketch of new SIFT orientation
5b9427c44b1da0558fd1a658ffde143bf90f6ecd;2015-11-20 17:58:31 -0800;- WebcamTrackFiducial renamed to FiducialDetection   * Can now take in more inputs types.  still images, videos, and webcams
ebdc358bf9926293d1f7364e15c426e4bffe2925;2015-11-20 20:06:38 -0800;Merge branch 'master' into sift
21c736bb85193a334dfb42513b4b89a89c0eb3a0;2015-11-21 16:01:46 -0800;- finished initial sketch of new SIFT implementation
eb0f9516d4afbf4980c0b42413e395407bb3e5be;2015-11-23 07:58:36 -0800;- OrientationHistogramSift2   * bug fixes and unit test
b5bf1a39dc2bc39350299135d5d7e9f0b9d563a6;2015-11-23 12:36:01 -0800;- work in progress commit for SIFT descriptor
48eeab99546b8bedd659f80ccf13f649912461bb;2015-11-23 18:39:28 -0800;- SIFT2 appears to be working well.  Still need to finish unit tests
f189365da082b449a78d4178c0c7990f7e894f76;2015-11-23 20:51:26 -0800;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
5b323bc9e7e8ff5ace8a7400c63cd19c958aec82;2015-11-23 20:56:50 -0800;- added copy to CalibrationObservation and made setTo() create new instances of Point2D
49abbb16e1f4d5451529925ed5791b6d20d5c072;2015-11-23 20:57:18 -0800;Merge branch 'sift' of github.com:lessthanoptimal/BoofCV into sift
9342c7dd57ac125e9c946c47351593e70232b79e;2015-11-25 06:07:41 -0800;- more unit tests - more tweaks to SIFT describe
e3420a5fe292ac3c4e53570ed9ad0eb55aedb025;2015-11-26 07:46:58 -0800;- comments and unit tests for SiftDetector2
ef15e515fe0eafbb9c31d53ad38777c0977ab68a;2015-11-27 17:01:54 -0800;- Renamed SurfFeature to BrightFeature   * Used by SURF and SIFT, so the name was made more generic - Guassian Kernels with even widths can now be handled - Initial sketch of SIFT is finished and appears to be working well   * Needs more formal tuning across test data in ValidationBoof
c55f689640e2e3471052c7b834a26473c7c8d461;2015-11-28 08:18:53 -0800;- generalized parts of SIFT2 to work with any image   * detector can't be generalized to integer images
4918876298aa2b996ddff92d7440f85a6ddb77b3;2015-11-28 09:06:38 -0800;merged and cleaned up
c2e0a62d134ae36e405e02842f34a78a8d5446d8;2015-11-28 17:40:58 -0800;- tuned SIFT-2 - Created config class for combined SIFT 2
1820d6c9ae09bd8e88409db1236bf5e933e44245;2015-11-28 18:34:34 -0800;- created stand alone SIFT 2 detector
a8ab89355a9e1d12167fc041e6fa080e5803900c;2015-11-28 20:41:54 -0800;- deleted the old SIFT - renamed SIFT 2 to SIFT - association panel can now display multiple matches to the same feature
a7a989cf70d0d5fa31126611bb96bf43f8a2cf35;2015-11-29 08:25:44 -0800;- SURF  * Exposed an inner parameter.  You can now change the kernel size increment between scales  - Continues process of renaming SIFT-2 to SIFT   * Removed restrictions on it requiring only floating point images in some code
80d66d720a38fd8025f3690f511539988b77ce7b;2015-11-29 13:28:48 -0800;- black polygon with shapes along image border now works   * refine corner can now refine a corner if one of the sides fail   * fixed bug in refine corner where the same point could be produced in positive or negative direction
2048422177ff8cf1c3ab74b4a4f2e16fe8c8a984;2015-11-29 13:28:56 -0800;updating data directory
c058edd54bc96a01e17c79f07744412af0fdb394;2015-11-29 16:33:07 -0800;- unit test for UnrollSiftScaleSpaceGradient
85cb6425f5c41c43b45be071388f708267d36a2b;2015-11-29 16:35:06 -0800;- merge in new SIFT
91885f39cd4c5ae0480918a8fc9214080dad0f01;2015-11-30 05:10:41 -0800;- attempting to make javadoc more html compliant
39b269fa4075a723a6e0d9f4c3e335d665343020;2015-11-30 08:48:15 -0800;- sift related unit test - javadoc clean up
bea176e4c526afe0f0861b536a34272806d4a7cd;2015-11-30 20:55:41 -0800;- Change / Clarified behavior of non-maximum suppression classes   * Border refers to the border around the image in which extremes cannot be found   * A pixel inside the border can have a value larger than one inside and prevent it from being considered     an extreme  - SIFT unit tests and minor issues
8d37c5c0b876bde489fbca4ddb621c1d2e117f8f;2015-12-01 09:10:51 -0800;- unit test for refine line along image border - removed ad code from javadoc
a190aaa715e6891753c198d73f3b862e5fa48fc3;2015-12-01 17:35:04 -0800;- all unit tests now pass
5aaf520fecee6ecb9d20bd8fe139fbca7e28035d;2015-12-02 14:19:06 -0800;- FactoryPlanarCalibrationTarget renamed to FactoryCalibrationTarget
5cf02a3605bad54118d6e6959ff2efecfedf5c99;2015-12-02 21:24:23 -0800;- improved fiducial visualization tool
b10f5894eb28685fc416370ed6ec2fb90fd8c333;2015-12-03 19:02:36 -0800;- BaseSetectFiducialSquare   * Now samples around the quadrilateral and finds the difference in pixel intensity values   * used to threshold square image fiducials - better visualization of square fiducials in a debugging app
1549b2b6d0946807cfd7b7dee091316702d7592b;2015-12-04 03:55:03 -0800;change gradle evaluationRun to demonstration
376ce18edb204e55c27dadb2710b71a748ae0fad;2015-12-04 12:06:37 -0800;- Polygon detector is now where it rejects false white shapes that sneak by - edge pixel intensity information is now added to polygon info
784632b9ad1df0600a04d393fa8582dc056b0682;2015-12-04 12:16:56 -0800;moved data to the correct reference
3d61425515fd0399f555e0d62d0167e5e0a28f3e;2015-12-04 15:44:05 -0800;- updated some comments
ce8cf0c0a8088c6f45ad97bf9f17f738da17511f;2015-12-04 16:41:39 -0800;- detect fiducial square binary now uses edge intensity to threshold the inner image
34c852dc66c1bc948e05ad064d86beae47fe7928;2015-12-04 17:32:48 -0800;- added code to prune squares based on fraction of pixels which are black in the border
af1a433a187856d1e22073165a356b61a4278eca;2015-12-05 11:27:19 -0800;- updated for webcam capture 0.3.11
cbe9bdef38da8c31043a632727968a580fc92594;2015-12-05 12:29:02 -0800;Square boundary was not being set finished unit test
0580499fbe9da8938f71ebb98b0e19fa8f10d022;2015-12-06 07:07:08 -0800;- created common SIFT describe
6f120a2b3844f47ef6e628d1a4a563e15f44c72f;2015-12-06 11:38:40 -0800;DescribeDenseSift finished unit tests fixed bug in DescribePointSift   * sub-region coordinate was integer instead of float   * minimal change in stability
649edb19f4a47ac6ec5c30df1399baa54cb5b8af;2015-12-06 17:54:08 -0800;- sketch of abstracted dense sift - tweaked dense high level interface for simplicity
dd9339286640e73c2a5c821f4095b8a7c52b0c1a;2015-12-06 18:40:43 -0800;- highlighted usage of general purpose FFT in readme
de54ea50310d8eaed4b9611f472e4e9b3d5e0845;2015-12-06 18:56:40 -0800;adding travis-ci and gitter to readme
7103b549c9fe2e3694e59ae26d8f5cd55db32c85;2015-12-06 19:10:31 -0800;changed address of data submodule
07e2f2c68e5230d2bd4f1bce9d4d0b5f3ea8fc79;2015-12-06 19:34:41 -0800;fixed travis-ci link in readme.md
a2531a745691523152421a425940821aacc4422d;2015-12-06 19:36:58 -0800;yeah last commit wasn't good
89c5fe12c465fc16786307c7f602fbac5c7d7ef1;2015-12-06 19:41:37 -0800;potential fix for travis-ci issue
6fbabfbb897934c18e84d62d7274aa3de9e816f8;2015-12-06 21:04:04 -0800;- fixed comment in ExampleClassifySceneKnn where it directed the user to the wrong directory
71b888047fe04ed754178dcf5138e4e45798b671;2015-12-07 20:52:29 -0800;- Fixed regression issue for scene recognition   * Size of SIFT descriptor wasn't updated when how the size is specified was changed
3943c9abce0fef0a4d03b9b40f188dafeec36002;2015-12-08 10:22:11 -0800;- updated FDIstort to minimize memory creation
1541481a3913ab03f650d9122010e7e68d04930d;2015-12-09 21:51:10 -0800;- added image type information to GImageSingleBand - unit test for DSIFT
89096e7b43bc940dde9634801034dab78d5228ca;2015-12-11 09:11:42 -0800;- fixed bug in DSIFT - Tuned and tested it in scene classify example
bbd8c315b72adb16f5287ec236f66e777e549309;2015-12-11 09:16:20 -0800;Merge branch 'dsift'
1b6f500b93acbd60a9a497aa36ddbf32c4d7e2de;2015-12-14 10:47:29 -0800;improved visualization of contour shape fitting app
b10f301ebfc06c941834b17b5c1052f9cc4178f6;2015-12-14 13:43:43 -0800;- fixed redraw issue in ShapeFitContourApp
b28a06737f47c69956504df64c571ffa5ce208bd;2015-12-10 18:45:46 -0800;- work in progress commit to creating a chessboard grid by connecting the corners of found squares
c0c8908442806a85a993957abea4c40346d1a5dd;2015-12-11 20:26:54 -0800;- minor work in progress work
69b6bd2f46cd1f7d19994e0b20f4b5158e0f05d2;2015-12-11 21:59:11 -0800;- fixed minor bug in polygon edge intensity.  inside intensity was reported twice if verbose
a53475b8b0b930af9ec7a3bbba29c153ef935663;2015-12-12 12:22:20 -0800;- more flushed out sketch of cross clusters into grids
411e19a0edb3496753dea3c5a309509f53cb6ca2;2015-12-14 11:12:09 -0800;- work in progress
fd48b98dcd8532a5ccd95d8fd785341285135c40;2015-12-18 21:09:38 -0800;work in progress commit for CrossClustersIntoGrids
28d3bd08e03d5db4f7b005c30ee3a9b386d725db;2015-12-18 21:21:25 -0800;- fixed bug in SquaresIntoRegularClusters due to duplicate variables
bf7f5b22c6c4eca9c17e6b755d3581ca731603d1;2015-12-23 07:29:41 -0800;- Added conversion between MultiSpectral and Interleaved images
a2225da2736991151e321a9f3b2cc774374b61d5;2015-12-24 16:02:37 -0800;- finished sketch of CrossClustersIntoGrids
0d9a312262eb1058f56d2f675656402ecdf0aff8;2015-12-25 10:37:48 -0800;- work in progress for CrossClustersIntoGrids
5f9e23b55f515744c776c29dd8e94bbe4456f3c9;2015-12-25 21:23:08 -0800;- finished first batch of CrossClustersIntoGrids tests.   * Not sure if it's sufficiently tested
55f30a7a87da57c896ddf93d4dcb8cf8df8e329e;2015-12-26 10:55:15 -0800;- integrated new chessboard grid code - swapped calibration grid specifation from col row to row col for consistency
fad148ea0c4d322e7c9295f91ea0484222ddaa4c;2015-12-26 12:27:01 -0800;CrossClustersIntoGrids  - fixed bug when seed has two nodes
a02ef15ce1b764342ed5ee2f8d26961660897891;2015-12-26 13:28:34 -0800;- fixed chessboard issue where noise squares caused it to crash due to unexpected graph structure
ffe8c4d974669a67e0465883e58d3b3421769cdb;2015-12-26 16:10:32 -0800;- fixed a bug where the CCW ordering of points wasn't ensured - Regression tests are now slightly better than the old method
46705b72116a1435cb0517e26b87563d76691ba2;2015-12-28 21:48:47 -0800;all unit tests pass
bf81d151b144612f5d7120ef4cc4e98f187ae0a3;2015-12-28 21:51:35 -0800;- deleted old code
5482cc727879e68a1d73018f657abdf018f8bfa1;2015-12-29 10:43:57 -0800;- SquaresIntoCrossClusters   * now uses side length to reject corners which are not touching its corner - SquaresIntoClusters   * note info will use average if not 4 sided
fc23c4d9def4d71fc3948cc0f11b658553297572;2016-01-01 12:14:23 -0800;- added another user defined filter to BinaryPolygonDetector - improved comments
6bf7e6d84bd4c0df164a7dac1c6f744516bb8732;2016-01-01 13:07:45 -0800;- changed how square grid calibration pattern is specified
c299b2b397265e793f3ece2246ade2ade7829834;2016-01-01 13:14:02 -0800;Updating copyright year in scripts
e65dbeda222a8622e9b2ccf8e11f3e9c34bc1397;2016-01-01 21:59:41 -0800;- forgot to add changes to hough polar to change log
e82e7bc79f380d437b28e6d98ee8a90c81daef0e;2016-01-01 22:55:40 -0800;- adding changed back that accidentially got lost
09c69511804ff5448b5b0e0abe099592487cddea;2016-01-02 17:14:55 -0800;- WebcamCapture   * Provided an easy to use function that allows you to open devices by their /dev name
2cac07cb0b984e37f5fdf78a7c57b157a8f48a2c;2016-01-02 22:58:05 -0800;- Android   * Will automatically detect if image needs to be rotated 180 degrees and then does it.  Needed for the Nexus 5x
26628328d941f86fe847c56131e1143e41b0f469;2016-01-06 23:16:18 -0800;RefineBinaryPolygon  * Added checks to see if corner points are along image border
b7d566b650600290e191c611317716024a31fc49;2016-01-13 19:38:25 -0800;- Updated for change in GeoRegression   * Renamed RotationMatrixGenerator to ConvertRotation3D_F64   * API for Euler angles changed - Optimized imports
c5cb3f5873abf6c155e5d56d0e4bade1d80d16bf;2016-01-11 08:33:16 -0800;- work in progress for chessboard
2c1d6e5d679932d9b51b203e4b2a879e0915542c;2016-01-15 12:16:09 -0800;- finished unit test and fixed bug in ChessboardPolygonHelper
89e29f99f852ac502e25c1d98834c4f34e909a6c;2016-01-16 10:17:02 -0800;- got chessboard detector working at a low level for handling border - fixed names of some unit tests
408af5fc8e649ba463e26bd9e5830a6e2fca40c1;2016-01-16 22:00:10 -0800;- fixed couple of bugs related to chessboard
94e0e352a8897f89629f021bab293b92f0e8f616;2016-01-17 11:01:38 -0800;- unit test related to chessboard border   * changed how polygons are expanded for chessboard   * fixed bugs
c9a01a6c18e8dc75b1863427b6112228e4665c9a;2016-01-17 21:36:59 -0800;- more chessboard bug fixes   * results of experimenting with an adaptive filter which is about 95% of what is needed for chessboard border - only non-border corner points are now used in chessboard detector
029afbbce41d5b60d61604697dc0ee09052db37f;2016-01-18 09:40:56 -0800;- initial sketch of new local threshold algorithm - new image convert that will change single band into into ImageUInt8 with the specified pixel value range
4603ee15fdffa68c88d1bf60d12e12fa94768afb;2016-01-19 11:38:34 -0800;- work in progrss commit   * complete sketch ThresholdLocalPercentile
ab6572730db4986643643ef6a1f16bda3566019e;2016-01-19 17:42:47 -0800;- Fixed bugs in ThresholdLocalSquareBorder   * basic unit test - Added skeletons for other related unit tests - Refactored names
dab1b1ef1befc93c9b3a784e7fd4d5869170223d;2016-01-19 18:18:16 -0800;- Fixed a bug relating to upper and lower threshold index values not being equal when they should have been - Type wasn't set in ConfigThresholdSquareBorder
702b5065cdc4091f4783234d20966116ffb69734;2016-01-19 20:30:55 -0800;- DetectChessboardFiducial   * Added more unit tests to capture known issue
775f195f322639fdf88eb3040381b0fe979b47fa;2016-01-20 07:11:14 -0800;- improved border performance   * Doesn't seem to reject as many "good" images along the border   * SquaresIntoCrossClusters doesn't prune border nodes, but instead just doesn't try associate them   * Updated CrossClusterIntoGrids to accept squares with a number of nodes other than 4 - Still need to update unit tests
bfa45b5f2a8722c8e3dce63ce33f63e07375ce01;2016-01-20 14:37:59 -0800;- fixed an issue where the size of touch wasn't being taken in account   * it accessed out of band elements, which were initiallized from a previous run - CameraCalibration correctly shutdown cameras now
67d72d6c3ceb49dab1c1e36117485aae72bca47f;2016-01-20 15:40:53 -0800;- adjusted border for chessboard in assisted calibration - DetectCalibrationChessboardApp   * Recycles detector if possible   * Grid rows and columns is GUI configurable
bc146d461247e8aead12a0da41ed4a8d3cd058d0;2016-01-20 17:21:40 -0800;- fixed unit tests
fa6d81dec080399aa2a502a9ab085201378e90ca;2016-01-22 09:28:11 -0800;- unit tests
7c89e2fd6fa30821a3fdefadcc86c5e2f045281d;2016-01-22 15:56:32 -0800;- initial sketch of block min-max thresholding
ef089d8d7815137645dbd796222f865eb4f63905;2016-01-22 18:13:42 -0800;- tuned ThresholdSquareBlockMinMax more   * added scale   * implementation for U8
b8d5529d6f6424144d7e52b064866a3fcaa62a12;2016-01-22 19:02:29 -0800;- deleted ThresholdSquareBorderBinary
0ec8e5abfcc363682250c4481e69c7079c6c607d;2016-01-22 21:05:24 -0800;- unit tests for LocalSquareBlockMinMax
ea041a9ae6923dfaf21546115776b9fea918103a;2016-01-23 10:33:02 -0800;- Adding LocalSquareBlockMinMax to examples and demonstrations - Updating for release
fa09b1b6a1f83cef523cf8878bd72fb140f52a67;2016-01-23 11:46:45 -0800;- clarified comments in NonMaxSuppression - changed tuning of BlockMinMax in ConfigChessboard for regression border test
009cc2376c3eea65361b25436de96854b542bdb3;2016-01-23 12:17:49 -0800;- changed version of GeoRegression from SNAPSHOT to stable
a2e3afc24cc71fe51538c9f066d7b56d6779466a;2016-01-23 12:18:40 -0800;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
0bfc34808331b5071496cc240cb01b149b81fa38;2016-01-23 18:29:24 -0800;- Changes to ImplSsdCorner   * Outside border of intensity image is always filled with zeros now since it is skipped during calculations   * Fixed and updated generator   * Removed pointless line
83c3cfa42f4c7cadc5acfcbd6e3e59d284027844;2016-01-23 21:43:39 -0800;- tweaks to a couple of examples to bring them up to date
9adf765e9f0643f0d0c6e25ee4ab974a875a7f2c;2016-01-24 08:44:39 -0800;- added canonical width to WrapDescribeBrief
4c27a2db5601961f071160b3498471d2af2c99f3;2016-01-24 10:48:21 -0800;- Fixed regression issue with BriefSO and how the feature is scalled - Fixed a few JavaDoc errors
4d835645283d811d09abb90c54540639e868aac3;2016-01-24 16:57:16 -0800;- Final commit for v0.21 - Fixed a unit test - Added more usefull error messages to CameraCalibration
0d794170d6df00ca3459411ee4b53856a7a1a6a5;2016-01-25 21:01:14 -0800;- fixed spelling error
8e379cfc86514057d67722d5439c6b81749b08a8;2016-01-31 19:36:31 -0800;- Deleted MedianImageFilter   * Use BlurStorageFilter instead.  Create with FactoryBlurFilter - Fixed nearly useless unit tests for BlurStorageFilter
aeadaacc41ea4e01ad4b755c995e63a0387ce7cf;2016-01-31 19:47:48 -0800;- Removed GeneralizedImageOps.convert(a,b) since its identical to GConvertImage.convert()
8abb87fdce32bb6929479a1e8ca0159149bf5369;2016-02-05 16:27:44 -0800;- Changed version to 0.22-SNAPSHOT - Applications package now uploaded to Central - CameraCalibration   * Made internal data structures and function protected to make it easier to extend by an external class   * Fixed bug where visualization artifacts were being saved to disk
e62ef7e20fe314dabe1548276a90839070af8f85;2016-02-07 18:13:42 -0800;- No argument constructor in most image types   * Fixed bug where imageType was not being set.  Thanks pcmoen for reporting the bug - Fixed bug in ConvertBufferedImage.extract where number of bands in interleaved images was not being set in ImageType   * Fixed bug where imageType was not being set.  Thanks pcmoen for reporting the bug
efd19573e79222cb35ca0194806d033d4f06804e;2016-02-07 12:45:35 -0800;- Initial sketch of HOG descriptor - Implementation of ImageGradient for MultiSpectral images - FactoryDerivative   * Can now create derivatives using enum type
f72996e75ad5a2cbff94f5c70a1e2ed2e5216931;2016-02-08 08:19:23 -0800;- completed sketch DescribeDenseLogAlg
9a16dda0fcff5a7dbfadee592e94fbde1f165acc;2016-02-08 19:52:23 -0800;- a few unit tests
b715a604e0f7796b1a15f9658597cc970eac9c37;2016-02-09 20:07:21 -0800;- finished unit tests for HOG - Added block step to HOG
197d9b74dc1985a8d8a35b66b8de84bbbf19bf97;2016-02-11 11:20:04 -0800;- work in progress for adding abstracted HOG
ee11e944707de810f93f855a7ab90088cda4a331;2016-02-14 19:29:39 -0800;- DescribeImageDense   * added HOG wrapper   * removed configure() since it couldn't be generalized into HOG   * Created config for dense SIFT, SURF, HOG  - Updated ExampleClassifySceneKnn by adding HOG
7ba7beb92beb6875c3e31ff3d66bdc024a0254e1;2016-02-17 17:14:57 -0800;- fixed unit tests
290770a1418ff4d6d30bc4d389f5d28edc81d8ed;2016-02-18 18:00:23 -0800;- Wrote basic application for visualizing HOG cells across an entire image
1190cb86dcf30f131aea377473188b87fac29a19;2016-02-18 18:48:41 -0800;- fixed two bugs in HOG descriptor   * histogram was created by setting instead of adding.  No idea why it was working as well as it was   * histogram index was incorrect at upper bound - Visualization of HOG   * Can show grid   * Can Click to print histogram
2fcc2a484bc2a07cb3f81b8765efac632cd37620;2016-02-18 21:12:34 -0800;- updated results for bug fix
3063c5a78025aea187ab5a240df5dec7b5d11643;2016-02-19 09:17:43 -0800;- Added GUI controls to HOG visualization
a7eca3b46e9f307136c7c3986db0efc32ef34055;2016-02-22 17:35:06 -0800;- visualization app for contour only
84c8f57d8473e2a6944f4e58aed7ae8df5ae8d0d;2016-02-25 23:25:56 -0800;- Added comment about data directory in README.md - minor changes to VisualizeHog
97c80f64bc1e9d04b1c773afe87319b118d1b454;2016-03-01 08:20:02 -0800;- support for Interleaved images in PixelMath   * update unit tests   * might have introduced a bug elsewhere - InputSanityCheck for multi-band images - loadImage for specific image type
a010299b4d155c551cf3273f0eac20414b0c6671;2016-03-01 13:59:07 -0800;- Updated unit tests for TestPixelMath
95129f5bc33aca20dd502311cda1d3c3e4622966;2016-03-01 17:02:09 -0800;- fixed two unit tests
e9cb99b4608d0b3847c86b84a91eb4f2dbd18161;2016-03-02 14:50:40 -0800;- ImageStatistics   * Added partial support for Interleaved images   * GPixelMath supports more than just single band images
fc210c73954697b842e9c5cebb8266c8fda93802;2016-03-04 06:22:00 -0800;- RectifyImageOps.rectifyImage() now can process any image type - FactoryDistorit.distort() now has a function which can take in any image type - Updated examples to use new code - Tweaks to examples GUI
cb0324623fb0cd2e7aee23be09688db319d845e5;2016-03-04 07:35:28 -0800;- changed version to 0.22
ebce68810781a952d0d73042566dfce7174b5856;2016-03-04 09:29:10 -0800;- Fixed bug in ImageStatistics where unsigned data types were incorrectly initialized
4dffa645986841c941b0e674b271033d467237fd;2016-03-05 22:13:18 -0800;- Updated version to SNAPSHOT - Comments for planning - Adding missing citation
66a7edda374d06bc8fa27e641ad5a43c4a7f3bca;2016-03-07 12:01:13 -0800;- fixed type-o in change log
8ee91a4d3a6c82ad927194274e37f32d0278f765;2016-03-08 15:03:09 -0800;- Updated dense descriptor configurations to include a default sampling period   * SIFT, Fast SURF, Stable SURF - FactoryDescribeImageDense   * Now accepts null for configuration and creates a default - FactoryOrientation   * SIFT now accepts a null argument.  Thanks pcmoen for pointing out this bug. - ImplOrientationImageAverageIntegral   * Fixed internal null pointer exception   * Fixed bad unit test   * Thanks pcmoen whose comment lead to finding this bug
335fa9474fa7d3e437571328324fa1b45fa590b8;2016-03-08 15:07:26 -0800;- clarified what pcmoen did
5f7486d38587fcdb40fb4cfdef54822fb9282283;2016-03-20 18:36:07 +0100;- Compute Hamming distance by using bit counting algorithm found at Sean Eron Anderson Bit Twiddling Hacks (http://graphics.stanford.edu/~seander/bithacks.html).
fdae620efed1a1ed0903f6ce9366638cd97f16ac;2016-03-20 11:35:05 -0700;Merge pull request #45 from pcmoen/master
c27a4dbf67089cdeb6ba6482ab1e61da543716cc;2016-03-20 11:38:05 -0700;- Added benchmark for computing descriptor distance
e07a542fc548ff2990123d7f2549ba462d61e2cf;2016-03-20 12:00:31 -0700;- switched code over to new hamming distance method - moved table code into experimental section since there is no need to use it, but it's nice to benchmark against
57a0b41ed9323721c705618f4b9703c19bb6caf5;2016-03-22 17:08:57 -0700;- Refactored image data structure names   * everything compiles and all unit tests pass
07abb07300c4ea1b544c0788cc984570310225a6;2016-03-22 17:59:20 -0700;- Search and replaced harder to find instances of MS   * replaced with PL for planar
8e9eb6f5647ca3a815a46e68495ee8e914218565;2016-03-22 18:16:47 -0700;- Changed ExampleImageConvert to display everything in a single panel
3212aaa020b920fd78f71179d73a3a0ae8d252dd;2016-03-22 23:55:29 -0700;- updated integration - updated a few classes that got missed in the other passes
537dcbf46519388fa5b992c88e7ff5f4032ee51b;2016-03-24 23:27:05 -0700;- fixed regression   * changed the behavior of a parameter and didn't realize the consequences
ff837153b1fef3582fe6d19fbbc7a3ebb03f4fec;2016-03-27 21:02:22 -0700;- Updated version to 0.23 - FactoryDerivative   * Deleted type-specific functions
ff394f848939a5cb550e7b0b8c278853149802ae;2016-03-27 21:36:52 -0700;- BorderType.VALUE is now ZERO because it always defaulted to zero
25e34c65baec7674ec49d349276004a575b78b02;2016-03-27 22:08:15 -0700;- updated readme to 0.23
9a3c8e8c330941f9ecc481e3bec5edc89a8eabfe;2016-03-28 12:25:30 -0700;- Incremented to 0.24-SNAPSHOT
97f29856c1c3882fe4a546c5685d5bbebf4f0a07;2016-04-01 23:32:21 -0700;- Confusion Matrix Visualization   * Fixed bug where a row/column was being lopped off   * Added labels
a00880a54e5bbd4e21a798a9a0cbaa7789e1b15a;2016-04-02 08:48:25 -0700;- Confusion Matrix Visualization   * Changed size constructor to not set minimum size and has one input now
91edc801fcb1a07565c3133a4fbd36a84a101d39;2016-04-02 11:02:51 -0700;- clarified LAB documentation a bit - made LAB unit test more strict
7ce31beb40962411f32f3703ee21733a054326d2;2016-04-03 22:18:44 -0700;- Confusion Matrix Visualization   * Added ability to highlight one category   * Added ability to querry what's at a specific location
ac2cba61abea2a41d77550cddd948612cd54725b;2016-04-04 09:41:02 -0700;- fixed whatIsAtPoint()
ea7c295ed1543956ff31d614520ef5191b1efff8;2016-04-04 09:49:45 -0700;- Fixed layout issue
39490d7136c44d3594764a961ef84f6c014d8bea;2016-04-04 09:57:25 -0700;wip
4475e51da8fbba7c1d8af6a82de32f2cdabd7ceb;2016-04-05 11:11:56 -0700;clarified javadoc
4b01539e9707663920fb0eeabfc79d73be92d188;2016-04-13 08:15:20 -0700;- fixed commented out code in demonstration
fffea0774a0510e34f2d9e58119e0abc28932d95;2016-05-01 10:30:46 -0700;- local image normalization
a96e01a90d120976ffcff85a892dacf252687e68;2016-05-01 14:05:12 -0700;- improved YUV comments - Weighted RGB to Gray   * unit tests incomplete - RGB to Gray example
3d4416f5774b459d7e0589ec3599668647982e72;2016-05-01 17:38:29 -0700;- more convovle F64 support - unit test more flushed out for ImageLocalNormalized
d9b60a9b477a238bbf9df85c13d21e8dd100f42c;2016-05-01 18:20:43 -0700;- blur and F64 - finished unit test for ImageLocalNormalization
7417abc0a6138f9a8bccdd96d8bb600fb07acebc;2016-05-03 08:45:54 -0700;- redefined all module - created a core module - tweaks to RGB to Gray example
1eefd8aff7cdffe33587c106691c926ef0e15e74;2016-05-03 12:33:01 -0700;- fixed build issue
e56976e89097019e34be747d3ff9ab7ba1bc6631;2016-05-04 00:11:36 -0700;- fixed ImageLocalNormalization to avoid NaN
ae7d7f47ba446261ed6ff57081ceba9b8419be4a;2016-05-04 05:36:11 -0700;Local Normalization can now have it's border adjusted
e759acbb48abf2c03ea00061d9f6149b4e688b46;2016-05-11 15:49:38 -0700;- Adjusted assisted calibration so that it's possible to provide a custom output directory
60973a6fe9010e7134aef862f52b91158547e0af;2016-05-22 20:51:45 -0700;- start of removing Xuggler because it's dead - Start of adding JavaCV as a potential replacement
bed2a435ec06ee65cd68cd2d09823294db4b6dda;2016-05-23 07:38:23 -0700;- JavaCV video works
c3994cac0287cd462fd6572ca9221d7072a48937;2016-05-26 17:39:33 -0700;javacv working in windows
37c7b80da37ed8f648b3df64055c95bfc3c16773;2016-06-03 21:02:15 -0700;- Added partial support for converting IPL images - Added reference to MacOS binaries in JavaCV
d5bd3e4716c72b24bddc25ea3ded211a0b0c2f27;2016-06-03 22:46:44 -0700;fix for compiler error?
86540f5747e89515961e2599f5e0873277dff358;2016-06-04 06:22:28 -0700;- updating for release
860341fa0195584c760693d192cbbee627cb0656;2016-06-04 09:31:29 -0700;- adjusted unit test so that it should always pass
6bdf9f73e035ad0dc49b34b8fb58c9d6cd6127ac;2016-06-04 09:54:59 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
461ad208d9edad7a79b2bca4aa3136830bab4b43;2016-06-05 07:20:04 -0700;- cleaned up generated libraries directory   * includes all dependencies   * correctly labels jars as boofcv
2435636d97a472ed2eb1b6d18b3f715fd8df1f23;2016-06-05 14:41:37 -0700;- updated README.md
9b3eaea085e0bf64c096cb6aaeea66af08361f9c;2016-06-09 23:44:47 -0700;- Referencing stable release of GeoRegression
52f2ff86ffd3dd77d6a84c2b7d0ee3a1324a3dd6;2016-06-10 08:46:32 -0700;- removing print from gradle script
af562baf705c141a5802592b8030b8bbed61d726;2016-06-13 09:33:00 -0700;- Updating to 0.14.1 to get around SNAPSHOT issue
2c3aba723d74416e893274ee7c9b77ab12c4fa8f;2016-06-13 09:52:20 -0700;Merge branch 'SNAPSHOT'
16fff968dbbe07af4a9cb14395a89cde18ffb72e;2016-06-13 10:16:27 -0700;- updated version in readme
dfde1b23938f5607d506efdad15b378f637beadb;2016-06-17 14:49:55 +0200;Merge pull request #1 from lessthanoptimal/master
a9219b213756be5b630739cbc903277393c7899d;2016-07-27 18:54:08 -0700;- fixed a resource issue in a unit test   * would fail depending on how it was run - updated change.txt
459ac31a6e0f2717c230ceecb057b70e4cec357c;2016-07-29 10:52:08 -0700;- initial sketch of pixel precise ellipse detector
13908518f449c9fb052e91753168a462a324c892;2016-08-01 09:20:54 -0700;- initial sketch of SnapToEllipseEdge
61692e5df9ed14e99738f0cd21e6b09da6daa3bd;2016-08-01 13:00:46 -0700;- WIP unit tests and stuff
eb849f0daf32ed1717bf390b08a02339dc4988e1;2016-08-01 13:07:54 -0700;- updating version
17f2f29f19a6bda3d46b4aeb26fdb0366e7ebe28;2016-08-01 15:20:48 -0700;fixed unit test
fdedc3a1dd3fb6968aed0088b453e3300a78b106;2016-08-01 16:22:19 -0700;- finished unit test for TestBinaryEllipseDetectorPixel
adc0c6226598326f68a4202edc676373fe438d32;2016-08-01 16:25:32 -0700;- sketch of unit test
7dc7ab62df8fa0afc66d277b9d422036d4925904;2016-08-02 11:16:01 -0700;- Finished SnapToEllipseEdge unit tests
8a71b337f20d268a6ec7b699083fe5091a5d59fb;2016-08-02 15:16:24 -0700;Updating data directory
338fe9f050f6859681a60743d01584de021ab809;2016-08-02 15:16:40 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
f3dcb0e06aff7901e24298121dc0988399e770b5;2016-08-02 18:56:12 -0700;- Added ExampleDetectBlackEllipse and related code
f754b38987a620012778666444bc98ea151b022c;2016-08-03 19:36:44 +0200;- some simple output to error console when videos can not be decoded
d35c26002ab5e69058800e3af885828ba69737df;2016-08-03 19:46:17 +0200;Merge remote-tracking branch 'origin/master'
efc560cdb473b9985dcf032c161476d3b2437f6b;2016-08-03 18:46:13 -0700;- fixed bug in BinaryEllipseDetectorPixel - Added option to detect internal contours
7d3aff1cf97e8264515da6bd0d2b1e2dd55b34f2;2016-08-04 21:03:36 -0700;- edge intensity test sketch
788e6823bc88ff5072ea6ed398b1ed12f75c11bc;2016-08-06 18:10:57 -0700;- protected to public on config - added image type
8f9c9c30f111e5d5ec90e8ee34a4e8c52927f6d6;2016-08-06 18:29:05 -0700;- fixed bugs with BinaryEllipseDetector
a51f228cf2ce0d1c1c9f7410e327cdf8ae66ecb0;2016-08-16 14:53:39 -0700;- unit tests finished
acd32a52ac8a6eab27a6e2c72fa5a1d8c9c3b2bf;2016-08-16 17:59:46 -0700;- Sketch of EllipsesIntoClusters
1e6c3eaba865bae7b69d39cdd03ffe720d8ad284;2016-08-18 19:29:27 -0700;- Untested implementation of a more faithful HoG
597db2b1d229637be8bd8997f3c03ba1fcae4a1b;2016-08-18 20:35:02 -0700;- WIP for ellipses into clusters
a26e76968d76738fa5d1a03c4c62d12660acdf76;2016-08-18 22:33:50 -0700;- Updated visualization to work with "new" HOG algorithm - Fixed some issues with the descriptor computation
1fe49fae4245bab8e9212a7d21ec440244a3b31a;2016-08-18 23:33:33 -0700;- simplified fast variant - updating naming for HOG   * keeping both versions
26855e61320a70a0850bba180d9b4a4f5de51ddf;2016-08-19 09:15:04 -0700;- Made the new HOG algorithm even more faithful to the paper - Cleaned up variable names to reduce confusion
b7ee1b6263d334e41a423466e65060b052fd81cf;2016-08-19 12:05:28 -0700;- Abstracted HOG can now take in any image type - Base class for HOG -
f8936d9d9097754727517616cd39af4f1cfc6157;2016-08-19 18:50:06 -0700;- wip
07941d17aa28d7253a29af254d0831791f04fa4a;2016-08-19 22:03:51 -0700;- unit tests
e8a62c4621e9e8b27b055563c52226e2d3bff7af;2016-08-19 23:01:56 -0700;- proof of concept for HOG descriptor display app
3dda73c1dbd4aba565cbc59b88aae7c0234c80a5;2016-08-20 08:56:08 -0700;Unit Tests
ed302d94220591cf3e33e5b5efa333a54aab4ece;2016-08-20 10:57:46 -0700;HOG visualization
71572e0added8f9135b72f2a43392015aa0fd8e5;2016-08-20 14:16:08 -0700;HOG visualization video improvements HOG unit tests finished
68f6a503763d3527071fd56f4a956243dffc6e43;2016-08-20 14:16:33 -0700;Merge branch 'HOG' into SNAPSHOT
e2daa22ec2e6625e9cfe3a46fe783e8b3edd46b5;2016-08-28 21:07:07 -0700;- WIP
a0da60d2a1107d1e24e2cd7ba7b43fb8d1d44509;2016-09-04 14:48:01 -0700;- demonstration base now accepts PathLabel examples - WIP on update for VideoTrackerObjectQuadApp
28a01e677cdd2ee3f504b3665b5e9331a842b9b3;2016-09-04 17:21:50 -0700;- Bunch of GUI improvements to VideoTrackerObjectQuadApp
452beee2c1339f7e952853bee90df374e8478b05;2016-09-05 07:55:31 -0700;- changed how track regions are selected
d4362807ef35b7e93342ae6ebf9cbaee762b3cea;2016-09-05 08:06:27 -0700;- updating gradle wrapper
c9387a4e58bc50dadd9dc1ed97e73d9ae56a08f9;2016-09-09 14:32:32 -0700;- simplified git clone instructions and made it more prominent
c93d8bd825047cd74dd1a0b09fedf604680ebcb3;2016-09-16 10:39:58 -0700;- Association   * Added helpful error messages when src and dst are not
c8d51b2f5f7c116b5606d65d59a725a5279c1692;2016-09-28 12:00:07 -0700;- Added autocode from F64 to F32 support   * new autocode package
1ce2ebb224a16f897fa2adf5e4186c0a596807e1;2016-09-28 19:08:40 -0700;- fisheye WIP
689256806cd25fd8c8808c69988cd02e0f90ea36;2016-09-28 21:07:48 -0700;- unit tests for existing equirectangular code
a5e9d915a760921a2977831894d331cfadcf2843;2016-09-28 21:12:46 -0700;- fixed cyclical dependency
2ecbddf1fc0bde676655ba1233577151d7c20bfa;2016-09-29 08:21:50 -0700;- Equirectangular example sketch   * something is wrong with the transform
b88f272faa4157fcfbcd7f1cf4da6ade72bf72dc;2016-09-29 08:22:44 -0700;updating data
9325aac04a4f5a4b6cbffad7f68a3174b9728673;2016-09-29 10:43:54 -0700;- getting closer
8949528a5be878e4fdd531b1d98fd36973fe8a24;2016-09-29 11:08:22 -0700;- appears to be working now
1c4129df86a493704921abc06bce4c5538a8eaf6;2016-09-29 11:26:29 -0700;- dirty flag was not being set to false for cached image distort
1b9755fa2e30ebbf5a734d32cb8487924f728d28;2016-09-29 12:27:31 -0700;- removed comments
8c56ed792b45be3dada46e212dbdfea164c35b92;2016-09-30 09:57:20 -0700;- speed up equirectangular rotate - fixed unit test - minor refactoring in PixelTransform
66f986bc9349ff02fc809a1885918bae2856ced1;2016-09-30 11:34:03 -0700;- fixed scale issue when clicking on image in equirectangular app
86434bbdd5b4d66dce7fdacf9c51c525ea670c26;2016-09-30 14:10:40 -0700;- Changed Java language level from 6 to 7 - Started process of separating distortion model from generic intrinsic camera model parameters
21362c574242de4abec0331654ef6f378155f5f8;2016-09-30 16:00:47 -0700;- Renamed IntrinsicParameters and broke into two classes   * PinholeIntrinsic and PinholeRadial - Sketch for equirectangular to pinhole camera
7870eebbfc2f405f2527050119bc550cf6e7b40c;2016-09-30 16:01:12 -0700;- updating data
bcc00826609e0a5d93a3914500852e9adeaf4d2b;2016-09-30 16:16:49 -0700;- removing jdk6 from travis
1bf0a146e582d48844c2f1242446545c774c7225;2016-09-30 16:56:44 -0700;- renamed pinhole model again - unit test for equirectangular to pinhole model
b1abcbfbe1a4cac71d62831e30a70e4bebc4938d;2016-09-30 16:56:49 -0700;updating data
c02ca9e8754418d0361079662f7f21c8334b4312;2016-09-30 17:03:33 -0700;- more issues from last refactor
8a0c61f659f629ecda36a64cc66c8e302679a158;2016-10-01 11:48:06 -0700;- minimal sketch of equirectangular to pinhole app
4716e81f969caae840e472a8f61c153c3989c6d9;2016-10-01 14:23:41 -0700;equirectangular distortion classes now given a common base
f1f08bd2fd285485b35d28010c0decfc1e307f8b;2016-10-01 15:13:38 -0700;- GUI/control improvements to EquirectangularPinholeApp
f73779d811cf94caa2b3476c5c77447511769094;2016-10-03 16:36:36 -0700;- added flipped vertical to EquirectangularTools.  This fixes problem with horizontal view flipped in pinhole amd makes the calculation more standard
b0a22364e2e8c4cca9570faadf49d84c73ab609f;2016-10-03 18:22:14 -0700;- added camera contorl panel to Equirectangular Pinhole App
380925f5fcb39a4e1412268c7422ed1b8f99325e;2016-10-03 18:39:11 -0700;- more tweaks
a0165422b4aab1c7d2bc2b370dc6f0a4c6323dbf;2016-10-03 22:01:30 -0700;updating for more examples
0f9ffd85e1fbdf348bd83551f78d07879a820e40;2016-10-04 09:11:33 -0700;- updated change log
0dae0839d419fceed858fb93d20aa915e91e652a;2016-10-07 08:34:27 -0700;- added rotation control panel to EquirectangularRotatingApp
cc2e5e87286ec3efeb0319ad487b852dcc57152a;2016-10-07 20:36:38 -0700;changed intrinsics to protobuf
d5ea53e1671b1f6229e4333d4edcd9fc3a85eac8;2016-10-07 21:54:27 -0700;- support for saving stereo using protobuf
e3745edbff9bb34e54f6344e8668fce63a5a3ad5;2016-10-08 05:22:29 -0700;fixed unit tests
49546aecdce842be33f6cc2a294218823013729d;2016-10-08 07:40:57 -0700;equirectangular to cylinder
3154dda9d3d0e65b6aaaf036cb4ee680f0af375a;2016-10-09 21:19:17 -0700;- fixed incorrect GUI variable initialization in CylinderPanel
dcb2a7a69e7ae27e968e04d877d8bc46863c5d5e;2016-10-09 21:48:15 -0700;- added unit test for EquirectangularToCylinder
368dd8dd243a020bbcbfb6bcc32fbd6cfca6e616;2016-10-10 11:12:21 -0700;Unit tests for EllipsesIntoClusters
33016c2991d484bd63722f88df13b9eddd20e972;2016-10-10 16:30:32 -0700;- cleaned up and filled out comments
a093f3175a57fbb6fc67c9efa414a427246bcca7;2016-10-10 21:03:58 -0700;- finished sketching out EllipseClustersIntoAsymmetricGrid
b19843bc0af467cbe2d00b855ba69f5e42d6ab68;2016-10-11 10:02:04 -0700;- couple of unit tests
f2024a1c5914b2fee9aecc5c2ba0acbb25b9e49b;2016-10-12 10:25:21 -0700;flushed out SceneClassifier
3df13e23deb00681832e3a6262f513f983a57fb9;2016-10-14 06:55:22 -0700;- updated pinhole unit tests
02eb043cc7c042cb71bb2b9f7a31f2aaf89615db;2016-10-14 10:38:05 -0700;- moved Tuple2 to ddogleg - start of integration with DeepBoof
e8ad4e54ca708c9b9ba1e239cdbe40914984dd78;2016-10-14 14:08:18 -0700;working first pass at integrating DeepBoof  * example actually classifies input image correctly
d37da2d89b333e19cc8617210161683be0197b0e;2016-10-14 14:32:52 -0700;- updated for function that was moved
5e695ced30ff2b092dabcfcd8a854e5fd6344973;2016-10-14 18:55:07 -0700;- minor clean up
dd45eca771ba0d140a16ead8d81d6fad231a3b22;2016-10-14 19:03:20 -0700;- refactoring of stuff in recognition
68998d0feccec15516377801f651161c1b95375b;2016-10-14 22:05:31 -0700;- more unit tests
3c3f5e849e943f709c7d52f415241f9bbb33d98d;2016-10-16 11:43:33 -0700;- closer to getting NiN network up and running   * runs be appears to produce garbage results.  could just be bad luck on test images
b75137776f587ebaac8ef1b8fe277b7e04e32ea0;2016-10-16 16:58:44 -0700;- minor tweaks to comments and readme and names
ce979243efdfb0e847e6a9c302c57fec1a63dc04;2016-10-16 20:03:26 -0700;- NiN is now working - unit tests for ellipse clusters into asymmetric grid
1ab5bdedf4b1a193d73bd8d9c4e072719ebd6af8;2016-10-16 21:02:42 -0700;- added reorderBands to planar - unit test for NiN
79c499ddd675d8dcc1636d5f86902e99214cf57b;2016-10-16 21:39:06 -0700;- changed save order just incase the input was being modified
08c6937bfdae3f9a2aac82e9640398dda0bcdc2f;2016-10-16 22:56:04 -0700;- forgot to put it into evaluation mode
85b00c76980f429292a0ef8331d95f043f93bb68;2016-10-16 23:48:38 -0700;- common code for ImageClassifiers
1769e034645a49cf655e9981e285c80536f9ec86;2016-10-17 07:23:14 -0700;- Simplified using image classifiers
2b0b85036fb47491b5ac00876ded17b9472b2ef1;2016-10-17 08:36:36 -0700;- unit test - search and replace for <>
5223747d31c10bf9c4b2a47ab2386b84ba23cabf;2016-10-17 10:35:11 -0700;- better visualization for ExampleImageClassification
5da100b4d4f1cf884605f9ddfa0769e0b93bea8b;2016-10-17 18:13:15 -0700;- FiducialDetector   * Added getIntrinsics()   * Added getImageLocation()
611820c7b15ae1ebaf997166633e594bfe8247d4;2016-10-17 21:04:23 -0700;- FoundFiducial now returns location in distorted and undistorted pixel coordinates - added unit tests for fiducial target in image by pixel   * found an obscure bug where distortion wasn't being removed when a new camera model was inserted - Added functions to clear lens distortion
77cce75ad0e8929c9566840af9e647425e3bbeba;2016-10-17 21:11:25 -0700;- updating data
1a16d4d451fda36f2a879c9d3a6631ae05cc112c;2016-10-17 21:14:30 -0700;fixed gradle script
d461d850e2cac6f5bd00827e0fc46bd4d2aa0f52;2016-10-17 21:27:37 -0700;- fixed flickering problem in FiducialTrackerApp when processing an mp4
37f31e9f62504966c6e88b68866f93a7c2b38a59;2016-10-17 22:45:04 -0700;- ClipAndReduce   * unit test   * fixed a bug in clip
0315ea8d7717d798ec7787381bb59695697f5def;2016-10-18 07:31:05 -0700;- updated syntax to Java 7
93b163b27166600303eb09abac7cc1f1de2dabcd;2016-10-18 08:47:01 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
6bc24497297884236e516e12ebf0f67bdc986857;2016-10-18 09:45:20 -0700;- unit tests WIP
9870ce26040a5ac7a0ea908973b4bcae6272aab0;2016-10-18 13:37:31 -0700;- deleted Xuggler related code
cb13fef27fe128801517d8e0f11d6721ff9e25ad;2016-10-18 23:12:59 -0700;- changed calibration saved files from protobuf to YAML
64d0ad86d7093ff65bec8aa6355d655a63e351a7;2016-10-18 23:13:11 -0700;updating data
39fd477be9309253886b0f050eace97c1fc515dd;2016-10-19 06:26:06 -0700;- large refactoring for adding support for wide FOV cameras   * these cameras have a FOV greater than 180 and the Z=1 assumption is no longer true   * need to differentiate between normalized 2D coordinates and normalized 3D coordinates
70acd3a6da3035e813f4cea707dee837705fe8d9;2016-10-19 06:35:05 -0700;- adding missing intrinsic.yaml
4ac362b44b0dc5e361ea15efe26bdeeadf01c885;2016-10-19 10:27:53 -0700;- WIP on adding universal omni camera model
4172b96219401598738f0cddcaf150697218462d;2016-10-19 12:32:13 -0700;- auto generating more files from double version
b1d5b6ddc7932d25f82b3fd0ed730a5b952e5c08;2016-10-19 13:52:49 -0700;- unit tests for universal camera model
8203e53994d5283caad3ee8280646d235b66e402;2016-10-19 15:48:28 -0700;- sketched unit test
72389cc4b6d475569fd4dd2325da47e6d604ad46;2016-10-19 17:26:28 -0700;- WIP
81654b77aa945d7bdabc82572586f36d51ec862b;2016-10-19 18:34:12 -0700;- fixed a bug in omni code   * much more accurate - narrow to wide unit test now works
a776c36bfa071414deac78d9cd1d156d98268a40;2016-10-19 20:39:22 -0700;- read and write universal omni camera calibration parameters - fisheye demo app
7cb3e89c2195c156e2fca1d3862122d9be06c058;2016-10-20 07:00:21 -0700;- setters/getters to CameraUniversalOmni - comments/formatting
624197769d95c52b7cc9e991a4fb4a482c9e1aee;2016-10-20 07:19:43 -0700;fixed bug in saving
951fc09f1ae2e3849963ecf4d680b67d8ecbd181;2016-10-20 12:08:59 -0700;- improved fisheye pinhole app
55a24cb2ddd0b801b28a4f53a0e26770e318a9fd;2016-10-20 13:02:49 -0700;- added mouse drag to equirectangular pinhole app
a5902410238b174220a98d1dfb8108211e20330e;2016-10-20 13:31:33 -0700;- fisheye to pinhole example - refactored _newImage to newImage
cc93e7461f818238f93cc17d358f351332e1148a;2016-10-20 19:21:15 -0700;- Fixed bug where if intrinsic was not set it would still claim it could estimate the target's pose - Tweaked fiducial example so that it checks to see what the detector supports
849ed31a9f2aab00c55014d7415850f5548bd2f5;2016-10-22 13:39:19 -0700;split fiducial into 3D and regular takes in lens distortion instead of intrinsic parameters
2705060590a9955238f713844cd5c4af0543ef79;2016-10-22 16:42:36 -0700;- fixing what was broken
6494735cc0dbe9bd40deffff3ca1c53a9776e3f6;2016-10-22 17:55:34 -0700;- fixed more fiducial stuff
0a079fd3e7b6c30a81f9241b2a1b1e7010cf2c7b;2016-10-22 20:57:58 -0700;- fixed stability meter issue
4e525264afe2ee5b354e30b7e0541ab3b423e08d;2016-10-23 08:52:16 -0700;- unit test
6004def886a960218fe125f2c68e3daf1fc03f0d;2016-10-24 08:42:28 -0700;- unit tests
1b4124e07c7929446f349d880a6a326ea766de19;2016-10-25 12:13:04 -0700;- Unit test WIP
c730609c53b62490f22197db237e36bb9f9c700d;2016-10-25 12:50:35 -0700;- Finally got ellipse clusters into Asym grid unit test done!
51844df64b67ebfc35c1ff42ff9e828c881ad0ce;2016-10-27 11:18:38 -0700;- applications jar will now always be created!  No more idiot caching preventing it from being created after deleted
4134f502bd3a3f20b8ad1e9c82c912de5f9d2eca;2016-10-27 20:11:47 -0700;- Sketch of multiple camera to equirectangular - added support for more operations on Planar images
6e313f9f83f27d65f223ca350dfbf325d88b7c6a;2016-10-27 21:14:32 -0700;- fixed mask issue
a49569fd9b27722f404007bbc91d83aac53a9c57;2016-10-27 21:54:51 -0700;- removed debug print code - fished out example more with multiple fisheye images
d3787a0312248494d7db572edf8c27f390753e68;2016-10-29 15:07:14 -0700;- reduced iterations back down to 20 for removing radial distortion - tweaks to omni documentation
277269c1bced13d1372982dad58e561fa7d3f057;2016-10-29 16:22:28 -0700;- better unit testing for pixel math   * covers planar images now   * specialized functions for planar divided by gray - changed it back to 500 iterations
a89c799a58166b8f4b5a2d5abd26fe5ee351cb59;2016-11-01 21:15:15 -0700;- attempting to add support for reading opencv calibration files
8e4e53f466ce3a9921a81f551ad606c3c8ebeaa8;2016-11-01 21:43:46 -0700;example file for opencv calibration
448e000db503a9dcbaa8083318b882247c1260f6;2016-11-01 22:36:19 -0700;- added ability to read/write opencv calibration files
ba613d0e30d08a8236769c42419d9b5fb29c32b0;2016-11-02 10:12:45 -0700;- Binary Fiducial   * When decoding the image it now ignores border pixels of inner squares.  These tend to be very noisy.   * 7% improvement in regression test.  Idea taken from ArUco
393b1aad977e1346308f6135b853628d79d49535;2016-11-02 19:40:02 -0700;- WIP asym grid
ed0e4e56aee5a95817f2ab68497691279467de84;2016-11-02 21:13:22 -0700;- Asymmetric grid hsa been sketched out more
6b6c5541e2646b3737e17fb7170f072e60ce3a19;2016-11-07 18:07:52 -0800;- unit tests - correctly specified canonical order for asym ellipse
9a4dacce9b5de6eaf441fa33dbf9d993c79b557a;2016-11-07 23:22:10 -0800;- more unit tests
f573336776914ef7008289ea6f2a006b36bbd23c;2016-11-08 11:26:48 -0800;- DetectAsymmetricCircleGrid unit tests   * also fixed and improved other related unit tests/algorithms
5da1d17ef00df3d3cc72195b83bf65d61723e61d;2016-11-08 19:28:29 -0800;- picture of tangent line intersection
5b1f7bf33e548d1b86ef9ecd9292601d72bc2f78;2016-11-08 20:14:02 -0800;- revered
4d6045f9190755b69cb20afaa2b58915c620535b;2016-11-09 08:44:04 -0800;Sketch of AsymmetricGridKeyPointDetections
802262a9fb8879cab9fa1d075f7bbaf9e753d533;2016-11-09 08:44:16 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
5f3e759ed43298e0acd693fd47b94ae76419b86c;2016-11-09 21:27:36 -0800;- FancyInterestPointRender   * Fixed addString() being a no-op.  Thanks R-Gerard for the bug report!
465f26b196318b5b824342f4b698490cbae22607;2016-11-09 21:37:40 -0800;- Tweaked format of generated fiducial postscript documents - Page size is now added to fiducial documents with printInfo flag is true - More verbose error messages in DetectFiducialSquareBinary
b4665f00cfc838c214758f2c7448fa1afb98acec;2016-11-10 09:54:34 -0800;Merge remote-tracking branch 'thhart/master' into SNAPSHOT
9b0e3f0187401b1b1fda82f4504a4a8dff5e2214;2016-11-10 09:54:50 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
3130781bb135a2c9ff07e4ea6cb4f1e682141928;2016-11-10 19:55:13 -0800;- Refactored calibration fiducial naming for consistency
b8e5e9937fac3ccdf19747a9b4198fd9f7b0955a;2016-11-11 11:02:41 -0800;- unit test completed
ba0c22e663b126e86c2c61d4de255a4f20343333;2016-11-12 05:50:04 -0800;- initial sketch of full asymetric grid target detector
e5f8c1e073e7acf63f9fcc935044c16aa0da5367;2016-11-12 13:40:43 -0800;- symmetric circle grid detector is passing all checks
4b8fc7f99822f5452ea5345d69cb0a2b98084af9;2016-11-12 18:32:56 -0800;- cleaned up inputs for ExampleCalibrateMonocular and CalibrateMonoPlanarGuiApp - EllipseClustersIntoAsymmetricGrid will return false instead of throwing an exception for one error type - Put ellipse asymmetric grids into example and demonstration
e3a436b0c7e2a88a0cfd514c3e471d8e8e2e9c1b;2016-11-12 18:42:50 -0800;- Deleted ExampleCalibrateMonocularPoints because it was redundant - Improved comments in FactoryFiducialCalibration
46f594f1cd29b5990dc21f2acdcd9fb149e642d4;2016-11-13 21:05:45 -0800;- asymmetric circle grid as a generic fiducial - costume paper width can now be specified - simplified how page size is internally stored
c0409a10736069657203f426c700a8caaff62a8c;2016-11-13 21:53:30 -0800;- more values can have units individuall specified
40a1778d81a7422ba2d3273f2f810acc58fa4085;2016-11-13 21:58:57 -0800;- pattern names are printed in a more compact format
4d25740bcf7b9c9f6c1a955da7df361927d002c7;2016-11-14 09:29:48 -0800;- start of calibration target generator
cf9959b7648b7b265c3ef663f12ed47a2ccc1a27;2016-11-14 10:54:41 -0800;- updating code for new circle calibration data and  fiducial example - more gracefully handle a bug in ellipses
611ee376672a42c44b44312442ff13a10b18c3cd;2016-11-14 14:47:50 -0800;- Detector demonstration for circle asymmetric grid
2a5349bafa8352a9deaecd326918fdbd05456a1d;2016-11-14 20:54:41 -0800;- improvements to circle asymmetric  algorithm and visualization   * Can process entire sample video sequence with out glitching
8b232bb165b40463352e19823067cfaf8a3e413a;2016-11-15 11:39:55 -0800;fixed type-o in page size
993b0abbde4775c2d8945912d0b9c83aa7858e14;2016-11-16 17:57:38 -0800;- removed references to protobuf
a2c327f630d1c7923354dbf5381bc410dfe559e5;2016-11-16 17:57:52 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
b7992e1e57752f4a3295064c492779d9135d9119;2016-11-16 18:02:14 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
5aaa18fa3faec21f7663f992922e908e0afe2938;2016-11-16 18:48:55 -0800;- fixed bug where null was returned instead of an object even if no detection - added unit test for that
91796ada13acf48fe9b73a8d3975f6fa6398ce90;2016-11-16 19:24:23 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
3e02852192f8b2648d1e48c8940bcdf266853e5d;2016-11-16 19:29:48 -0800;- PaperSize toString()
fdfd30e8c952724c597a93f96a3e4022c251c589;2016-11-17 09:18:57 -0800;- Added enum for calibration patterns
bd939c2d595efee9a6b06cbe5806b11a088f1db2;2016-11-17 10:26:42 -0800;- Adjusted default setting for circle asymmetric grid to better handle extreme perspective distoriton
79fd74ae76b1d3300840dab1fe1d7b8f21912331;2016-11-17 10:46:54 -0800;- ellipse detector   * can filter out points based on ratio of major to minor axis
1715ff94255870dc617a8c6ad96e23a3267f9be8;2016-11-17 13:59:23 -0800;- added ability to remove lens distortion model from fiducial detectors
53a542481262b7019b4117bbc56e8ee2c8921961;2016-11-17 19:43:31 -0800;- added example for equirectangular to pinhole camera - changed path for classification example
7e169624b76afe111795bd83b5780dc65ec0a90a;2016-11-17 19:43:47 -0800;changed reference to data
0966606158f9a1b0af091ab083ebe88cfd5755c3;2016-11-17 22:09:41 -0800;- FactoryMotion2D   * Removed image type specific functions and updated code for more recent API
76131ac6d1365e6b405bf1eab77ecc1777c9a054;2016-11-17 22:31:26 -0800;- Fixed bug in StitchingFromMotion2D where reset() could cause a null pointer exception
6eb3ef2b9bcce0acf15fc43ec78cdeb988dd604c;2016-11-18 08:37:13 -0800;- fixed 2 unit tests and WIP on one more
a3554798a8ad6c3f0a7973aee09047b25d2103b8;2016-11-18 09:47:14 -0800;- fixed bug in EllipseClustersIntoAsymmetricGrid   * Soft rule let it always select a point along a line
8f7c3707eb90117df34041c2053c833d75e16d76;2016-11-20 20:00:54 -0800;changed text to be an overlay to make it easier to read and see the image at the same time
a5093f699952827fa8a7ddb4dc42c3926f4ab370;2016-11-20 21:11:29 -0800;unit tests for network based image classifiers
695e6139a267a0cedbb7171c0619c6d6dc8f5afc;2016-11-21 10:59:24 -0800;- improved MultiCameraToEquirectangular   * produces clean results - updated examples for above changes - updated examples for change in example data - switched to using points instead of vectors some times
c76b59ac91e8a648986464b2d85bf1d479d4c113;2016-11-21 11:07:40 -0800;fixed a word
c83e51c113e9a19ca9bfa0bb49645fe9b768b8b9;2016-11-21 20:35:18 -0800;- Interleaved image   * get_unsafe and set_unsafe changed to unsafe_get and unsafe_set respectively.  For consistency.
4223d5acf9f4cc666e2ca14b648c933da747710f;2016-11-23 10:36:50 -0800;- added target circle asymmetric grid to calibration application - other minor changes
0d3139378e6d04be099f11ddcce715e8bb220a69;2016-11-25 17:19:04 -0800;- added support for circle asymmetric grid targets to assisted calibration   * this required changing some of the innards - pruned ellipses which touch the image border
0d9e3a98a277ef50e7c1eca6cc260227811463a9;2016-11-25 17:39:52 -0800;- added show order to calibration visualization
4522831c43d737b529b2aa944df50dfb211fa633;2016-11-26 13:23:19 -0800;- more tweaks to assisted calibration for circle target - prints warning if desired does not match actual resolution
0698076ab1ca833206b6e59b0a9c72b0f6332557;2016-11-26 15:44:29 -0800;- put calibration target generator into main app
0823f377c518e760ac7001f8e53dba3209f39e5f;2016-11-26 15:44:41 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
8db79532b91d8ceddef494bfa3f2d2a322f56060;2016-11-26 19:03:54 -0800;- changed CalibrationIO to use Reader and Writer for Android support - specified 1.7 as target
ead64b147316f4b8f5bc9d1990e4f263c93d157e;2016-11-26 20:22:36 -0800;- Android   * work around for a crash bug in Marshmallow
d37fd2b9902ffdbe4e0ed16e2a3f65436b9ae6a2;2016-11-27 09:20:59 -0800;- EquirectangularPinholApp now renders the pinhole in equirectangular image
b23a1484515a4354c0037331ff1860588af9bbbf;2016-11-27 15:23:49 -0800;- fixed type-o in variable name
7ac926272a244bfa869b94137c1d4087288ac60e;2016-11-27 18:27:33 -0800;- WIP for demonstration launcher
b0768099b06c7f3c99b612ea548cc0e42a56051c;2016-11-27 19:39:39 -0800;demonstration launcher app is working fixed minor issues in other apps
cc5ec7505f908bf807c397407c7174cf726bfc31;2016-11-27 21:32:11 -0800;- example applicaiton launcher - updated readme
1a843c1c13f433896c01b1448d62999ec7444026;2016-11-27 21:34:13 -0800;- removed out of date instructions from readme
7339b781f8ce2a348f00ffae443276ebe22c41df;2016-11-28 08:34:01 -0800;- Removed applet module - ExampleClassifySceneKnn now automatically downloads its data - JavaRuntimeLauncher now accepts alternative locations to send standard out and err
6d6c9d6a534079e8bdfd50638afb32f5a71279c7;2016-11-28 11:29:26 -0800;- Template Matching   * Added correlation using FFT   * Tweaked API so that preprocessing of image can be performed   * Clarified how score can be used in example
f07a30e4ad734c0ef4f8f095e52092a3fc7d9385;2016-11-28 12:23:16 -0800;- fixed examples not opening
09f3c8b99c88a2cb6b182c3375922e8802b046d4;2016-11-28 12:29:32 -0800;- was trying to load calibration yaml as xml
f975cc7c369a6c6d2db882a62030034e29fc4161;2016-11-29 11:25:20 -0800;- Refactored TypeInterpolate to InterpolateType for consistency - unit test for MultiCameraToEquirectangular   * fixed a bug - EquirectangularTools   * Fully documented coordinate system   * Unit tests to validate correctness based on definition   * Tweaked how y-axis is computed   * UNIT TESTS FAIL NOT EVERYTHING IS 100% CORRECT!
2f06026bb3b6c823fb611993e5cc7aae534cd0be;2016-11-29 13:00:44 -0800;- all unit tests work again
a8cb96495acfc03067f4ee5def052e805b17c299;2016-11-29 15:23:17 -0800;- getting kinect integration to compile again
b7e72c69bb9307f212a8362d96bdf451f7a7bc78;2016-11-29 15:52:52 -0800;- added example images to detect black ellipse - added weightd rgb -> gray to planar image example
255128d5b7ed276dde04d41007c4ff3ce33b87d4;2016-11-29 17:40:41 -0800;- reference to data
4fb39189581b24bd0a79257abfc0ab68080067e5;2016-11-29 18:15:11 -0800;- Cleaned up demonstrations a little bit
2babd0be2eebfd0d9648a7312255b71a708fe031;2016-11-30 18:46:50 -0800;- Changed behavior of AssociateSurfBasic   * no longer throws an exception if src or dst features are empty - Changed georegression dependency to the new stable release
2762bc91cf9ae32c95a0bfc5b711422428a3d239;2016-12-01 08:53:24 -0800;- Release candidate for 0.25
46d0aa5b9480f82c23d48821ac5c7e40fe36fde8;2016-12-01 10:21:06 -0800;- added examples to CreateCalibrationTarget
cc5006d4815ca3b9a159be798107816f685e6572;2016-12-01 10:21:20 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
4e42ab0fbf8f9c65de798b3b764e4406bc281891;2016-12-01 15:18:07 -0800;- comments for an example
c7bb2a605bc21ee656424ae4891c7f388482bee1;2016-12-01 17:06:41 -0800;- fixed file path
89664cd7a606e265b0eed8d1d0225b2c334a393b;2016-12-01 18:22:40 -0800;- fixed unit test bug with Convolve
ff07d52b242f4dcab2b58e2d09ccccbef47c5374;2016-12-01 18:28:14 -0800;-changed version in gradle
2a47ec7000befce4e7618545f9a21dcc1a9c2ca2;2016-12-01 18:44:22 -0800;Merge branch 'master' into SNAPSHOT
aa07a892df0a7d5912f34dd2921f0cb818fe481b;2016-12-02 20:27:01 -0800;- refactored equirectangular transforms because their were named in reverse
2b7dd8b312aeec6089aea19357b49f7e6d99271a;2016-12-04 02:22:01 -0800;add maven version badge to readme
174639a5ea623c02d4913698f34809c78ab7240c;2016-12-04 02:22:36 -0800;add .DS_Store to gitignore
26ab4790202965c38c01fe2c1ce98990107e45e8;2016-12-04 10:12:25 -0800;Merge pull request #59 from emanresusername/maven-version-badge
8e93b756e1c2518b8e94e47f112ca6c25b65100e;2016-12-04 10:13:22 -0800;Merge branch 'master' into SNAPSHOT
ded173477a849ccd8ee9ff9fd4f697c3c4fcdcb0;2016-12-04 11:02:25 -0800;- attempted to clean up and simply the readme.md
72d81f01e3d571e9c0af54888bac170ddeea9319;2016-12-04 14:08:44 -0800;- using auto64fto32f now
d059664925d0db566da06f084ebf2416f3409e45;2016-12-04 17:24:38 -0800;- TypeInterpolate is now InterpolationType for consistency - Examples   * InterpolatePixel example added - Demonstrations   * Improved DemonstrationInterpolateScaleApp (renamed also)
3bf766741d4dc005374c92f96baaa7bf1445ef63;2016-12-04 22:17:06 -0800;- build fails on dependency conflict - fixed a conflict and unit test fails for another reason - removed unused pom.xml files
b6a87fccb89e2d5c0781fbd6103468a13cfdc804;2016-12-04 22:20:42 -0800;- removed unused ant build files
237e59ef59eb6ccda4cd6750e2e256799c08a071;2016-12-04 22:38:56 -0800;- Created a gradle task which checks to see if there is a SNAPSHOT dependency
006536510e75f7ae84c15079d489b4503aa8d312;2016-12-05 11:46:12 -0800;- automatically checks for SNAPSHOT on release build
f3acab031d25f219cf6630bda1fa0b6e0a584779;2016-12-05 11:46:45 -0800;adding changed data
41ed8cd9f30c01152738da803cdb39499faed39e;2016-12-05 19:10:27 -0800;- added image blur example
0869e97572ae3a8710fbe5ad6da7e76ff98afedd;2016-12-06 11:11:42 -0800;- changing version of auto64fto32f
07cc1232240235df124680b622bb1a5068cb5640;2016-12-06 13:56:16 -0800;- updated to DeepBoof SNAPSHOT   * Modified code for change in download function
00c2a449242f0277f7fe967b53d65ef945ce8717;2016-12-06 15:07:31 -0800;- removed print statement from a unit test
60d8c51e75c56277e1a9ef436ad78eb749a0fcd4;2016-12-06 15:19:42 -0800;- cleaned up intro in readme
c1d4040f7c2b8749410f7207b5f04da62e689538;2016-12-06 16:46:29 -0800;Non-Maximum Suppression example added
0337a821705a5ea8cf70d4593d67a7a6da69d04c;2016-12-06 18:21:51 -0800; Added DetectBlackEllipseApp  fixed bug in ellipse refinement  fixed bug in ellipse visualization
d7c8acd22fb0dc3be220f66d3798f9d6eb0db2dd;2016-12-06 18:36:53 -0800;- contour visualization now allows colors to be specified
a8a5e664f654cbd56ed29caefb71ddea4459a60e;2016-12-07 09:12:21 -0800;- Circle Asymmetric Grid Target   * Fixed issue which was causing clusters not to form by not limiting number of neighbors within X distance
27f052762698d068cf56993e36742c7c7294e3ac;2016-12-07 12:49:31 -0800;- updated version of autocode - tweaked order for HOG visualization
e2d887edde322019a5a2fee6ad07e19835851f63;2016-12-07 17:57:18 -0800;- 0.26 release candidate - Tweaks to ellipse asymetric to improve performance
3a16a409d919e2c03e4fd3dcc515ac1d96d823ee;2016-12-07 18:21:29 -0800;- unit test
97325b5d477ba982b6cce621bb9cbbd4a27cfa93;2016-12-07 18:46:53 -0800;- final 0.26 for real?
833e96405ef643727b6ed2d4ba3d8c20ff716152;2016-12-07 19:49:27 -0800;- minor formatting
60ae0101bf8c589d1d7578356c1cabd27476be33;2016-12-07 20:41:40 -0800;- adding scp instructions for source forge
fcc7ee2028aab5d9764afb498bb6bb15ba84181e;2016-12-07 21:47:53 -0800;- fixed type-o in change
ca7590ffba5b0cdc3eac750da7bbd47345fa3687;2016-12-08 12:45:09 -0800;- Expanded click middle mouse to save image in ImagePanel   * Was a secret new feature in the last release   * Added to ImageZoomPanel   * Opens a dialog letting the user know what just happened with option to be silient
4e7d6a8296d79a77f2779ce7b0e699d23c082e52;2016-12-08 12:52:52 -0800;- changed text a little bit so the user knew what they did to make the dialog pop up
d476822b55e7e16cdadbec6f830d645b56bbb0fa;2016-12-08 13:18:03 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
98a8877a3a0e643d20d9ce72a895346cd32767d8;2016-12-08 13:19:44 -0800;- resovled conflict
3d19faccbc58d88df40c5b427e5dfac74eb4dea8;2016-12-08 13:31:09 -0800;- crap found some code that should not have been commited that was in the stable release...
659a63c92c5f8c1fb67cc0cb202fb631b308058a;2016-12-11 16:46:38 -0800;- renamed visualize module to visualize-swing - added a javafx integration module that doesn't do much yet
d1057e9a9799037e2d37da9d30a672ff24953b1b;2016-12-11 17:06:12 -0800;renamed visualization-javafx to javafx
1bfcc6da848cb31da4f181b56568f8c90cc0fa82;2016-12-11 17:25:59 -0800;clarified error message
f3bff6c99b6389a4cd173ed919af90719e01fe58;2016-12-12 09:49:00 -0800;PinholePtoN_F64 now uses analytic solution to matrix inversion and unrols matrix multiplication
160777bbc95c5fc92c5f82ea85e5b2da1ded68a7;2016-12-12 10:18:03 -0800;- camera distortion models   * Unrolled matrix inverse in pinhole and radtan
89276a4542def6367c9064ac53824d7d90fcf06c;2016-12-12 13:28:36 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
991207c320acd812ec62b06ca745a533fec397f5;2016-12-12 14:51:16 -0800;- added comments to image classification example to better set expectations - more comments to provide a better description
d39b05a54951fd273557f4ca7b059e451fee52a6;2016-12-12 21:59:20 -0800;- initial sketch of direct VO for RGB-D
f240f60c057d11a0fccbaf43fd40278880bad716;2016-12-12 23:13:09 -0800;- updated for changes in ddogleg - updated gradle version to SNAPSHOT
5f5373e780b67e913d575984aaad41787ebdad2d;2016-12-13 21:07:47 -0800;- complete sketch for a single layer of direct RGB depth
648505734e9547ff9e1e0c2999df06570faab6d7;2016-12-14 18:48:11 -0800;- initial sketch of unit test for direct depth
6b62d7b7de9718d68c6e79d59a31d4c3eea9a29b;2016-12-14 22:23:13 -0800;- WIP - found one error in math           - don't know why a offset along x-axis results in a motion along y-axis
77705657e345d8b11742c1626794f106b367248d;2016-12-15 11:14:43 -0800;- first unit test of direct RGB is working
a878ad2a8c8eade2c41f02999acba1aa948f57d1;2016-12-15 20:56:07 -0800;- minor change to allow image pyramids to support all image types lead to a massive refactoring and update of generics throughout the entire code base
5fbd32779b00683db15e7b11afe122a50c0aa76f;2016-12-15 21:59:44 -0800;- Made PyramidDiscreteSampleBlur image generic - Made an interface for ConvolveDown
43cb6b8b91c6c15ac8ec83ec36cdb29e9f8a189a;2016-12-15 23:42:57 -0800;- added convolve standard no border for interleaved images
049e0d19e50783a73185befe351da869308d0800;2016-12-15 23:56:15 -0800;- Made PyramidDiscreteAverage image type generic
b4f777783220ac9658af37b4ea1808840c1ce55d;2016-12-16 09:41:28 -0800;- Created GenerateConvolveImageNoBorder - Generalized convolution unit tests more
ae209ee89335a091b71ba162301bcd85bd1435ef;2016-12-16 09:42:46 -0800;- fixed JDK 7 compilation issue?
72c9f10f36c057751b0420d520eae454ae7c0f22;2016-12-16 09:50:28 -0800;fixed another generics issue that is causing travis to fail
d9b05df9bd3ba9dc1cd510b2cf0d7a6130802db2;2016-12-16 11:38:57 -0800;- Border for convolving interleaved images - renamed kernel I to S
8480c53246e1c684ba7741df0ac237494cc346e2;2016-12-16 12:26:05 -0800;ConvolveWithBorder now includes interleaved images
5542d24c24de99217af12450036e5b60a069dd30;2016-12-16 12:30:24 -0800;Cleaned up change log
482837deadb8be6a468660d74d04829a1ec40393;2016-12-16 17:19:31 -0800;- GConvolveImageOps can partially handle all image types - benchmark for convolution with interleaved images
da39800ccb3c01e74c3ba5230e2c8f1e32424879;2016-12-16 18:27:15 -0800;- normalized naive convolution for interleaved images
4162241b9e35ba0682159f4c12e366db37d12991;2016-12-19 18:11:16 -0800;- interleaved convolve normalized complete
b21a00a7a8836b75097cfed7d8546355bf9ccc88;2016-12-19 18:52:01 -0800;- convert buffered image will adjust the number of bands in the interleaved image - added interleaved support for gaussian blur
986b29b36728c1f852886be9b4152889fff73aea;2016-12-20 13:59:33 -0800;- convolve normalized for interleaved images is working correctly - generalized many of the image filtering stuff
a7a96d03f1198de1f6d7695a6bd49c56aaa473df;2016-12-20 15:56:51 -0800;-direct VO now uses planar images only
73fbbf14eb7262365d2228de11e053130fb0d35b;2016-12-20 17:10:49 -0800;- changed interface of DepthVisualOdometry slightly - flushing out pyramid depth VO more - added createLike() to CameraModel - comments and refactoring
c349e23e8521c67499e282c1b79379c4e74150ba;2016-12-20 18:38:14 -0800;- added interleaved to GConvolveImageOps for normalized convolution
a5c4be1c2925d87f93620a10083405c8f5ce265f;2016-12-20 22:11:09 -0800;- initial sketch of MLS
248b9b52594540dd9829015176744c856bcffac0;2016-12-21 07:41:19 -0800;- interface for point based image deformation - converted MLS back into floats since there is no need for double implementation
69465a4a5de9c0322f308eb826ff40a74b02b85a;2016-12-21 12:50:41 -0800;Merge branch 'direct' into SNAPSHOT
19ad8179f896e03ce4eaf46304ad0184e1b6d7e3;2016-12-21 12:52:14 -0800;- updated change.txt
24f4e9c14f788d40955fab44238453e049d950d1;2016-12-22 11:49:39 -0800;- LensDistortionOps   * New function which lets you re-render an image with an arbitrary camera model - RenderSyntheticCamerModelApp -> demonstration for showing you the affects of re-rendering the camera model - Removed ShowLensDistoriton demonstration since it is now redundant - RemovedLensDistortionApp was updated to use DemonstrationBase - Improvements to StandardAlgControlPanel
0c32309acb5d340755438179278c843667a6846a;2016-12-22 11:51:06 -0800;updated data
f95341662e64e7cc6089e1175ff0c2b63641b651;2016-12-22 19:47:51 -0800;- fixing and writing unit tests
8e8ba24eab369df32b601cc9cc4cbe11d6a57b40;2016-12-22 23:04:08 -0800;- unit tests - removed "RemoveLensDistortion" transformations from LensDistoritonOps
39b1ef0a928b24b49f1eb695d0735ee33041d1ec;2016-12-23 11:39:20 -0800;- unit test - error messages
dfd644bbbf0e8b54a3122e94cd84fe795a697116;2016-12-23 12:58:36 -0800;finished sketch of PyramidDirectColorDepth_to_DepthVisualOdometry
cda0b606bbc15627e1e7caf337b092e7e7690851;2016-12-23 13:26:51 -0800;- fixed compilation error - tweaked api for DepthSparse3D some more to make it easier to use
3c56ebccf52550bd255e9331d12aa1fe94e5dfb7;2016-12-23 13:28:45 -0800;Merge branch 'SNAPSHOT' into deformation
d1895da29295efb2e3283d962eac0fa938fe30f8;2016-12-23 21:16:31 -0800;- created separate gradle function for web javadoc
6bf9f7b68668bbff80b15d3730cad2be464e4597;2016-12-24 10:38:17 -0800;- refactoring and javadoc fixes
cb6ee75692c8ca356f2037687daf151c4d2b2ff8;2016-12-24 11:55:12 -0800;- removed completed items from TODO list
965510d8b429532156cd449981856b34ea186cf3;2016-12-24 11:55:29 -0800;Merge branch 'SNAPSHOT' into deformation
741bf32459aaa59e57c3a5dfaa12213234c150b2;2016-12-27 16:17:16 -0800;broken sketch of deform
193296309e9ad235cbfc849485763f915c0fb368;2016-12-27 20:01:40 -0800;- passing unit tests now
256a180d7f7e65e6b37fac29f3b041336bb3088f;2016-12-28 13:00:09 -0800;- partially working MLS demo
79ab42147684b01eb0a98c42375b8c95c68acc07;2016-12-28 13:45:53 -0800;- fixed most of the major issues.  just needs more refinement now
159f771bf632db5d2288ccac86b83506d828bd1d;2016-12-28 15:16:19 -0800;fixed build
1219ca6a4e7407c856ee20d481563394dc2b3d2c;2016-12-28 16:59:22 -0800;- more improvements to deform image demonstration gui
c04e5e1e383386c943094ca755e1baeebfafa2a1;2016-12-29 12:38:54 -0800;- Added similarity and rigid to distort MLS - planar setTo will adjust the number of bands - fixed EJML upgrade issues
828aff83863a5158f3c9c4668291dfe2fa44540f;2016-12-29 14:30:51 -0800;- fixed scaling issue in MLS - sketched more/improved unit tests related to MLS
5a8d8c01b3756d90841f8656b52ed48b47780533;2016-12-29 18:52:58 -0800;- improved MLS app visualization - minor tweaks to MLS algorithm
9266b8f56e584849ff8a02be39bd19836dbc943e;2016-12-29 19:32:06 -0800;- added another MLS example image
8a4ce40a2f30c0c60e9923bc6ae8418667f85894;2016-12-29 20:02:06 -0800;- Fixed aspect ratio   * Got lost when switching between machines - MLS comments
ec6b9cbffa039005c04b04cd6579e305d4402aed;2016-12-29 21:08:27 -0800;- MLS subtle bug fixed - MLS unit tests improved/written
325970d36bda312782cb3be65e7896e4ada2c1e4;2016-12-29 21:10:05 -0800;Merge branch 'deformation' into SNAPSHOT
f648b4cb82a9b5b48a5f17d6d64b63b95d4b725e;2016-12-29 21:13:31 -0800;- updating data directory
f93ebff81c488a372e978058aea8e24f517b821f;2016-12-29 22:34:13 -0800;- commented out print statements - added to DemonstrationLauncherApp
61452d406389c3c0b45a050a9e7bce159f285030;2016-12-31 10:25:13 -0800;- Added ConvertImageFilter to provide a generic way to convert between input image types - All (existing) unit tests pass for direct VO
63d2b4e930c108f123c7964d2be58fe0a0c396a0;2017-01-03 14:28:42 -0800;- Massive update/refactoring for changes in down stream libraries  * Much better support for F32 data is provided now
ed4aeede6bbac10d572f711fda324bc0cecf4daf;2017-01-03 14:29:50 -0800;updating copyright year
7277a13e10b9dd244e281da64028f59e1e40db6e;2017-01-03 14:47:38 -0800;- Updated kinect app for recent changes
4f8bed8655fa71e3ff94ca9f5fff5b7f110d0ed9;2017-01-03 22:41:09 -0800;- direct VO works on real world data   * Working on improving keyframe trigger
bd592cb27ddd0e54280a7013a385ca756e65dd3f;2017-01-05 16:20:55 -0800;- fixed type-o in calibration target generator
5472302ba5c03aed093e3ae3385475699a952099;2017-01-05 22:06:01 -0800;- updating config files for Android example   * Need to verify that the code still works
9e84c2e3a1a1445e8a7df0814ff0745a354bf50b;2017-01-05 22:50:38 -0800;- App requests camera permissions and seems to handle state transitions correctly - Fixed gradle script and handles conflict
18f9c2056292d5ea04de75068a18f09d7f2e0b7c;2017-01-06 11:04:35 -0800;- WIP for changing how DemonstrationBase handles streaming data   * Going to change it so that it can handle multiple sources - Added a function to ConvertBufferedImage for doing a smart copy/declare
cdc29210ff0621a0a771501b5aa1eafc839c7ac8;2017-01-06 11:35:00 -0800;- fixed a weird issue visual issue that was caused by copying an buffered image twice using different methods.  Probably just messed up the timing
210b35ffd32e27efbc575e59c20005497d591080;2017-01-06 18:28:00 -0800;- refactoring for refactoring in georegression
7ff7f1b1c20f42b1d66ed65e58f1a15465d8865e;2017-01-06 18:37:54 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
0174e0f6ffea7976cc436f97f74dc7c728bc9ef8;2017-01-08 08:30:09 -0800;- updated for changes in EJML
50f0368ef811f36320c51f841cd9f9b0ae3b047d;2017-01-08 10:59:21 -0800;- updated for changes in EJML
1bc97028136fda5affe55822dac78af51b0a3f56;2017-01-08 13:01:57 -0800;- updated for changes in EJML
6c8e5ec3e6b596e444cbdcdbfe20d20ea56fb008;2017-01-08 19:44:19 -0800;- new DemonstrationBase2 is working. - WIP in switching everything over to that
a6a80c5bb77566d9a53f7bdb00fa6f05957780ec;2017-01-08 20:01:59 -0800;- More updated
34ac68b3840ab2a127819907716f9cafc48ccd3a;2017-01-09 10:35:44 -0800;- sketch of reworked VisualizeDepthVisualOdometryApp   * Uses new DemosntrationBase2   * runs but is a little funky - Improved visualization.  Turned on anti-aliasing
72cc0875130b326dd7fe08623d429eb6a2e3ce4f;2017-01-09 11:11:08 -0800;ConvertBitmap will reshape BoofCV images to match the input Bitmap when converting
cdda30709e408a09a3ec322c81b2c035d4154b76;2017-01-12 19:02:49 -0800;- Can run Direct VO in app - WIP in RGB-D Vo App
23c16621f13c4b06595b17601bc25ee8026b0d47;2017-01-14 03:27:06 -0800;- GUI improvements to VisualDepthVisualOdometryApp - Fixed visual odometry path viewer so that the camera behaves in a same fashion when the window is resized
33e63df124911c7eb84787795c32ebc851ef5c38;2017-02-07 12:16:18 -0800;- WIP for direct VO visualization - updated copyright in web javadoc
5d3c89a5decabc5aab10b77cd53243b0747d81c3;2017-02-07 16:30:31 -0800;- updated for changes in EJML
b5f9f7217851a1034f4e7b4a1bd0f0b386cb946a;2017-02-08 08:51:08 -0800;- Multi View   * Split EnumEpiloar into EnumFundamental and EnumEssential to make it clearer   * Updated functions in FactoryMultiViewRobust for change
58c660e7f4bfa1c51c09b5fe8e4206289a125a44;2017-02-10 18:37:01 -0800;- can generate circle grid calibration patterns
3de24273922f486f6caaf3af0e395c1336931134;2017-02-11 14:45:00 -0800;- fixed bug in ConvertBufferedImage where reshape for planar images was done incorrectgly - improved javadoc
a6c4171b2d76a7ddcd6203d80a0d8be309771e72;2017-02-12 11:34:42 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
93151dfb76c654f38defe259ea9cbf6038f21bb1;2017-02-13 20:54:37 -0800;- sketch of ellipse clusters into regular grid
c42a3c2e97fde017945dcba696f5a7e6d46acb25;2017-02-14 08:20:59 -0800;- removed custom idea name for modules - renamed modules so that jar on maven central is unique
925df852ecc43d528f9b0c31ab15844af3905606;2017-02-14 09:44:45 -0800;- tweaks to build - unit tests
de8f5191549a33d6f7a787689e721ae626225197;2017-02-14 09:53:20 -0800;- fixing build error
09fa24487f6ad892b4a4e1d4ef942e247c759bc6;2017-02-14 18:38:59 -0800;- more progress on circle regular grid pattern
ea895741d2cdb42396c62318eb263571297d5f78;2017-02-15 18:04:49 -0800;- more progress on circle regular grid
88b84017b94a89fd49ff2cb275f4e4b9c30ff708;2017-02-15 21:56:57 -0800;- sketch for circle reg grid key points
182fda67a9162f70f5292aa87ba742598480e87e;2017-02-16 15:26:39 -0800;ellipse regular grid unit tests
b2d844250a36906e4eaf10f3c44e4faac9721b8e;2017-02-16 20:22:53 -0800;- last algorithm addition for circle regular grid
2480036f43651f707b9a4717648aa7967efa2a75;2017-02-18 22:07:37 -0800;- visualization for detection of regular grid circle fiducial
5f272bd015b833b6746d56fe76f4c85c26feefc6;2017-02-18 22:07:58 -0800;updating data
f8dd428a2be462bed71485068c9e4d65bfab1506;2017-02-19 08:22:36 -0800;- fixed key point order issue
eaa17d989514645e7f28a0cc7daa0aedb49090e8;2017-02-19 08:34:51 -0800;- fixed location of key points in grid reference frame
9f1f7c4aeb6f0183ebc7bf8a75db31129e71f32e;2017-02-19 14:31:36 -0800;- changed radius to diameter in configuration - fixed unit tests - start of adding regular grid to assisted calibration
539c481b60a6b66353d89680d462af2c915c7d36;2017-02-19 15:13:28 -0800;- assisted calibration for regular grid circle - changed parameter name in assisted calibration
a2e08821909a8efbe901e9d902156e3c0fbebffd;2017-02-20 00:17:07 -0800;- more descriptive error message
839ee227fade7e35f1967db8be5c01fe1d3b7a96;2017-02-20 13:10:39 -0800;- updated autocode for latest refactoring - added accessors to EquirectangularTools
f25c6697bd1902998ef47d7f0e163ffa80f02f2b;2017-02-28 14:05:23 -0800;- todo comment
9c6c6cc8cf94762d76450d97daeedbfc5db49b30;2017-03-02 12:15:56 -0800;- Equirectangular   * Added PinholeRadialToEquirectangular
26f954535e164881f89c41b4171d770e3733bfcb;2017-03-10 06:43:52 -0800;Changed ImagePanel so that child classes can access the mouse listener and turn it off easier
ed5dde884cbd825fde8c1f5fd22bf0728899bac4;2017-03-10 11:21:03 -0800;- center option for ImagePanel - merged two equivalent functions in EquirectangularRotate
ced1b7569a94d847198deab958c0088805b5678b;2017-03-11 16:28:52 -0800;clarifying java doc
0965ff519b030b06c0f662ba92603348fa6211cf;2017-03-11 19:50:06 -0800;fixed centering
ce0873793102c04ce1e64a876bb48e74b6b7afa5;2017-03-15 16:33:28 -0300;Fixing small type errors in the documentation of BoofTesting
a017c7fae50252712468ae2ba5fb78bd698785fe;2017-03-16 19:49:34 -0700;Merge pull request #63 from boechat107/patch-1
d8619cdcb540adf666a66b9fcf440de46243a58c;2017-03-18 15:13:10 -0300;[DOC] Fix the name of methods described in Planar's JavaDoc
75c9507068608009edf046cd576bd4f05c9550b8;2017-03-18 13:21:54 -0700;Merge pull request #64 from boechat107/patch-2
99f8580761e4308ac0107a91c62241657ed44e7f;2017-03-19 21:34:17 -0700;change scaleIntrinsic to be just a pinhole model
0339754a10be554d924300f9238d52793d253473;2017-03-19 22:07:16 -0700;- Fixed ImageInterleaved.setNumBands() NOT correctly setting the stride and growing the data array
8567948d63f5e2f0868a381ec0f86573670ed12c;2017-03-19 22:10:52 -0700;do nothing if the number of bands is the same
523f02231f58c5920ada450517d9e6bee38760d7;2017-03-27 18:58:20 -0700;- ImagePanel   * Has a function for just repainting around the image
aa8ba98c50f3e91b712f5b5673e708aa2cb66a04;2017-03-27 19:16:14 -0700;- fixed previous commit.  Didn't handle every situation
caf12f56798869d63370dc92fb33a6d50b22b164;2017-03-27 19:37:59 -0700;- found another situation that wasn't handled   * large image becomes a small image
a7b88631ccfed4245e42db370bc03fb6eed62bee;2017-03-28 10:11:24 -0700;- Cleaned up ImagePanel so that it can handle concurrency better - Refactored function naming to make them shorter and more explicit about what they do
6ae23406a259edc56f57c73be01084de48a15fb1;2017-03-29 08:34:13 -0700;- added a function in image panel that let's people configure Graphics2D just before it's used
1445dfa17ca670d264b144260659e04d7adb2b83;2017-03-29 08:55:56 -0700;saving the affine transform
a5716e23c0aae07ad3d7551f8880ad96f1b50e7f;2017-03-29 09:42:51 -0700;- made storage type generic since it isn't always the same type as input
beb869557c961516522687c338fb6caf7e75f5b3;2017-04-07 08:40:01 -0700;- removing last traces of XML serialization
81d09caee8752f7d934a6c667066364585ac9b2c;2017-04-07 08:40:19 -0700;updating data directory
7e4b720fe4567f38aec563fdd6649c64ed568035;2017-04-11 17:44:59 -0700;- Fixed histogram in ImageStatistics   * For unsigned data types minimum value was being ignored   * Thanks André Ambrósio Boechat for reporting the problem
87cbf446289f0ccc14b5a92bf678f121f2274876;2017-04-14 12:44:04 -0700;- made a comment about a todo in processing
9e8d7a946e2ddf4dda26cf2b323639f7c39ba225;2017-04-15 21:42:47 -0700;- Updated README.md for change's in GitHub's parser
6ff03ac310516b6b68742b46344b57c720bb77a6;2017-04-24 22:21:33 -0700;- added circle regular grid to fiducial factory
dfcdbe9d108edfbe5330103a21e8be5a7bf2b26f;2017-04-24 22:21:39 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
091859f12ca0e8e92576f7f419868b2a78b31207;2017-04-29 19:47:42 -0400;added source and output panel. source code display panel is completed.
1599da5be17930ef6dcaf308c280a0ec0f921568;2017-04-29 19:55:30 -0400;refactored getPath and displaySource to be more abstracted
e22c5b1e443dcf6661b669a81d2f0f806c5fe31c;2017-04-29 23:34:58 -0400;added toggleable output to gui option. seems to be working as expected, test cases coming soon!
ad47e38e4c3bf358ac02ea7c442a19ccbaaa8cbe;2017-04-30 02:20:26 -0400;refactored getSourcePath() to take string args for better testing. added a github link submenu. added a TestUtilIO and implemented tests for the previously mentioned methods. only tested on windows 8.1
c81efe79a570edd73396b4ecc93c28ee81aa1f63;2017-04-30 09:07:46 -0700;- added a note
067885f44f4dfdbdc3ebde91f9fee7da51cd6fc6;2017-04-30 15:52:50 -0400;changed the gui so each tab is associated with a process. this will contain a source and output textarea. the output will only display if the checkbox is selected. each process has its own output. the tab is tied to the process lifecycle, so it will open and close as the process is started and killed
78f68eeb73540c9a60ea1209b07b50556f75bdc2;2017-04-30 16:35:15 -0400;changed textoutputstream to append to textarea so it doesnt crash with large output. tested on examples and demonstrations
15a13d3039811ff03b580c258669f4a2511cb7bd;2017-04-30 14:41:19 -0700;Merge pull request #68 from jmankhan/SNAPSHOT
b7402949499b2afcca4211d90b99bf1c7c6754da;2017-04-30 14:53:30 -0700;- application launcher   * Changed behavior of scroll bars   * Opens to a specific tag on github
f7ab2eff445b32a3bf4e4c98308c44f2ad748000;2017-04-30 16:57:44 -0700;- UtilIO  * Added function to read a file into a string  * Parser which determines the start of interesting information inside a source file - ApplicationLauncherApp  * Scrolls to the start of interest text.  Text appears on top of the screen now  * Uses a fixed width font
10b0ed4f77ca0f9725ed96bc05b90f0329063976;2017-04-30 17:15:27 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
24c4be489f3e73be930fa4d49fb3ecfae0a30bbe;2017-04-30 18:40:20 -0700;- Made changes to streams in JavaRuntimeLauncher thread safe - Added github button - Output is always redirected to GUI - Stderr is redirected to GUI - Changed layout to improve appearance
de9c433edd2fdbd5cb5f48d6a99ee272e5551a04;2017-05-01 06:44:40 -0700;- launcher kills all processes when closed -
b6bb700b35c54b41082801a506811ddf5cdcaa38;2017-05-03 20:20:17 -0700;- clarifying what type of observations are needed
30af63cf180bbf6f6a1f4e2a54d6881eddd18376;2017-05-06 00:00:16 -0400;added search feature
0389d228c7fbc68b75320e64b72b8b947d7e21e7;2017-05-06 00:07:14 -0400;cleaned up imports
d0fa5c2674478c87d6d0138d62b487891b12ebbb;2017-05-06 00:22:42 -0400;merged cleanup and search feature
fa2875de9c87bb70b14b6db394db29546cbd3285;2017-05-03 20:20:17 -0700;fix for panel repaint when reprocessing
21a4f0d071e515794a04848644dcdc5ed2be4706;2017-05-06 16:34:40 +0200;Merge remote-tracking branch 'origin/SNAPSHOT' into SNAPSHOT
6e8e68a59e0ff253c86e365281106ca815710eac;2017-05-06 16:34:40 +0200;fix for panel repaint when reprocessing
303833933ee25ecacd57ec11ecd6a592164cf591;2017-05-06 16:36:22 +0200;Merge remote-tracking branch 'origin/SNAPSHOT' into SNAPSHOT
afbb6b1bf360092b3ee6e3ed5d0d2f9710d0e2da;2017-05-06 14:13:40 -0400;arrow keys to navigate search box. enter to open app.
a0b58a35dbd02ac6399bdacc0d3da2036e239e5c;2017-05-08 08:37:26 -0700;Merge pull request #70 from thhart/SNAPSHOT
42f0b400c2872fac25feef998fe502d3210ee782;2017-05-09 18:51:27 -0700;- ConvertNV21   * Speed up conversion from NV21 to RGB by about 1.9x by converting if statements into bitwise operations
c6d9c2b94eeda61e854b3c7535101ee2ac9e11d8;2017-05-09 19:54:54 -0700;- updated YV12 code to include the faster code - minor tweak to operation that is largely asthetic
3d087d2119e4c8490c4d114719b7a6a7fbf514a3;2017-05-09 20:47:55 -0700;- multi to planar refactoring
83fade90995e55824d5a67e7a514211965864dbc;2017-05-11 08:20:43 -0700;- Split FFMPEG and JavaCV into seperate dependencies - You can now specify which native architectures you wish to support
7388120e2377815ca2d91ca214e0a197e961a572;2017-05-11 08:44:04 -0700;- BatchDownSizeImage and BatchRemoveLensDistortion now adjust the size of the file number based on max number of images
f3dd119405d5a2a34e6469ee1b6c6083f67dfd4f;2017-05-11 09:10:40 -0700;- unit test for numDigits - noticed a potential bug in UtilImageIO and fixed it - attempted to reduce the number of javadoc errors
63e5628e8987190d581e4d196c8e3d51c1b0c63a;2017-05-11 10:45:25 -0700;- fixed a few unit tests
34f35cec90e427326454aa4e4f0a1e074c8307a9;2017-05-11 13:20:34 -0700;- start of a workaround to get code running in Java 9
4546f0df92c058d9e16f905ec3bdf1926f8625c2;2017-05-22 13:33:51 -0400;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
3cea1900ec26d39f3fa5de351d2285b7e6d017fb;2017-05-23 14:55:13 +0900;Change some variables' names to match the function name.
b3f2a7000842554a363b0309bb95348e16a09c37;2017-05-23 19:23:06 -0700;Merge pull request #74 from xzvfinet/SNAPSHOT
d6692f7e2e31d9f6d56edc2964cfc3a764cb263b;2017-05-23 20:20:29 -0700;- made equirectangular javadoc more idiot proof
1fcf0e4685c58919974df5d146677cda27e7922e;2017-05-23 23:14:10 -0700;- serialization issues - Fixed lat-lon in 64 bit code and made sure all unit tests pass again
616826935df38c5a322a9af2c42611911efd81f2;2017-05-24 04:39:52 -0700;Merge remote-tracking branch 'jmankhan/SNAPSHOT' into search
36e12fcd3e1eacb91f1c390f752495967ca33a1b;2017-05-24 04:57:37 -0700;- reverted a couple of bad changes in a previous merge - Added the words "search" to the search bar - scrolls to the first item selected
206f8e481b1ef5a710fd44f9e7c7ba2e63040116;2017-05-24 04:58:10 -0700;Merge branch 'search' into SNAPSHOT
32e29a3a478b831dcc81c763a0f2e9fc9d57fc64;2017-05-24 05:38:46 -0700;- fixed unit test
d03733163eb16febdba71769b2f8b34053070e62;2017-05-24 09:27:24 -0700;- application mirrors error to stdout for easier debugging - added code to check resource for source code
89d2f0167e048d29c10937bca7f151ad382088ba;2017-05-24 19:04:58 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
55ad1b3897bd4e62e6a8f1e53f9f26a114c56d0c;2017-05-24 21:01:04 -0700;- one last change to equi tools.  lat lon was correct the first time.  Created a data structure just for lat lon to reduce confusion
6cb94f12c99e731408565b0a686863e7ba2f46bf;2017-05-24 21:18:03 -0700;fixed type-o
cf4d911bf98b3a4f7c5974de0d81522ce6afc2c1;2017-05-24 22:36:31 -0700;- examples stay open and demonstrations close when the process dies
2587572afa860d8260873580e9f1a556ba3fead7;2017-05-24 22:45:05 -0700;more sensible width of application launcher
840a2db78a9dd94f47dd048f621bfe2fe16f8396;2017-05-24 22:56:22 -0700;kill all works as advertised now
72551a459275a3af270110a56c73c37a0adfabee;2017-05-25 09:44:13 -0700;- improved equirectangular image graphic
cc92819629ff7c56e5891db5ad8ea4d49177cd60;2017-05-25 09:55:49 -0700;- type-o
cbdf24a9a4871daae5d7aa164d8412e59a501d14;2017-05-25 10:59:04 -0700;- fixed a windows file reading issue - updated CylinderToEquirectangular unit test
da18c69e4fe8bd5c7ffdf548932059fc45d9e389;2017-05-28 18:30:57 -0400;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
fc803db8b765010bfb7a982eec096cc3892b69da;2017-06-18 21:05:59 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
12587dfe4b547b2dedd849f17b5b67e87a8474f7;2017-07-13 08:08:21 -0700;- fixed unit tests  * autocode now automatically adds tests  * extract from bufferedimage doesn't mangle stuff any more
fa7fb9bc563ba89e56351301bfe63bcdd722bb4a;2017-07-13 08:11:32 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
247f5a70090abf8816fd3dced052c72593f61138;2017-07-13 09:23:52 -0700;converted a couple more BufferedImage convert functions to be JDK 9 compatible
ecdded98f6858010e9daf3d1d3d3c1ce172ff535;2017-07-13 12:58:11 -0700;converted a couple more BufferedImage convert functions to be JDK 9 compatible
a53bb28e741c59b6fa1f4713d5d140096eea4318;2017-07-13 20:19:15 -0700;- most references to byte raster have been removed
5ad665ad50e49cddc4ea364ea749d53a96932b32;2017-07-14 07:03:51 -0700;removing more references to internal API
5e42acc8711c22b186cdb09925398583355c0d79;2017-07-16 22:37:14 -0400;added an indicator for dead processes
53648eff758db73d1f270660e429f75c697f88c4;2017-07-18 08:26:09 -0700;Merge branch 'gui' of https://github.com/jmankhan/BoofCV into jmankhan-gui
17012b955b091d1240bd4e801b465d664ef1ce85;2017-07-18 08:58:46 -0700;- fixed select coloration being messed up for application launcher - removed icon because it didn't look good
a3b026f5e76ca84d576b16fe90f58d3daa305d54;2017-07-18 09:01:43 -0700;updated todo list
80e46f0dff8efa5ddf74795c4c9181154038aa85;2017-07-19 06:09:26 -0700;- removed references to inner java classes from convertbuffered
f1475aedd859b4972f571cd3bb2b83b4c2e32a9c;2017-07-19 06:24:06 -0700;- updated TODO comments
b692435f7d011a1e688386dc521c06718e2488db;2017-07-20 10:33:30 -0700;hunted down last reference to internal sun raster api. Compiled in Java 9
66ba979404b5369d476aa11c3b62e91b08858e8a;2017-07-20 10:46:14 -0700;- cleaned up change.txt and release_check_list.txt
295db2a742e3b0cebaf4aa4a4afbf3f9ab3f38cc;2017-07-20 14:45:22 -0700;- Fixed ConvertBuffer issue for a more obscure image type - Updated unit tests to catch problem
96bca65026b2d473b415cc20f488cb5cc2137f59;2017-07-20 18:54:57 -0700;- color surf checks number of input bands
293d51352a96a1760c80224ded5e4b4f610c8e20;2017-07-20 19:08:14 -0700;- ImageMultiBand added setNumberOfBands() - SURF Color sanity checks the number of bands
2d34da898f610121e71b079f17e978d9308abe52;2017-07-20 19:13:47 -0700;fixed test so that if it isn't a color descriptor it doesn't fail
e06c8a47a73f387346584fa50de01b8391de99d0;2017-07-21 08:07:35 -0700;added a new totally generic average convert function
b7b34725465cbcf85c014d6a36d63f4d8d18f9a6;2017-07-21 08:16:14 -0700;added better error messages
3e2126bead8b15427026827c3b0e53ceaf2b0e2f;2017-07-21 08:19:08 -0700;- more informative error message
94c5fde734ce276f44a2ff85eab1d23572e7de99;2017-07-21 12:42:02 -0700;- updated gradle version - experimental changes to speed up gradle compile
85041aa3e887a24e69ddc67b717d59b7a9e2c2a1;2017-07-21 14:03:22 -0700;- external models that need to be downloaded can now be found on http://boofcv.org
7108b4f623c02ef681525eb32557533b0792fe3f;2017-07-21 19:07:37 -0700;- Custom BufferedImage's are handled correctly now - Assisted Calibration application now repaints the video feed correctly
7f54e41978b56968c02f744264015cdd42340727;2017-07-22 09:10:50 -0700;- fixed windows file issues. All tests work in windows that work in linux
265a51672d92ba2e04f4de63a393e0bc808c4c77;2017-07-22 23:27:27 -0700;- javadoc 8u121 hack - other improvements
06c9b2ebfb51f1cbbe7cbce64e52825a284e7909;2017-08-13 07:54:10 -0700;- updated for changes in EJML
65394ba047575e43e15e2deaf26dbc30e0550a3d;2017-08-13 10:07:03 -0700;- fixed unit test
34ab62698c8356cc765157ea7609e82fe22bae19;2017-08-13 22:24:10 -0700;Revert "- updated for changes in EJML"
8e648275d64d214a5cbca9d0a082e0a742e26f32;2017-08-13 23:35:32 -0700;- Changed version to 0.27 - Starting final testing - Changed dependencies to stable versions
5de1363fef363a8b65fc4ee1c8c3be176c1a24c7;2017-08-14 12:18:32 -0700;Updated example so that it compiles and verified that it works still.
91216f6a736e190ee97998ed03536c5c9d99b221;2017-08-14 21:33:29 -0700;- fixed file regex for windows - moved functions to UtilIO
e1e4685958b31efdecefbed57f946b17561dcc5a;2017-08-14 21:42:48 -0700;- file path regrex fix
c53c1b4df296416af48b5b0e96114e5d8c6ea171;2017-08-14 22:03:04 -0700;- Decided that having the regex in the file name was excessively difficiult to get working in Linux and Windows. - Removed the function. Updated applications
8818d74509d550849b30c3144ee8e5e37c0cd07d;2017-08-15 11:15:46 -0700;- gradle will install source jars - provided a mechanism to disable save image on moues click from ImageZoomPanel
56ae5d5e8eaaf9f8d513d07f72f57affab7672e8;2017-08-15 19:42:01 -0700;- DemonstrationBase2 only calls handleInputChange() when the input source changes   * Before it would be called when an image was reprocessed - DetectBlackEllipse and DetectBlackPolygon applications   * Fixed scale of scroll region   * Handle changes in input image size better   * Shape a common base   * zoom using mouse wheel
3b51cf151504017fe2ce70f04b051cdfa46c3b74;2017-08-15 19:42:38 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
d0c4956d757790534570b94aa668320de19ac665;2017-08-15 20:50:00 -0700;- Fixed centering in ImagePanel when scaling is off - Provided a hint in VisualizeHogDescriptorApp what you should do
5bd9b334ccd4b1ba36cb4ca5fdea3f18e135f0c7;2017-08-15 21:24:01 -0700;- tweaked detect calibration patterns apps so that they don't show scroll bars when first loaded - ImageZoomPanel   * setScale() doesn't change scale unless it has actually changed
45fd5329df14f908b4f9fdd817a6b07d7a69e27f;2017-08-15 23:14:28 -0700;- fixed pinhole app camera view from being too small
0abd3acafeb8e777d82e63f586a3ebb0b8ae3879;2017-08-15 23:37:32 -0700;- Demonstrations App   * Combined de-noise and enhance - Fixed update in ShapeFitContourApp
85e24a1886041f9f8b9213db6dac46b46a96da0e;2017-08-16 09:30:30 -0700;- updated documentation
e202346065ca782b5bc5404532a4ef84262ff26b;2017-08-16 09:35:35 -0700;fixed openkinect build
2c66751cb978b52156220505768f967cdc04d553;2017-08-16 09:47:43 -0700;- updated readme
bae51d8cdfd79dff03e0841085418e2e1973e1f4;2017-08-16 10:04:36 -0700;- removed unnecissary ant script - removed BoofCV appending to library jars - put today's date in change.txt
20fa5f7bc4db836b39caa908c16b5ff6e008d5d0;2017-08-16 10:08:33 -0700;Merge branch 'SNAPSHOT'
7b41fc9cc0568f31e0170fd93b00e17d1c3c6559;2017-08-16 10:12:32 -0700;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
93130bcdd758fed3f721021b07651ed2a23d8967;2017-08-16 12:53:34 -0700;- incremented SNAPSHOT version
36689a45afca57020a1041a7588f7aa722fd98b4;2017-08-16 13:45:33 -0700;- attempt to make black shape demonstrations more stable with large images
c83cb092fc3032f67cc68411368dc30b0769909f;2017-08-16 17:31:42 -0700;- noted how to upload javadoc jars to Sonatype
a6f69969315c112399f4a45b550439c961fcc543;2017-08-16 18:03:55 -0700;- upgraded gradle - discovered that parallel build is incompatible with uploadArchives
68e5094e7fe5073a7a9e2b6923c058572160c592;2017-08-17 09:47:31 -0700;- release documentation - fixed problem in readme
3e76dca0d02901ea97cfef41c953c3f0135a0683;2017-08-17 09:48:55 -0700;trying to fix table
90cb2e7f857d06683a40b0012dac999b8b2a987e;2017-08-17 21:52:19 -0700;fixed binary to bufferedimage for byte buffered images that have an alpha channel
ba74a5607a510f4d19c2a1431162e15969b6fe21;2017-08-18 08:39:22 -0700;- CommonDetectCalibrationApp  * Large images are now rescaled to fit in the window
a322599ab05230e7ef37a29cfae4082648095419;2017-08-18 09:05:49 -0700;- Added a file chooser which will remember the last directory opened - improved calibration detector scaling when a new image is opened
b6b6356c8bb136c4205b32a571f90f638eabe101;2017-08-18 09:14:18 -0700;- missed this in the last commit
2f6e93c68c1b9fbd6d8736f6c43d962002a5dce5;2017-08-18 12:36:55 -0700;- WIP for redesign of black polygon fit - removed fit to edge for black polygon
4b0139ea2622d561047e36ca1c57a318a8cecf7f;2017-08-18 12:37:26 -0700;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
47b9ecf15b55952cf1ada9e276c6bd53c04a0e87;2017-08-18 12:37:35 -0700;Merge branch 'SNAPSHOT' into qrcode
884e506734f0f6dc37e743d22b423c117602dd8d;2017-08-18 12:38:18 -0700;- missed this in the last commit
8ab106b736a76d4407549b07e22db65e81710041;2017-08-18 13:33:39 -0700;- changed class name to make looking up chessboard classes easier
e61a26f1317d44549385b714daba718dd772231e;2017-08-18 16:23:10 -0700;- Calibration Target Generator   * Fixed bug in asymmetric circle target where it was shifted on the page
e5ad96c9a79d676c38cbabe0d63d20ed1ca10ea6;2017-08-18 17:48:11 -0700;- changed for loops to use integers. Was running into floating point issues in the PS
532a427eb1ed8b85c6f0afce9bc9339df49ea892;2017-08-18 18:23:24 -0700;- DetectPolygonFromContour   * Fix a bug where labeled image was not being resized if the height of input image changed - Fixed for realz asymmetric circle target generator
16f6b3db23794bafa3a0c8ff01aa6f44222f7e0a;2017-08-19 08:58:29 -0700;- Added the start of a framework for overriding functions in BoofCV
11f34a2c106c788b144787474398fb95dc249d40;2017-08-19 10:24:51 -0700;- Implemented RefinePolygonToContour
c7ef53bf521cdf1e46e3f17bc0cd85ba7b28fc59;2017-08-19 10:33:43 -0700;merge
30c3a9d189791252c6ab2ca67fd8016b8640fc56;2017-08-19 10:35:44 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
858682f83abeb952c5d3646b43a09b87d814e319;2017-08-19 10:54:18 -0700;fixed chessboard detector getting messed up by changing how flip was done
949c93af6eafb2ccb7b88df144e3556882c2b77c;2017-08-19 12:00:55 -0700;- combined two refine functions into one
7a2d7a249cbf607711f1018299a608fb5fc0b0de;2017-08-19 15:07:49 -0700;- unit tests and small improvements
4ca2b99fd5a996f9013c0e58dfe9cef43ad4bbfb;2017-08-19 16:40:44 -0700;- Chessboard's adjustBeforeOptimize  * Wrote unit tests  * fixed algorithm so that it handle's corner cases correctly
b7105a9b3f9b7ed6329bcd3d1f6f8d4d13b2ae46;2017-08-20 07:09:27 -0700;fixed a unit test
9700147cea5c7a22fc337505370d5062be8f2b40;2017-08-20 09:14:52 -0700;- changed behavior of EdgeIntensityPolygon to better handle very small shapes - CommonDetectCalibrationApp is now derived from DemonstrationBase2 - DemonstrationBase2 uses the new smart open file - polygon detector allows for configuration of refinement again
8397c852da2099bb0294ddc809ba04173d3ab483;2017-08-20 10:13:35 -0700;- Added hooks for overriding FactoryFeatureExtraction
23c67c6b8f5cec7cb9150562a103e5878802cbe3;2017-08-20 11:33:20 -0700;- Refactoring of a few config files - added override to extract
1de65d6f48cb46d9248206daad47b93251fac07e;2017-08-20 12:13:35 -0700;changed tangentEdgeIntensity = 2.5;
de5f54479870738708858db7e314aeb8f0d06179;2017-08-20 12:19:46 -0700;- removed unused class
94eedfea3b6625c7928bf953d4aa4a5d9538a1af;2017-08-20 14:01:47 -0700;- fit to polygon removes thresholding bias on the shape
7b94f1864b2441ee6488e778a643553a19c5c09f;2017-08-20 14:03:03 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
68fb2d706f0971f64acbba536adbd787a8d56682;2017-08-20 16:09:28 -0700;- testing out new adjustment algorithm that decouples the lines
d44fe355d0b01b26df8f6419758f095ee5895cdd;2017-08-20 16:58:47 -0700;- split RefinePolygonToContour into two classes - Made bias removal configurable
f149ae9fb890944d4499474fe3a76f832cd08bb9;2017-08-20 19:14:13 -0700;- turned refine with contour to false - fixed minimum value on polygon demonstration spinners
6facee945febae8aefdfab0facdeaf45545d0998;2017-08-21 15:50:28 -0700;- changed tuning perameter in ConfigSplitMergeLineFit - Commented out print statement in QuadPoseEstimator
fc6bebea0407bcde857a641e452e1b1192290939;2017-08-21 16:24:23 -0700;  * Added ExamplePointDeformKeyPoints
abcbf95ad32a92c815cab4485a5d01f4fcc33fd5;2017-08-22 18:02:04 -0700;- Added time to process a frame to detect shape demonstrations
2f2cb396204da51138ccb0a868884efb4110e156;2017-08-22 18:50:17 -0700;- refine edge parameter is now used in black polygon detector - fixed gui issue too
5f23cf8eda12116335150439ac56cc3691f68c33;2017-08-22 21:17:29 -0700;- turned refine with contour to false - fixed minimum value on polygon demonstration spinners
b2285a05b00bf1a822ec976a8daf60c0298909b0;2017-08-22 21:45:03 -0700;- updated for changes in EJML
30b45170af4cc2ddd85590a142d10a103690a969;2017-08-22 22:45:50 -0700;- added simulated fisheye
9b557b5b45e1493efa1e58d9500b6838a58299ab;2017-08-23 21:48:45 -0700;WIP fisheye unit test for detectors
4c1768d0c5188e26de51ee8d8e95dc6a9b20bb93;2017-08-24 08:22:15 -0700;- fixed issue in new simulation - added new test using simulation for pinhole camera - Updated Circle Asymmetric Grid
4d6b9a00a9b2fc1d3d703a1b3dd7aed9ab2d7f39;2017-08-24 09:32:41 -0700;- All calibration target types support the new simulation - All but chessboard fail - Projected truth location appears to not match rendered image perfectly...
872d2de7465f6527610f903411d43b018cf00c49;2017-08-24 09:58:10 -0700;- increased amount of radial distortion - fixed render truth - Allows binary grid to have a partial match
9103c8f9f1bbe7a6f9000415f7119d89189b2660;2017-08-24 11:00:41 -0700;Removed old style calibration detector unit tests
d15c1c9ed3d3d7f44f660a76ffdc1487f6c76b03;2017-08-24 11:26:12 -0700;- calibration detector demonstration will once again print the coordinate clicked - Fixed an issue with asymmetric circular grid detector  * Was picking the initial corner point poorly
c96b08b924da65df8b2b5a7c1637e1ff74540329;2017-08-24 11:27:46 -0700;commented out visualization of failed cases
6ff947404875c4db825697fe4693743c173749dd;2017-08-24 16:59:53 -0700;- Gradle   * fixed gradle not copying over doc-files - Simplified alljavadoc code
9f0e4e6a5006378d6c024004637d89cc8141e3f1;2017-08-24 17:20:43 -0700;- fixing javadoc
f1d2d9bfe9dd686b51d053e86fd979af950d37fe;2017-08-25 09:42:03 -0700;minor tweaks
e690f92226f2f11b0e999b6ae7c61cbe5150ee41;2017-08-25 15:43:59 -0700;- Simplified RenderSimulatedFisheye by having it use a single 3D polygon instead of 2 triangles
3841410ac90df16e62e8e3ff100680765e876bfb;2017-08-26 15:37:18 -0700;- refactoring of calibration to plug omni camera model
2940b653425e11cd624404ef1d8498659e462a77;2017-08-26 16:28:13 -0700;WIP
5981fec8efefaed928b28a8423557a1995601f4d;2017-08-26 18:42:36 -0700;- made calibration tests more generic
0c62a1929f381a3ea8b491c3f0821026667787b7;2017-08-27 12:08:00 -0700;- Fisheye calibration is fully flushed out, except that it lacks an analytic jacobian - Improved calibration unit tests - fisheye calibration example code   * untested
03f3cd7370921d67bbf61144df6094d867dd6c55;2017-08-27 12:08:49 -0700;turned off visualize in unit test
87207040d5e7ee56a9295c0ccdf2b91ca34a8183;2017-08-27 12:50:30 -0700;- verfied that fisheye calibration works on real world data
da36a880207568a68c69a6d8ef1eec7ed7185e20;2017-08-27 12:53:55 -0700;Merge branch 'fisheye' into SNAPSHOT
cb9836056aa66e27138284936fe85afc41c89bd4;2017-08-27 16:16:19 -0700;fixed/wrote unit tests
2a8ed06f88c206c9880bb8ae1b78a297d5cf3a4b;2017-08-27 20:23:52 -0700;- changed directory structure to gradle standard
a9a732222fe13028c5947dec23f941706ae23716;2017-08-27 21:08:08 -0700;- commenting out OSGI since it was breaking the build. - Not sure why it decided to stop working...
e093773d0deec6ce30931fa7afa56e3050f513d3;2017-08-27 21:28:50 -0700;- added unit test for applications
f2731a13430c3bf7c896aaa98a6550f24f5dd0ba;2017-08-28 09:40:01 -0700;Start of pdf fiducial document creator
3ad722b28a8be95b01e025a7ea96df3047942720;2017-08-28 10:21:05 -0700;- created simulation module so that the new simulator can be used in other modules
4a6375aa527086be07c8754273a612ab80f202ef;2017-08-28 12:11:35 -0700;- unit tests and javadoc
df6816d417461c3614cb99820a52a7b23dfda4b8;2017-08-28 13:14:06 -0700;- fully functional PDF generator of square binary fiducials
bf75ad51ad5213038b26fc4edc730a4139e94972;2017-08-28 16:44:03 -0700;- fully functional PDF generator of square image fiducials
5ad03bb1a861d6ac12bdc2f303b8439a60bf4f97;2017-08-29 07:05:29 -0700;- square grid fisheye detector is working due to a bunch of changes - false negative rate has increased in regression a little bit due to small aligned square getting attached to the regular grid.
6e5718cd0b53c7b900d1fcf959adb6a97db8ce7c;2017-08-29 08:11:17 -0700;PDF calibration target generator
6a60300cda8ef2ab1fa713a0fcb64305207ead56;2017-08-29 08:17:46 -0700;Merge branch 'SNAPSHOT' into pdfbox
ee6b9b84b0c3b566163b2d623015792a29dd8a88;2017-08-29 09:16:54 -0700;added tests for fiducial generator application * image unit test is failing for some really strange reason   Contour refuses to detect two of the squares!
148bb2bedaa1c2e9068cc6dd5c466785f1834cea;2017-08-29 09:43:53 -0700;I'm an idiot. Fixed
6c5db200b86d625e6b12669f3a93618f22f8e131;2017-08-29 09:47:49 -0700;- Removed postscript based code
9e460dd4e062a221050294efb229a9614748d7a2;2017-08-29 11:19:28 -0700;- adjusted unit tests so that square grid binary calibration target can pass fisheye test - tweaked its algorithm too. Doesnt' require perfect match for a target to be matched
0534b42b0fb15ec8e41a861846c0865a22e58fc9;2017-08-30 15:02:50 -0700;- made ANDROID_HOME perform a simple search to make it easier to use
c2e00678ddf0727c4a1061ef95f4019cbba8ccb7;2017-08-30 15:08:20 -0700;fix for last commit
aea03b5a470c79c529d0434d412473f81aecf74c;2017-08-30 15:10:24 -0700;perhaps I should take a nap
a4adf43a98fdcc367f3438bf37dd312156fa9f73;2017-08-30 18:36:07 -0700;TrackerObjectQuadPanel will now scale the input image if it's too large
006b5b4db7396b1e644d89ac1b14c9deddf391e6;2017-08-30 19:02:15 -0700;changed travis from oracle to open jdk
936b34e6d8f5968ff5fdce003dd09efca76d3a9a;2017-08-30 19:11:30 -0700;- downgraded gradle in hopes of fixing a travis issue
023aff7a2ccc988daef8675f64281004c4437366;2017-08-30 21:58:18 -0700;- FiducialDetectors   * Provide access to detected points in PNP detector. Thought this was done a while ago... - Fixed compiler errors.
40c767c5a85fb0aa942e371bbe55b4149b46ee60;2017-08-31 07:50:07 -0700;- commenting out jdk7 because it's broken on travis now
4e6ba0bd34f49fd2818884f1bd3e73c68f34dbeb;2017-08-31 13:05:05 -0700;- FfmpegVideoImageSequence gracefully handles a bad file now - calibration ellipse regular grid now works with fisheye  * needs to be tested more - ellipse asymmetric is now broken and will require a bit of work to get it running in fisheye
2f911921112aea2acf42a6f974f594a6f29da877;2017-08-31 16:22:52 -0700;- calibration circle cluster now removes single stay connections
ed5d4e1f9804b9d54a32fff8f2c664333a4f917a;2017-08-31 16:51:04 -0700;- added ability to show cursor position in the GUI instead of the stdout
15a1307060b9f5936c89763cb452635087443f31;2017-08-31 17:15:54 -0700;- square grid cluster now removes single edges too in an effort to reduce noise
edc4e37e90df965a0713e78067c7b0b955c2fa72;2017-08-31 17:32:21 -0700;- fixed commented out code in examples
72b02f701c726b8cd12a1e7cee588d00c3d60517;2017-08-31 18:30:12 -0700;- crap... realized asymmetric circle was poorly designed... - start of process of turning it into hexagonal circle
ab5efa80327fcbc8b1175ab29b19e773e32b3b9e;2017-09-01 08:50:56 -0700;WIP in fixing asymmetric grid
ced778a1ef6e0571cc1de847a6896ffc4398b41d;2017-09-01 18:15:02 -0700;- refactored thresholding names - added block mean thresholding - sketch for contour interest point detector loop
581e3d564aa4a6d329d00ae4810c014705286235;2017-09-01 18:18:06 -0700;- switched min-max over to common base
812b62f55b07e8e2db400f181e1ef3396faeb672;2017-09-01 18:18:55 -0700;undo accidential commit
2a6ce3af11c61c2ad0133d93752e3917db2cb067;2017-09-01 20:44:30 -0700;- can adjust min spread for min-max threshold in GUI now
0bd76ff9fca3d222972db0de480e6dabfcd9dcc5;2017-09-01 20:51:23 -0700;simplified more threshold block class names
0bdfcc3830f30b57cff6a2a1baec9681ff9fd8ab;2017-09-01 22:07:26 -0700;- added block otsu
c465a96cc227a426cf2ae6dc42996bf0c41a45f5;2017-09-01 22:09:46 -0700;adding function for block otsu
011e6fdb1fc9340c4b3e5599c304438d8547d440;2017-09-01 22:23:58 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
acab824b5b83f75f944c024a7e9fa2b05156bb6d;2017-09-01 22:40:21 -0700;comments
3054d14061cd8eb476ee6b9c576643471730bfc0;2017-09-02 06:57:28 -0700;- Added ConfigMinimumSize  * Integrated into black polygon detector
41386e7c8cda223b78b6bf899451d1ba48212607;2017-09-05 08:12:52 -0700;- RemovePerspectiveDistortion   * Can now just generate a transform and not render a whole image - DetectPolygonBinaryGrayRefine   * Notes if there's an internal contour or not - QrCodeFinderPatternDetector   * More flushed out as a sketch
2024de7c69e8396d56c6e90f74cf12c3b99171e9;2017-09-05 08:19:41 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
47f79b542052aa2df5af93768403de1734c3dedd;2017-09-05 09:31:08 -0700;- removing code which forced all polygons to be clockwise
3eded2d29d2467bd63a4fa1aa2f9dea9d9983f94;2017-09-05 10:07:28 -0700;- WIP QR Code
19ba73d76c36de08733e9f07c5d4ebb0967d150c;2017-09-05 21:22:26 -0700;Abstracted out code for creating a graph from a set of square polygons that are aligned in a regular grid
882e786d1f09bf6dfec490684bf874890ac8d0b7;2017-09-05 22:30:17 -0700;- Start of unit tests for QR code
0862cc1f0a0be02bbd8c57109d2b9c8fa10ee4ed;2017-09-06 10:06:21 -0700;- qr code position pattern detector + visualization
a136d8b0efbe16ba1a694b701b749cedd0d963df;2017-09-06 10:06:45 -0700;- removing print statement
5e1c3f8b7868978cc0424094c12768f04797dd17;2017-09-06 17:43:24 -0700;- removed ability to allow convex shapes in qr code demo app
8c0c3080eafe9aa7956715d0880c1433eeadf0f6;2017-09-06 17:47:10 -0700;fixed bug with remove perspective distoriton
c83ce42b4977d957f6890367a7c84363ec52217f;2017-09-06 18:51:03 -0700;- fixed unit tests - turned off visualization in unit test
6a55da9fbb69924109ce1c63a3dc753970c5d8bb;2017-09-06 18:54:06 -0700;- fixed create calibration target unit test  * still fails, but not horribly
e431f274e8e4779b79a05082690136fa5e2bb76a;2017-09-06 21:18:31 -0700;fixed otsu block using 255 instead of 256
c77b5fdb803ee4ccab80f9f2ce5fd74ad8cf8f1b;2017-09-07 10:46:30 -0700;- adjusted demo so that it can handle images with 4 bands
81c1e80e94b4bbcebc0f92649ae72a76fe69dc4e;2017-09-07 11:13:36 -0700;- attempts to speed up contour   * About a 10% boost by unrolling part of tracer.   * Other modifications do nothing. There to prevent me from doing them again. - Better error messages in ImplImageDistort_PL - Added run again button to DetectQrCodeControlPanel to make benchmarking easier
cec15187167aa26614974d6bec88a9d59dd44d13;2017-09-07 11:19:46 -0700;- missed a few otsu places with 255 vs 256
720fb4eb213931e5e9a7d29de2edc9025eea92c6;2017-09-07 11:28:27 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
f3a5c6e2ffa948cad35cc11bdce13a6ad472ffcf;2017-09-07 11:28:52 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
104a768b36661243756975fa6c238f1aa8fe8b6f;2017-09-07 15:40:29 -0700;- removed unit test since it wasn't needed  * filtering was done by removing single connection nodes
a4eae21a66f6ead69f304b455638365db6a583db;2017-09-07 20:48:11 -0700;- changed circle regular grid algorthm  * unit tests pas now
a69167b65bff6d18c22e18f4430867ebac35119c;2017-09-07 21:17:16 -0700;- ImageZoomPanel   * Draws to a buffer first which fixes a major problem on some JVM implementations have a very slow render - Improvements to VisualizeBinaryContour
b25d5295cf542ee493d2b794629c83f90204dc3f;2017-09-07 21:47:35 -0700;- fixed unit tests
3614fdefecb880a550658829df9bea87024f38a1;2017-09-08 03:46:14 -0700;Regular Circle Grid - reduced maximum distance two circles can be a apart since it was excessive - Added an aspect ratio simularity check when clustering
07f9f816f4c5ee67002a4d9f9b8db73186f4aa08;2017-09-08 07:58:42 -0700;- Fixed false negative issue with regular ellipse grid   * Requires edge intensity to be similar   * Added external config of this parameter - Detect Ellipse now returns info on the edge intensity
874bd6737751193ba5d9f60f1016617ff5135596;2017-09-08 08:14:52 -0700;- improved connectivity rule
0f82ffec2163792e2afd3f932e4a86782d5a7868;2017-09-08 09:15:41 -0700;- turned off showing numbers by default in calibration circle panel  * Too much clutter
21e434c707d306c667376699e1b1329ed8ff09d3;2017-09-08 19:45:57 -0700;- added open recent files to demonstrations 2
a2806a01122f6058199d1093ac48984f7a2c96f2;2017-09-11 08:46:16 -0700;- Flushed out QR Code more  * Class for created detected objects - Turned off timing print statements
03fed83141657ca5639b47d1456825675582f82b;2017-09-11 13:02:32 -0700;- added access to inner tracker
b460dd8eb818d3732fa6a73ddb25aeeda5feee33;2017-09-11 22:10:57 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
3903c99470cdfd5569ee5a7ffbd1e9e39ad2e107;2017-09-11 22:11:16 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
c1f83e3c2fd67b80fa69c672b37e89e475b3c81b;2017-09-11 22:25:18 -0700;- LinearContourLabelChang2004   * Added ability to stop recording contours which exceed a maximum size   * Added ability to not record internal contours
3e6aaec41de31fc9c10a4568b33ce09be7f74068;2017-09-11 23:41:35 -0700;ImageZoomPanel now renders into a BufferedImage the same size the panel it's displayed in  * Won't crash when zoomed in too much Minimum conour aded to LinearContourLabelChang2004
eb8c124e6a1e5389a75d55875a66f0c3a09c4a0d;2017-09-12 08:35:59 -0700;- new point feature detector demonstration that uses updated APIs
cdab8e855a8329540b9025da583a1d496e2764e0;2017-09-12 08:46:01 -0700;draws corners at the center of the pixel they are detected in
a9671ada9123499116fedc8fabd90a340e61883a;2017-09-12 11:42:34 -0700;- Updated DeformImageKeyPointsApp to allow zooming in and out - Global defined MIN_ZOOM and MAX_ZOOM
724db4132874fd10991d2fddeca27fa878b95b9c;2017-09-12 14:08:51 -0700;- Flushed out QR Code more  * Class for created detected objects - Turned off timing print statements
d22f707cde40a902b0f363079bccd8f3e443f4a0;2017-09-12 19:10:29 -0700;- changed block otsu so that it can be tuned to filter out textureless regions using a soft threshold
5b09b78330aacb4a8bf706778f76b98417c84b01;2017-09-12 19:11:10 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
94376b9237d1ba09dfa5df319d3f6da3fc5b6622;2017-09-12 20:23:13 -0700;- fixed min contour size for square based calibration targets
d03d81c0632fe9e114d7b3232633a1c9d893e931;2017-09-12 20:33:27 -0700;HistogramStatistics unit test and fixed for percentile
bb0ae3e1df5143d5c2688b8ee9075c25df9ce518;2017-09-12 21:04:39 -0700;Fixed ellipse regular grid detector
775d2447f320b4f4da4769cd420efc9042c9406c;2017-09-12 21:17:11 -0700;- Circle calibration targets now specifies a maximum contour in LinearContourLabelChang2004
ed08b1a572466d6c79900e9bf4ec6a246c3892e8;2017-09-12 21:49:18 -0700;- BinaryEllipseDetectorPixel   * Adjusted detected ellipse to remove bias caused by fitting to a binary image.
bfd73335fa7a9bc66a888fce9d3222c0fa344459;2017-09-13 05:50:07 -0700;- Updated enhance demonstration to new API
a095dab5d02732401eb8f9da8e79b0af546cadc9;2017-09-13 07:37:25 -0700;- moved demo denoise to enhance package
92aba1ed1d5f1a24108a95177a00fcdabd36e746;2017-09-13 10:33:40 -0700;- Tweaked behavior of EllipsesIntoClusters to make tuning parameters more understandable - Fixed unit tests
5847d0da37a310d3299f878d9002eb5c39d919ce;2017-09-13 11:54:57 -0700;fixed issues related to ConfigThresholdBlockOtsu
8bdfed62ec74c12ab37f800c2f838f4d49ef44f5;2017-09-13 11:58:12 -0700;fixed issue where a list was being removed then saved. There would be multiple references to the same list
505e5cc23afa588ce54cfbb956d0901c053d43e6;2017-09-13 22:34:21 -0700;- TrackerObjectQuad   * Added ability to provide a hint for where the object is now
b234731be56997a243fda8b7ced62258e2d7407e;2017-09-14 17:02:54 -0700;- circle hexagonal passes regular camera tests
27cdc315a1811e51ab48117930a831c967a2e00a;2017-09-14 18:24:30 -0700;- new technique - pinhole passes
fbe7e49339facfd2cc94bf1d5d31c413939f32b1;2017-09-14 21:06:33 -0700;- getting through a good number of fisheye now
7ab6eaaf61d14fe7961f95b382f6bf4dff993e47;2017-09-14 21:43:06 -0700;- need to process fisheye
0edacf992f028b78120741d2b6c297e675d876e7;2017-09-14 22:57:18 -0700;- fixed issue with 6x6 hexagonal unit test - turned off debugging - calling it good enough for fisheye
a81215e5ad31f117ae080ca1ba4d97ec6500f8be;2017-09-15 07:20:55 -0700;fixing print of hexagonal pattern
fee2365ae5b60ac8f3f63a14b2e63e3b7a8411c8;2017-09-15 07:30:46 -0700;More conversion to hexagonal
74f26a4dda0fb8e25a08b880541920a7b849e342;2017-09-15 11:05:16 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
8e86835b3aee6ac3c1245650114bc45e0ff93fa7;2017-09-15 11:13:11 -0700;fixed unit test
2c5873fc8e97bfe6706b07545e25292b2b67ef47;2017-09-15 15:52:47 -0700;- updating documentation
6fa9bad99a326692a165e5e6474c5a15b792d3a8;2017-09-15 19:48:50 -0700; updating documentation graphics
c074e3343dd260d429a71440d344dd24d9855aed;2017-09-15 20:23:05 -0700;- increased maximum size for shapes in a calibration target to take in account weird scenarios involving fisheye distortion
eae28666f27a4fd88ef76f55f4b18575f2b865cb;2017-09-15 21:05:22 -0700;- fixed unit tests
4ff467ed1cb8d4e26e38b9fb8e137ebbb2f282e3;2017-09-16 10:03:39 -0700;- fixed unit tests
058da4ba9276bb9aad2f96d005d0cffb090aeec6;2017-09-17 10:37:02 -0700;- fixed order of points in hexagonal - added circule regular grid to FiducialTrackerApp - Turn on and off stability estimate from FiducialTrackerApp   * Was slow in high point count targets
491a11a7f6535180badb070bb85ffb164d1ac8f3;2017-09-17 13:03:40 -0700;- Ellipse Detector   * Minimum minor axis filter
7d3ee8ebeafd8bb4fd7bae9573b161c0f4504fd5;2017-09-17 15:37:59 -0700;- Changed behavior of RemovePerspectiveDistortion  * computes the transform to width and height and width-1,height-1  * This is the correct way  * Might break/messed binary fiducials which I think inspired the original code - QR Code related helper classes
0845580300c4f3e90558c6fa984d95d0cb2d3e86;2017-09-17 19:57:06 -0700;- Flushing out QR decoding more
9cc90dd97ea83dac413056127c7d9e6839734286;2017-09-19 10:05:36 -0700;  * Changed ImageToBinary to remove pointless bounds list and simply code   * Added LOCAL_OTSU
32446e9876a2b6e0b02e930a4c297e958433b6a5;2017-09-19 12:17:49 -0700;- fixed hexagonal unit test - UtilWebcameCapture can now open more resolutions
c21a1254fca63e69cce42e171f292c7668d0fe0b;2017-09-19 22:20:40 -0700;- added scale to local otsu thresholding - removed local from local_block because it was redundant
2c5cc82ca30fecd7f6e69c470c11c5848fa212d5;2017-09-19 23:02:43 -0700;- added image size to black shape demos - demo2 can change window title now
4b354f0d6f4cc22a4fd85186a0e2e7776eb8acb5;2017-09-20 07:08:59 -0700;- removed demonstration and replaced with demonstration2
58f7881f6e88e1a552eff6e2504029f7bdab616d;2017-09-20 11:48:06 -0700;- added dialog for opening webcam
83931dad907fdaeadf8d220e923141b4a9f77e75;2017-09-20 20:28:20 -0700;- Added overrides to FactoryThresholdBinary
b8ba193bce563ad642132d2e967ae1a30798e83f;2017-09-21 10:21:16 -0700;- added next file to demos - updated DetectCalibration* for changes in DemonstrationBase
97723f76d0a45ff828d175cba43efe0556ea0f96;2017-09-21 20:05:12 -0700;- JavaCV webcam support - Created ConvertByteBufferImage
491d66e7c3e6d96e063db496059b3069b2986cef;2017-09-21 20:05:23 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
03e3c4502c69ab16d40deb83052df8e8b7c651d9;2017-09-21 22:32:29 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
70089e5d55f98835430c1b5b56238cf25377641d;2017-09-21 23:00:42 -0700;- added threshold panel to detection demos - cleaned up rendering in detection demos
2cfd7aed42117b718022ccc0dab306d18c350882;2017-09-21 23:13:46 -0700;- added movies to detection demos - provided function DemonstrationBase to adjust video settings
7f66f26d4ee2de502781e437957f8e8c4d78fb7a;2017-09-22 07:31:34 -0700;- Application: Camera Calibration   * Support for omni universal model   * Can choose to save output in OpenCV format
bdf98ea6379774267d6db7eb2fddce3a7368b264;2017-09-23 20:14:54 -0700;improved visualization for circle based calibration targets  * turned on subpixel
8addeac3fd26a92ffcce234e6c0282bb2ce028bc;2017-09-24 11:43:13 -0700;- next image ignored txt, yaml, and xml suffices
f5db983552802b1102b55a6f99adb4d309768275;2017-09-25 09:40:56 -0700;formally incorporated an internal benchmark to qr code and related
87f258a489db0faf27232e1cbe2dc793c52f43fc;2017-09-25 09:48:26 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
1fd4e5b8e4ac5296cd2e3e23b0d91a908f1b8ee2;2017-09-26 18:59:59 -0700;QR-Code - Checking and encoding format message
34b3da122c8dc5f7e51376472dd6db20350395d2;2017-09-26 21:34:40 -0700;- integrated in format info completely into decoder and generator
44a04080a933c9f5a6c9c496dbf4db857f200881;2017-09-26 21:36:22 -0700;turned off show qr code
9a9c785a8e2143a6e1c744b21bf519615e7b9c00;2017-09-27 07:05:47 -0700;- decoder can now determine version
df1d413c4a99dade0f621c042b6048dc62451262;2017-09-27 15:24:26 -0700;comments about optimizing qr
05237c6a6f31804dfc0390db474d92a9526f7df0;2017-09-28 08:25:30 -0700;- math ops for decoding QR
51a0249930e423ee4f0144b63ae98c5a14a2b098;2017-09-28 08:46:22 -0700;- partial sketch of GF lookup tables
f44f11c2d6ddeba8f68b6519696f4b2dc049ff77;2017-09-28 12:41:42 -0700;- basic operations working in GaliosFieldTableOps
6562db2734d5783882aba7df14f35b246e7bbd2a;2017-09-28 13:53:14 -0700;-fixed reference in readme
49bdb0fe6159590d58cf3323a28571d8cb80b5fa;2017-09-28 16:17:10 -0700;open file can open with no component
d3c47c7b03d5523979cd67a9cb2db7d778e78b4f;2017-09-29 13:45:05 -0700;- added alignment pattern locations list
74cce61102aee55eea8f6349b42af545b666af94;2017-09-29 13:56:20 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
6af3eb44f2f448bac1af1e3f24c7b04c2b00a4eb;2017-09-29 13:58:13 -0700;WIP for galios fields
f1baadcd1b114dab2a5b547992a77ce4012bf593;2017-09-29 20:58:58 -0700;- sketch for alignment pattern locator
521bb5d247b0cbc8b41df19464bd65a780330fcf;2017-09-30 09:50:03 -0700;- fixed issues with QrCodeAlignmentPatternLocator - better tests
2984799051f154b8c6096181f122179eb1d12785;2017-09-30 10:13:51 -0700;fixed merge conflict
988535f794d289f03e077313c02e85f27bf791a0;2017-09-30 11:37:04 -0700;- fixed how bits are read in QR - fixed incorrect unit tests
8d3b9ae2604ec9e002c62c8b7caf21f5941fc6a2;2017-10-01 17:08:43 -0700;- added polynomial division GF(2**N) - unit tests
9618a1f96de9a06f0c9b3dd37c145ce8cf6a142f;2017-10-01 17:11:03 -0700;quotent -> quotient
a96fe4f3e7a924057907c66b43bf09d94d1d06dd;2017-10-01 17:48:11 -0700;sketch of start of reid-solomon algorithm
99de1836fa0777705b03e92e12c35aec14a2a8ab;2017-10-02 09:38:16 -0700;WIP Reid Solomon Codes
e0c9df65ebdd53d64c2c6db76e38d615eb6d2b73;2017-10-03 12:39:59 -0700;- reid solomon unit tests and fixes
078965baa1cf5b5ff6336e0621f39140f2e13ffb;2017-10-04 12:10:16 -0700;- refactoring
a804decea1405105c8fa3b978fe8cdce40a8ae53;2017-10-04 12:10:32 -0700;updating data submodule
cb051deacd0266e26efd144b8e7e330271f6f40c;2017-10-04 16:01:09 -0700;fixed type-o in examples
33f4858b51e20d99a84efbe1b341adaccf518407;2017-10-04 20:59:57 -0700;- added calibration demonstration
00055a6ddf653eb5acfbfcf5daeea4b474cd9302;2017-10-05 08:16:45 -0700;- Created ViewedImageInfoPanel - Add to a few demonstrations
8b87544e51248448d4353079dc7ae5d82e328610;2017-10-05 11:06:34 -0700;Calibration application can show fisheye results created common classes for calibration results visualization
26ca1c424d6647d47ce5aef4f54b6d346000a2f1;2017-10-05 11:58:29 -0700;- more improvements to calibration demo apps  * Pinhole moved from control bar to right panel  * Shows all intrinsic parameters now  * some refactoring
ec0204067b9bd5b726ff31971495b7a4e5fba805;2017-10-05 12:40:08 -0700;- fixed issues with fisheye in camera calibration app
d1824eb39eb9dc41848f71eab25da03b2a4b4eb9;2017-10-05 12:51:40 -0700;- added progress dialog
db7608d78dcb9a3b94bc462e80e73f4cbfaf210c;2017-10-05 13:14:31 -0700;- added comment with fisheye square grid directory
ea9a76531d77e22fafa00762baf409094ed051ac;2017-10-05 13:18:53 -0700;- changed rendering of control points to not scale with image zoom - removed debug print statements
00761119e54dea5d854a60e3f6ac513fc5044080;2017-10-05 14:59:28 -0700;- added specialized sorting for image file names
bd8a28f28c19dea5cba8789edf20f30fea3aa82d;2017-10-07 11:54:13 -0700;- Added what I think is a working version of Berlekamp-Massey
e2a3ebd09988c0a27488852b086c720a2ba5b785;2017-10-07 12:53:41 -0700;- added error location
7dc5639583f0ed1203e24847a3747ce1d9ff5dbc;2017-10-07 14:58:55 -0700;minor changes
29aa6bbff6b196703cfbafad44841e53af6e9ea8;2017-10-12 17:15:45 -0700;simpler algorithm for number of digits
52997529fa1f16c577bf793a0f59a6022b7513f5;2017-10-12 17:38:20 -0700;- updated for refactoring
3de32d7fd3f4d9a7ade45edf52475e22337febce;2017-10-16 19:30:16 -0700;- Background Model   * Fixed a weird edge case that happened when you passed in a 1x1 pixel image
011cb620f61b3c317086cddcf939a2fef337c211;2017-10-17 10:28:17 -0700;change name of package in android API in preperation for adding camera2 support
1fc59beb3cedc08f57dcfec8f5795de753a9153c;2017-10-17 13:19:58 -0700;wip on gradle build
5577443248ca66c3f1b3632c9ec64a734abc495d;2017-10-17 13:20:14 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
9fcbbefbf3d600c6e616a622b10d7cfc227a993b;2017-10-18 11:45:48 -0700;fixed incorrect version from causing a crash
ca4f55d426910672967e0a949761003953e98f2d;2017-10-18 12:08:09 -0700;sketch for PackedPointSets
87b09bc885069c67aea234dfab8a1eddacafbb8a;2017-10-18 15:41:01 -0700;- finished PackedSetsPoint2D_I32
e2d4b9d30f71453e2dae87a4cb272de2e307e5b3;2017-10-18 20:04:42 -0700;- initial pass at reducing memory foot print of contour finder  * Uses a compact format for contour points when possible
8b4b13f82d02d7f4b8a42143602336ef034c3fca;2017-10-18 20:36:50 -0700;fixed code code bug that was introduced in the last commit
5d782fc0b7a2bb2e1d33b20864b093fe1f34a376;2017-10-19 08:39:05 -0700;WIP Reid-Solomon  * Added a method to compute error locator polynomial directory
49b7713081d5933cf05e4e4f446273659840fdff;2017-10-19 10:13:28 -0700;- changed syndromes into a GrowQueue_I8
6c53eb24f11b509c8d43dfd81f842433056cce07;2017-10-19 11:41:29 -0700;added more ops for polynomials in the small to large order
60d22fdfc514d2bb18c097c4643501ac73acf1ea;2017-10-19 21:38:29 -0700;partially working error correction
392a460c0f1daf190507b4f49d924a39fa2cd162;2017-10-19 22:38:45 -0700;error correction is working better
7855338bbe4ebd8224060d6665f31585f1377723;2017-10-19 22:49:19 -0700;error correction passes all tests
15cbdd939d7bd1ed40bccefc75754a6ff9c99c0f;2017-10-20 06:01:21 -0700;made unit test more rigid and verified that the algorithm should be working
540ad457916274f78fecda0a70314f62a9087911;2017-10-20 08:49:51 -0700;fixed the bug. now recovers all the times that it should
c587995a2151c3c24d77afd3d4112790b681fbda;2017-10-20 08:51:08 -0700;stray println
b0d8fffebdeb323d61e31562032f1e3ac0e96e9f;2017-10-20 22:12:46 -0700;- increased side of message in unit test - changed an equation
ab8ef8e8ec2acbf47f1edfadffbe0e8f26a72363;2017-10-21 11:31:59 -0700;The start of writing data bits to a QR code
34b548e848d0458580b2467fa2cee547a881b13b;2017-10-22 13:20:09 -0700;- Created interface for contour to polyline
a3ae17836bdbf73451b11f388728b809e160abdf;2017-10-22 14:44:18 -0700;- updated for changes in ddogleg - fixed split merge line
e363666838eb30ce62a2b748fc6c93f1b5beebd5;2017-10-22 14:49:04 -0700;- fixed UtilOpenCV
d041b6263590488c16a86e775e1bc27a9d1c4405;2017-10-22 16:23:25 -0700;unit tests and refactoring
932e4629bdf764497c85b46f035e8d3eed4b2248;2017-10-22 17:34:41 -0700;- unit test for contour interest points - moved split merge into its own package
3e93fa69a32dff1ea7f6f0bd493640d3d2c1e697;2017-10-22 17:47:21 -0700;optimized contour interest point a bit
302b2b19e9aab52c30c2ddb6d57db395ad847a0e;2017-10-28 14:20:30 -0700;- renamed ConfigMinimumSize to ConfigLength  * More generic and not just for images now - polyline algorithms now use that instead of a fraction - updated unit tests for Point2D now implementing equals()
18831a02298239cb3fc945b57215269aeba68298;2017-10-28 14:26:35 -0700;PointsToPolyline now is configured at constructor for loops or not
f0a19f6fd1fb1758269b25a5659b6dc17df88fa6;2017-10-28 14:41:02 -0700;sketch of split merge from features
e1220615e413f02753fe245d75d879790ade740c;2017-10-28 15:45:47 -0700;fixed broken code
cc651d1c368913945966cc02382fd3e5a84d11ce;2017-10-28 21:18:47 -0700;- more flushed out feature based polyline - using distnaceSq instead of distance
67877fbba93d2f57c38711fff152e52e52d833e1;2017-10-29 09:20:24 -0700;visualization and improvements for contour interest points
c899388124f9745b361436523db91127fab15497;2017-11-01 21:54:19 -0700;unbreaking factory that was using experimental code
ab2dd20526e2618e0adf925014299fc706d7e95f;2017-11-06 22:02:00 -0800;turned on javadoc use flag
30451e4a6a9e2b301bdcacd8ab8b7fcb0e770bc7;2017-11-08 10:31:13 -0800;updated so that it compiles in JDK 9
e95f4043b4b88da105af0047fd63b39bf43cc6ff;2017-11-11 13:07:23 -0800;- moved polyline code that was in block polygon into SplitMergeLine abstract implementation
67dad40c53876ccda0c41abe452b3e73f45279bc;2017-11-12 16:00:28 -0800;- sketch of new polyline algorithm
8918aa3a330f75ac3260db64a6e14a2bdc003d68;2017-11-12 17:19:42 -0800;changed so that its not a strict local max  * contours frequency have several elements with the same distance values
1315143e191168deca35e697e701d1f72f0a2ec2;2017-11-13 11:48:59 -0800;flushed out new polyline algorithm more. Renamed to split merge since that's the approach it's taking now. Should be a better version of what's currently in the code.
ba5fec580fbc1140257f17d0aa19c5f1174e9d1e;2017-11-15 10:07:27 -0800;WIP tests and bug fixes for new PolylineSplitMerge
b9554a4c66a366860b273b3c983b3f96cbc6f592;2017-11-16 11:41:39 -0800;WIP almost done with unit tests for new split merge
8ba88a3c5a959617b1dc7996fe825090491f9772;2017-11-16 12:40:37 -0800;All unit tests pass
b4f5ed95e1e88f50aba031a6ff6d356d4bcc3cda;2017-11-16 15:39:33 -0800;wip
d0433bd61e07df4403c5430483fc06373ab12df1;2017-11-16 20:50:07 -0800;- various changes in an attempt to improve performance
9a09ea995f43c751b5f7f5b37912376b2b916e22;2017-11-16 22:33:05 -0800;working better
3bb8f189d99c61d22e1b311f8624e858894680f7;2017-11-17 10:41:57 -0800;more improvements to new split merge
ed99d031b308820cf618988fcc9026c3a3cc5c18;2017-11-17 11:06:28 -0800;fixing broken build
cccbf95e3da3f384bd854904945a475f9f75210b;2017-11-25 14:27:23 -0800;polyline demo has custom controls now
746dd748f66b4e3254169b7ac0f8f4e0adbfdb7c;2017-11-25 15:45:25 -0800;- side error is now an average instead of a sum   * line segment instead of line. Fixed weird situation with letters - changed shape error to be average of side error - This change improves the situation where the fit of a small edge was sacrifices for a much larger edge
d3dbff5a9193c1846f2d9039beedaa3c9709fa46;2017-11-26 09:34:47 -0800;- improvements to split merge   * As new side are added they are tested to see if they are convex   * 3rd corner in triangle is selected by maximizing distance from     other two corners
364f67f40ebb870093b3e96b8faf7aaa03fa1e18;2017-11-26 09:38:53 -0800;fixed build error
d93d2b738c613bb9b5618ce4048ea72b24fbbaa5;2017-11-26 09:58:03 -0800;- improved formatting of float spinner
1b6e0d2baf0e716d20ed6681a1cd8a9d8c028237;2017-11-26 16:01:52 -0800;- DetectBlackShapeAppBase  * Fixed problem when there is a change from a large to small image  * can pause videos now - SplitAndMerge  * Correctly order's triangle  * Will keep on splitting shape until minimum number of sides is reached  * Better handle's non-convex sides  * Changed how distnace to 3rd corner in triangle is computed  * Avoids NaN when computing side error
ee763dbc65fa571f10a36fad5592614f4d4b66cc;2017-11-26 16:18:51 -0800;can select connectivity rule in demo
be4892f40ad10c606cb8342cddc523d21f92ca20;2017-11-26 16:23:12 -0800;rejects a shape if the best polygon is smaller than the minimum size
4dd0597c571de3e309aea2e28e3232ca131efd1d;2017-11-26 16:26:31 -0800;fixed build error
842a21ce7529ff016b1cf0c290798836672bb79c;2017-11-26 21:33:59 -0800;- improvements to split merge   * Added max side error
1c2c23eec61e49bdd914a4c2714b2c7910285f11;2017-11-26 21:52:54 -0800;- fixed null point in GUI caused by recent improvement
c5b4b2bf222ff0a7a28ff2b3d53fe3254db5e36a;2017-11-28 19:50:31 -0800;- broke polyline control panel off so that it can be used in other applications - made connect rule configurable for black polygon detector
fe7d76abd4fe0d57abd0fe440ce2933bfed17d50;2017-11-29 07:13:43 -0800;abstracted demo controls for poly
654f8bba95804b6bc43cdb5633717f0fa5f219b6;2017-11-29 13:06:49 -0800;more integration of new UI for polyline can switch between old and new techniques
29bb1c5c6a6d35c47a3254acad39cd6d1fa47eac;2017-11-29 14:10:40 -0800;- more UI improvements related to polyline - click to move shape demonstrations
9f9c5a63751ecd7c493da1f1494ae747de06336b;2017-11-29 22:51:56 -0800;- switched from old to new polyline split merge for fiducials - still tuning
22cd10d864988290160788f617708bc8481b0801;2017-11-30 13:40:34 -0800;- updating tuning and unit test for switch to new polyline algorithm - PointsToPolyline interfaced changed   * more configurable
1be2baaa5e799eb81aba0ecefe55afb025119e30;2017-11-30 13:47:32 -0800;- added skeleton for generic polyline checks
e138a837d4fac198dff3397df6eb8cdb96862a4f;2017-11-30 20:01:01 -0800;new visualization app for binary fiducial square fiducials will reject squares with weird shapes now
4fe39ddff166399e6eb87070ba7b6e9e5da70e80;2017-11-30 21:39:28 -0800;- fixed a bug where the a polygon's index and the index of it's info were not the same due to pruning. - reduced size of minimum contour for square fiducials
e05aeb927c192ee91bf487045f1d9808fee88bed;2017-12-01 21:29:02 -0800;- added refine to new polyline split merge's implementation of PointsToPolyline - modifu black polyline's helper   * chessboard now adjusts the number of sides - various UI and refactorings - Net effect of all of these changes is that regression tests improve in just about all metrics
7e9d4049ebd1705ddf5b97e2340936db948a2831;2017-12-02 10:33:48 -0800;- made ConfigThreshold easier to use - fixed an issue in SplitmergeLineRefine_to_PointsToPolyline   * Rejected convex shapes when set to concave - GUi issue with ConfigThreshold
a1bdf1f59aa161cff02f45e937b2254106864ae0;2017-12-02 11:06:11 -0800;- removed the ability to change the number of sides in a GUI for detectors which set the number of side themself
b09c68cde94a74482f95aeccb1a49e0c07b78de7;2017-12-02 12:57:14 -0800;- Added MovingAverage - Fixed bug in QR Code's internal profiling
ab74026a9ab5ae8e065ffce433aadf91e5108d5b;2017-12-07 19:44:41 -0800;- can now toggle use of local blocks when computing threshold for block algorithms
fce53232ca3569e9359db0cd77baaa672e0f4aa4;2017-12-10 10:56:46 -0800;- fixed initial value of thresholdLocalBlocks not being displayed in GUI - changed default threshold in QR Code Detector demo
6838d15861eac86f8f0381fe91852e0ed5d14113;2017-12-18 14:58:46 -0800;- bit location in QR Code
8a07457b07eea250c143ecc6c61e48900124dc11;2017-12-18 17:29:38 -0800;- integrated bit locations into gr code generator - QrCode uses enum for mask now
51709b6d5fb14e8568cd48880b6cfeb5e9638b36;2017-12-19 08:58:01 -0800;PackedBits8 - added append() and growArray()
570a7e42584529e5ce8835f6a497ab6a77d8eea9;2017-12-20 14:49:46 -0800;First attempt at complete rendering of a qr code - added fixed qr code information into QrCode - removed QrCodePatternLocations (in QrCOde now) - flushed out QrCodeEncoder more
1b62a36adac62761814147770ea7522d9af67783;2017-12-21 06:05:30 -0800;- creates valid QR codes but the bit ordering in bytes is off and the code can be simplified
5a4f39db881c7c284da450690c524ca17e1318bb;2017-12-21 06:25:02 -0800;encoder test is working
6da58bbccddd46cb347e5c7e7c7ae4824644f7f4;2017-12-21 09:35:43 -0800;- fixed issue when the second set of code blocks needs to be rendered - code clean up
6134be6a6921aee418e6d52ffbf6a661bdc8d363;2017-12-21 12:17:09 -0800;- added support for alphanumeric encoding
ad711967404c88ce1b63ab078c905fad46a3ea0d;2017-12-21 12:49:37 -0800;finished adding version info to QrCode * Added sanity unit tests to make sure it was entered correctly.
568c86470250575ea8eb6b950232710693c5afd5;2017-12-21 13:03:27 -0800;- added support for byte encoding
763c46dd1cc27737bdc1bc8405fbea1e7efd90cc;2017-12-21 13:50:53 -0800;- added support for kanji encoding
512d5e3bcfd59c2e19aa7fa3faadd98b7c440ef0;2017-12-22 06:19:54 -0800;- ReidSolomonCodes   * fully implemented correct() function - WIP for decoding qr code from images   * partially works
b76a0b0082a56c69f16fb4c429d3be5417409325;2017-12-22 07:00:33 -0800;- decoding on numeric messages works on all qr code permutations
0f834500eca005f5152d41cf676c1d2737068d6c;2017-12-22 07:14:05 -0800;- decoding alphanumeric
5a9b5141e4cb1287b39576e5c1f267e28b6e29f5;2017-12-22 08:14:22 -0800;- Added Kanji Support - Added more verbose error information
9a6846d5710b7f11e687f143e0ea77084941e14d;2017-12-22 08:47:47 -0800;- tweaks and comments
e1f0ff97a28ac2381c9212386677b9f9de326f70;2017-12-22 11:21:15 -0800;- proper abstract interface for qrcodes - profiling for decoding
472acba345d0cc31d9c8362883b62e54deb9e004;2017-12-22 13:33:54 -0800;- added test for generic qr detectors with rendered targets  * rotation, zooming, skewed, multiple, ... etc
172ccd246abc2e4abbb900e075d2530fec018e76;2017-12-22 13:48:12 -0800;- fixed qr code app so that it once again can show the binary image
8dfec0ff370c2c640ea4ee49eef359bfa9d65914;2017-12-22 14:27:53 -0800;- fixed two bugs in the decoder where it incorrectly checked for the end of a loop - added targeted unit tests for bugs such as that
062128897ff574a9c0dd1882d54fc69f24ce655f;2017-12-22 15:48:08 -0800;* changed how bit location is computed. Uses more finder patterns and has better real world results on large markers. Small markers still a problem. * QR demo renders failed detections * CORRECTING_ERRORS -> ERROR_CORRECTION for failure
c9256eb3cdd4cf63bda9e9d22088d47c9b98925b;2017-12-23 06:23:26 -0800;- decoder can now handle messages with multiple types - byte messages now encode JIS like the spec says they should - demo app can show the value of each bit
5ba7ec5aa0d8a84f58aacde2b972bd1308e01857;2017-12-23 06:51:28 -0800;- added more controls into qr code demo
fdff6713f2581bd273162da0aebc43d6f7a5a989;2017-12-23 07:23:06 -0800;- fixed bugs in QR-Code feature specification  * wrong number of data bits in look up table - demo application  * Declares alignment just for bit visualization. No worry of thread issues now  * Fixed visualization bug
3e4b2750f1009c4f5b9dee294174ab4f942378c0;2017-12-23 15:03:12 -0800;- new bit reader which uses the closest feature to adjust the distortion - distortion takes in account alignment patterns now
719b458d6c5b9fd7c1db467c737a1a6239d752f1;2017-12-23 16:17:35 -0800;- Bug fixes  * Alignment pattern locations  * divide by zero
72927297b6c72da1219fd611fc8f5b3339cf1347;2017-12-23 17:02:37 -0800;- hacked around FNC1 mode
9a92d0a9ae18cf650dd1978426b4a9697cd98f66;2017-12-23 19:25:26 -0800;- code clean up - can display bits without showing marker
f3fa6ac41207eb166fb0e6eb64e16186a340e1f0;2017-12-23 20:56:10 -0800;* fixed alignment pattern location issue * updated and added unit tests * cleaned up parsing of ALPHANUMERIC * Encoding can now handle multiple encodings in the same qr code
d743ed4946dac0b3c0836cf9d8ca15ba6a6d8698;2017-12-23 21:42:51 -0800;unit tests
84aec15ed9384eb791ffa7b8bdae94cc48417d30;2017-12-24 08:09:35 -0800;* QrCodeEncoder can now auto select version and error correction * Misc javadoc
92e49c38727e4ae39a6bfbbd5bdd3b76d3ff9731;2017-12-24 08:25:29 -0800;* fixed unit test * minor clean up
a00cdc40b34bb122a5c3909431685f9d9524f4cd;2017-12-24 09:44:53 -0800;candidate for new position pattern detector
70ea9d7a6918137fa187d6d041b3b18abbe9a176;2017-12-24 10:16:38 -0800;* new position pattern classification is doing a much better job   - one false negative found   - more false positives but doesn't seem to change speed
86db2248ffe7cea26761d178633c9c083cdc6798;2017-12-24 18:17:13 -0800;- WIP for improving distortion computation
6dd9ee846a0a1fd3e5a4f9189058994680399be9;2017-12-24 19:14:42 -0800;-some more improvements but still testing the code out
d05ecb96afe700f66923dfffda66ce33b9895389;2017-12-25 08:48:42 -0800;unit test and fixed error in decode distortion
534cff56d8af6033f07fb71b84e514b13ef46dbf;2017-12-25 12:13:52 -0800;- fixed qr code min version defaulting to 2 - cleaned up qr code demo control panel
c489fae26d7de4d2da875dfd5f7ae2ccb5f750f1;2017-12-25 21:11:03 -0800;- improved QR demo  * Shows list of detected markers  * click to zoom and center  * displays message
526391bd394eb5624d4fd594b5888bd9445f885b;2017-12-25 21:11:38 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
7686c55e9b0b0c481aeb8b7a385f97776ceca289;2017-12-25 21:25:22 -0800;- unit test and qr code demo tweak for gui on Linux
8cd087555a9ef8df9e8e0d89f40352478f28c396;2017-12-26 07:56:31 -0800;- clicking on QR code show's its message - run again button has been made more subtle and takes less space
3298026b530ed8b6b2ab4725fd7129479dce6ff7;2017-12-26 09:20:11 -0800;qr code demo  - turned on line wrapping
10f43499852d934f55cbf5de4ec56f094ca11a2d;2017-12-26 09:23:52 -0800;changed word wrap style
90ad8e9e98c53c33364cb8d5f87397e7ab91b29c;2017-12-26 17:56:29 -0800;- changes scoring mechanism for how pattern locators are linked together - simplified code by removing separate class for reading bits - removed the use of 32 bit bit storage - sketched and commented out other improvements
5b3194f9642b6af797a760675e59829d270740ad;2017-12-26 21:35:32 -0800;- 5 points are sampled when reading a bit based on square size - mean-shift based alignment pattern locator
9dfc86c3195d2fe7f34e7f2dd044ef48b56e0366;2017-12-26 21:36:52 -0800;adding a notes for qrcode
3e438da3e01bf0deef7381958a748790ca50dd61;2017-12-26 21:39:18 -0800;commented out print statements
6b7ecd77ef969ec528c30a004322f984c392ff93;2017-12-27 05:11:36 -0800;added file chooser filters
cddc33a077199e71530c5164594248e2d383d96e;2017-12-27 08:33:25 -0800;added a common class for rendering calibration targets
2251f5ac4f8d846a4d901862a9412b542b0307a4;2017-12-27 09:41:10 -0800;- start of GUI for camera calibration application
55c54692a7df83f5649e6eff7ce8f842c30b9393;2017-12-27 10:53:40 -0800;qr code control panel uses the default thresholding parameters for qr code now
216a6a8dc3e8579cf12c1df5ded955af43949db4;2017-12-27 12:13:57 -0800;- increased tolerance for polygon fit so that slightly damaged qr codes are not rejected
c515ae90a293a0b0ee4dff185f86793490f72a58;2017-12-27 13:33:13 -0800;- can specify camera model in GUI now
169e1e954b14a73fc0953682ff3bee95d588b2fb;2017-12-27 15:39:58 -0800;- finished calibration configuration GUI
accf4a865ceb2f34894d2c0b85334b3d99590893;2017-12-28 18:14:33 -0800;- Fixed a bug in DecomposeHomography where it assumed the scale was always 1 - Improved JavaDoc in MultiViewOps   * Now is very clear about the passed i
63af3af9c0fc222c134bd9cad2391be47a593944;2017-12-28 20:35:07 -0800;- Adding unit tests to PolylineSplitMerge   * Found a bug in sanityCheckConvex where it didn't compute the distance     along the contour correctly.
f4dfdd83070973604d6a0f177ab28609620536f5;2017-12-28 23:34:07 -0800;- adjusted sanity check due to previous bug fix exposing an issue of it being too strict,   at least for very small shapes
19d4ff45c80f205b4dee9cffa4fd146e3e9ddf9f;2017-12-29 10:10:36 -0800;- PolylineSplitMerge Testing WIP
6d4bd015190f0240d650e16d63eb362c71e70d85;2017-12-29 13:56:40 -0800;Added QR Code document generator application
d423e0526e12744b9f32b660c58dd712135c14fe;2017-12-29 13:56:52 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
cefdb887d3607f1c89af72b0cd0cff6c898d6a48;2017-12-29 21:13:57 -0800;- added ability save input images for demos based on detectblackshape
1e18640254a9063d942992139a0e0b4949a0a476;2017-12-29 22:05:58 -0800;- more features to create qr code - added flag to turn off profiler text in qr code
ae851130aad063a538cf2e619eaf1b17254af77f;2017-12-30 09:16:35 -0800;qr code document application supports image formats now GUI improvements
3b6808d131498dc179d543c71bd9a8ac720a5997;2017-12-30 09:24:50 -0800;updating DemostrationBase with better keyboard support for menu items
f5f3e15d7454f198e8e8cb5944c38e8e5bf8615f;2017-12-30 09:29:53 -0800;- fixed lack of timing pattern on PDF qr code - fixed default text
1927399b6801cca0261766168a2edf1a4b8c88ba;2017-12-30 10:24:26 -0800;- added print support to QR Code document
09cf640ba97a0df9061d6c36a84525c35db4ac3a;2017-12-30 11:10:32 -0800;- fixed a few issues that were found when CreateQrCode was run from the command-line - Added it ot the global application - made the error field in QrCode public
556d8eca8cad4e50b43b80802431aadf87d2bd77;2017-12-30 13:41:36 -0800;- UnitTest for CreateQrCodeDocument - Fixed PDF QR Code being flipped over - Added more image formats
03dd880f40fc87e74220c406ccaaae388310eac2;2017-12-30 15:35:08 -0800;- fixed off by one byte causing encoder to select wrong version bug
ac98ed140ad27e2b213fd4a04b6c99dec253be06;2017-12-30 19:26:00 -0800;- mode decoding outside of homography estimation - fixed two incorrect values in VERSION_INFO table -
8a86f5a37198edbb01dcb72173a11c24531e81e0;2017-12-31 09:28:02 -0800;- Addded auto selection of mask for qr code - renamed VERSION_VERSION constant
28dc7e5d67155d9f5922ab2abe71ac75d13c6e1c;2017-12-31 10:35:43 -0800;fixed issues with auto mask selection
5b01171ba8a5441c59c39254a39de3e302ed6805;2017-12-31 11:16:21 -0800;split decoder into two classes so that bit manipulation is separate from image processing
09c5d4bc7a3b4389988800bcd46e7e699d1318b9;2017-12-31 13:29:53 -0800;- found a bug in QrCodeEncoder
c45241619c5a0cf2a04614d66e95818b410e5484;2017-12-31 14:24:16 -0800;* fixed/changedQRCodeEncoder   - Change it so that messages are stored before being written to the bit array   - this is because the size of the length bits depends on the version   - that might not be known until the very end
a14634ef88d517a1f730977ba35b618700799aa6;2017-12-31 15:08:58 -0800;- fixed an issue with chessboard pattern. Might have been around for a bit   If a square touched the outside border the corner might have an index   greater than 4 and not be considered
dcfb9e54ad0d4722b0a3a41b8a55f23bab28028e;2017-12-31 15:10:01 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
0d6723c49e7aec5d180f556e475e5a31b75e9c03;2018-01-01 09:23:21 -0800;- CalibratedPlanarPanel scales large input images so that they are visible
19648c3b855417d1f1f28e6ae13a62b583af2d7f;2018-01-01 17:01:10 -0800;- Bunch of significant changes.   * Didn't break up into smaller commit since this fixes caused other problems and wanted no new broken unit tests - Local Thresholding now refers to width instead of radius - Can specify a local thresholding region using ConfigLength - Created Otsu2
d87a758c67c3b61b507218dad61fbd1efe22a23e;2018-01-01 17:01:42 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
9a94be4b8e9296a6f68030d1b651b273e5a86c36;2018-01-01 17:55:28 -0800;- tweak to Otsu 2   * reduced the influence of distance since it was skewing results too much   * Significant stability improvement in qr code
1d44224683d7ff06638eb85092e5008b1d70fecc;2018-01-01 19:22:48 -0800;Camera calibration visualization - data and images are now correctly synchronized in application - errors are scaled correctly - warns user if it can't detect a target
a3ca11861499246b09c0550ef2e4abeb73fc4529;2018-01-01 21:08:43 -0800;wip
82c58d5b206dfdf537e1cfc801c883d2e5093a2d;2018-01-01 23:02:46 -0800;- fixed otsu2 test - removed print statement
131517a89a664d095cce6a1fa19531ca44f52fc6;2018-01-02 07:19:50 -0800;- added ability to toggle useOtsu2 in ThresholdControlPanel
410006dd871659ac81be1a497a659a5f79df50f3;2018-01-02 08:55:52 -0800;Created a control for COnfigLength
f7cce7889af44acf0c4248d5f736caeed91bba75;2018-01-02 09:17:48 -0800;improved printing of qr information
d7af2d0ab9f4b2310eac6b128ccdd809933a203c;2018-01-02 17:29:30 -0800;- DemoImageThresholdingApp uses standard threshold control - Fixed setEnabled() in JConfigLength
c720af44a37b8d7b2a914f9485d9ecead8c0cbf8;2018-01-02 18:47:48 -0800;- split a function into two to make it easier to test - more unit tests
cd679bc1ec1e8adf3b271d90990a36353c315679;2018-01-02 19:24:15 -0800;- All PolylineSplitMerge passes
8b26393cd1500df8b2f9c02ed9e6edc7bcb787cf;2018-01-02 21:59:19 -0800;another year another update to copyright
608ce8478ed2e459acc437d3d7192b8e2d0d06bf;2018-01-02 22:31:59 -0800;- Added connect rule to ConfigEllipseDetector
5a886ed00d3eaca6bcc21c1da0855cd62d93e4e8;2018-01-03 08:15:36 -0800;- recalibrated calibration targets by changing thresholding  * Much faster  * Mix bag in regression
41e8519bba3ca10843444e80109354fc9b7b9c53;2018-01-03 14:26:55 -0800;unit tests
181ae4a67ae1748d250627d93932331c6cf129e8;2018-01-03 16:54:53 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
a87c1f4c376938b0f449517a20484d500415d922;2018-01-03 20:22:48 -0800;* tweak to qrcode tuning to work better with small codes * polyline unit tests * polyline control panel gui improvements
d5a159931bb1a2ed122ea1874e2f531339025e66;2018-01-03 21:01:08 -0800;changed otsu2 so that it's less of a hack. Selects the middle value between the two means
958a2064d8c4ec4cfe7a9c1ddfd42b37023bae53;2018-01-04 15:29:10 -0800;qrcode related unit tests
ae6d38beddb97bbb903a0e5306da3523cd12a196;2018-01-05 11:47:25 -0800;- tuned for better performance in darker images
855561f452300bc33c8c7e09e58862f4b57ea12a;2018-01-05 12:44:08 -0800;- fixed logic for manual mode - draws a red square when settings are bad
a15ec507cf6a2e4e345cf06ee38d06e15359f850;2018-01-08 14:18:11 -0800;- The value the user has entered for marker width is always used - units are correctly updated now
bb223556457ef19cd6c0dfc19fee20c2a1e43c70;2018-01-08 17:16:51 -0800;- Moved Unit and LengthUnit into main BoofCV code
8076d65e7d75c4d3a91ac741120d78780be7e3e8;2018-01-09 09:23:02 -0800;- Factory can now create EPNP - Added clarification to javadoc - fixed factory that ignored user request
5e594cd0d9efe692d1d4c48b8f1268fc7656db5e;2018-01-09 13:42:14 -0800;fixed bugin QrCode.clone() misc sclean up
746141b6e0fa764ca0e3bf6731ab0d2b4c322ef9;2018-01-09 17:31:19 -0800;Added new parameter to ConfigLMedS Unit test for clone in QrCode
e3f070d4c35aa1ca7cbb41a2a13425dbe603e099;2018-01-09 22:45:47 -0800;- refactored name of byte array in qrcode - unit test for QrCodeDecoderBits
e47c7e70f008ca599028af60564fced58785eb55;2018-01-09 22:51:57 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
fbc0c72d88a9fcd7af80806aca7dc23c6c2aa5ec;2018-01-09 23:04:15 -0800;- changed QRCode.message to a string type - slightly improved QrCode.clone() unit test
cc8b4e564771c50ad82afc2b5278eefd9d336897;2018-01-10 09:12:37 -0800;- CameraCalibration application requires --GUI before it will launch GUI now
7ecde996455772b60fb3f273a886f61cee50c5f3;2018-01-12 04:48:49 -0800;- added qr code example
ea11201c4810398e1fa52946e8162cc0496e53f5;2018-01-12 21:12:41 -0800;- Added a demo for background model
9b77e5131672bc81bee1bb0df1194f9ab0722e67;2018-01-12 22:29:15 -0800;* Removed id from contour  - Was mostly already done * Added the new threshold algorithms to example * KLT demo has unique
3e7c42da61fec05af8e9eed56aa36b4384216d62;2018-01-13 21:07:29 -0800;fixed issue with application launcher  * change in Java 9? length of numeric input
602a37b2ba65fd1bf41e2dac21bb28c8fd05ede8;2018-01-15 06:31:50 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
31c3f5d1af87252d8f07c4327af532f5316171f6;2018-01-15 08:49:50 -0800;- QrCodeGenerator fills in bounds and alignment pattern locations
c0f24e78dce6cce3bd79bb37f71a667414b3c463;2018-01-17 19:53:16 -0800;- built off of stable version of georegression - reverted to 0.4 of deepboof because there is no change besides its dependencies   * removed all the libraires it imports because they are out of date and the     new ones are compatible with it.
e2b1fca393d0bbb5959cceb7350a6c4fad02cfa3;2018-01-18 08:23:42 -0800;- changed version to 0.28  * Preparing for stable release
cf8da99fd7f3d05735ba912bb42524c67c812d07;2018-01-18 08:30:06 -0800;- Updating Integration Dependencies  * ffmpeg  * javacv  * webcamcapture
4672774fa4f09d76810290ef8d08d16b15ac6f3c;2018-01-18 08:30:22 -0800;Data submodule
749cf30adeed4dc0f6f13f421d55d86f09a436cc;2018-01-18 16:58:08 -0800;- Android   * Faster RGB to Boof Image. Suggested by giulionf
93c51d244a38767a96ae7f11f2dd665ed046bbca;2018-01-18 19:11:53 -0800;- GUI for creating calibration targets
79d35cb9e532ef328100f60a7209d805ed7e59c9;2018-01-18 21:56:03 -0800;- calibration GUI renders the page too now - The info string is printed when sent to printer and now darker - Better default calibration patterns
0e8c6be9d1cfba898453f1aa6550f315cec14b51;2018-01-18 22:00:34 -0800;- calibration preview is updated when page size changes
9cadc715e4e899a174c4e04d91c503e1b2670d37;2018-01-18 22:08:27 -0800;made cude thicker
ffdc56b0bda3f484c365bf80cd60f26b23089de6;2018-01-19 05:07:41 -0800;- added almost useless help - tweaked menubar
795035075dcea38e8bc88402e0a537640fc07c25;2018-01-19 05:25:07 -0800;- updated version of android demo to 0.28 - makde qr code demo window larger
a9ffeef90277775e341a011cd706c800fbfd0a2e;2018-01-19 06:05:18 -0800;moved tests into android example so that they can actually be run
78bd999127b7ca4b0ed217a580930419bdecb05f;2018-01-19 06:05:45 -0800;- spread the use of Bitmap.getPixels()
ae66fa5cb26f521ee41feb13ea90562a682d35ae;2018-01-19 10:12:02 -0800;- QrCodeEncoder   * addAutomatic() is now not completely brain dead and can encoded     mixed Kanji and other - Added ExampleRenderQrCode
b0ebec51a19e043ffd12c8dc2e20369edc7e29ca;2018-01-19 13:44:38 -0800;fixed menu keyboard shortcuts
cc17a53a9c75a99f18da6f3cf9a5811e691c17e9;2018-01-19 22:05:47 -0800;- clarified qr code render example - preparing for 0.28 release
a0f9b016eeebd56c4c77ef5f8082828b67459ffd;2018-01-20 06:59:12 -0800;delete accidential addition to kanji test
a520537df1148ae51dd090aebadba72207279486;2018-01-20 07:17:58 -0800;- fixed issue with identifying kanji characters   * Added a unit test which can catch the issue - Correctly constructs the message during fixate
1231dca40e7a960adee99ed282b50689b7502501;2018-01-20 07:32:44 -0800;- fixed github link
b89d3fc69f8407741bf2512cdc351e638dcfa14e;2018-01-20 07:58:23 -0800;fixed year in change log
d6aec5817db6b7efad5da4701487ceddf18da9c4;2018-01-20 08:05:36 -0800;Merge branch 'SNAPSHOT'
8bf75882240518abe5a5a02c89135e56b3ca5ace;2018-01-20 08:24:26 -0800;- First 0.29 SNAPSHOT - Changed to Java 1.8 - Moved TODO list around
7a4933bfb4b7b38b08c272fbaa353416789bd51f;2018-01-20 08:27:56 -0800;- tweaked readme so that it mentions core and not all. Maybe that's why people keep on using all on android projects....
ea6872d13e24e3f1b9f9ef717da8dea1654a5acc;2018-01-20 08:36:44 -0800;fixed 1.8 generics issues
d9516d461ab64fe9c8df94ecbe0d5f58dd812ad9;2018-01-20 15:27:54 -0800;- added missing demos - added manual scale option to imagepanel
3016e69c155b8617144fa986c1568a1262f9cd1d;2018-01-25 06:46:36 -0800;- tweaked calibration API - JDK 8 Stuff
cb1cc49c1adc4e234816c9a5ad409223faaf37db;2018-01-26 17:34:22 -0800;fixed qr code crash bug
fb42869e2bdc86be94bae7e7bd7ff4823fa02776;2018-01-26 17:35:46 -0800;turned of javadoc generation to speed up build
826aed44ca1dddd64cdb5e47b7187f0986af9a00;2018-01-30 20:05:25 -0800;- Image Thresholding   * general otsu specifies pixel min/max with a double not an int
3270033a3335e0238ac0509e21ae86a8576507b8;2018-01-30 20:27:31 -0800;- Stereo Calibration   * Moved detector to be outside of the main calibration class - Fixed failing unit tests
bebb13d7d7ca2665fee97c0703e86ec637df24ae;2018-01-30 20:31:06 -0800;another location where an int was used but should have been a double
bb3c8aded81664db8145d066576a69db030effd7;2018-01-30 21:14:20 -0800;more otsu int -> double
93a014c94c3996f851c41e59f3c2696ac8c8eb21;2018-02-09 07:22:11 -0800;changed API for blur override
58c80a5a4fd736060d91b93e41f3105406169c5c;2018-02-09 16:13:24 -0800;cleaning up of override
9583ff2665ecf095eeeca076b518e538b9600180;2018-02-12 10:24:06 -0800;- broke benchmark, generate, and experimental into their own source sets instead of slapping them in test
5e30011150b4d4edcadb7820303dc5d85ebd9c34;2018-02-14 12:05:07 -0800;- speed up threshold image by 60%
e3735fcd361918ebbdb42734b05418a343f2678e;2018-02-14 12:31:27 -0800;- speed up several thresholding algorithms   * about 2x speed boost
6b21aaee00b2eda1684c8f2e762652d1c84b84ab;2018-02-14 12:52:59 -0800;- threshold local mean is more compact and seems to be 1/8th faster
515a12be75b1d2f3a360a7a944a297ad5e77335d;2018-02-14 13:10:16 -0800;cleaned up image histogram. Might be slightly < 5% faster
e74af16f47cb2b5b0797866f98bf768f818b2080;2018-02-14 14:53:02 -0800;clean up. block otsu
d2c7c57bccd9aa9dff26d3f208bc416fc0a7542f;2018-02-15 08:24:32 -0800;demo menu bar appears in the correct location in mac os x
be06514acdad44a98e1711c729c861137895a658;2018-02-16 11:40:53 -0800;- Images   * Gray images new support createSameShape(type) - Contours   * Created an interface for finding contours in a binary image   * Provided a way to override Chang2004 - Fixed dependency issues in some benchmark sourcesets
5ecb74b7747031358c8fd781c64767c28a2bd5fb;2018-02-16 17:31:01 -0800;- GImageMiscOps   * fillUniform wasn't actually inclusive on upper limit for integer values
cfd3968504b86cc190522908f7bf1726f7bc2cf3;2018-02-16 21:47:05 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
3490d7a8cbde7a94a28051ce02e8c771ad18b59b;2018-02-19 09:11:42 -0800;- ShowImages   * showWindow() adjusts preferred size to handle the case where the image is larger than the monitor
7812a645040054b4105234f7a1e7082daa584a99;2018-02-22 06:57:24 -0800;- adding a function to make jni easier
5491ed7602a5d7fa9124dd70d8c2a1ae1f69e589;2018-02-23 20:12:41 -0800;- ListDisplayPanel  * changed from JPanel to JComponent to make it more generic - QuadPoseEstimator   * Can specify if input is in pixels or normalized coordinates   * Deleted unused code that was sketchy
97b00fadc420c9008c935c372b9630c69ec39186;2018-02-23 21:25:34 -0800;- fixed unit tests which were broken by change in behavior of GImageMiscOps.fillUniform
7a19f2b238419cbd39757de62aaea58641eb345f;2018-02-24 20:18:43 -0800;- first partially working at custom gradle tools - Automatically generates a GVersion.java file with build info
bbcd70c3130e471f5f1f88dce23aba6ca45a8c8e;2018-02-24 20:43:28 -0800;clean up
12900f1b32a0f3eb68e88163352948e580557e6a;2018-02-25 04:15:09 -0800;- sketch of new split merge that has been modified for segments
1d6ced03961fa77b5916a9132c13015951fc885a;2018-02-25 04:16:41 -0800;- made GVersion public - fixed reference to old version in UtilIO
9f9c9a99d5a7fd1a9d81aba03e83caa52b4e09b8;2018-02-26 19:21:35 -0800;- passes specialized unit tests
a129efafe5af95387b05557d6d9e317043df514c;2018-02-26 19:31:10 -0800;- fixed abstract polyline test
e600c8a1874b27dd80756f55b864913bfc116b67;2018-02-26 20:00:50 -0800;- small changes related to looping
73c5956f2171c25891c74d79f7c1fe2ac93d2cc8;2018-02-26 20:01:14 -0800;Merge branch 'master' of github.com:lessthanoptimal/BoofCV
b6707043c0ceb7407432039275d6e9c254671fde;2018-02-26 20:14:01 -0800;- fixed problem with GVersion generation and access   * was definately fixed before and somehow got lost
ba3630ee52b6885023648fccaca697a8e6dc5870;2018-02-26 20:46:41 -0800;  * Added matchShape() to replace the more verbose reshape(image.width,image.height)
08aad0b348370b307d0b5d489241090a72a6e540;2018-02-26 20:49:52 -0800;- FFMPEG   * Suppressed warning message that has been smalling stderr
6bbb923bfa7e9444b6b404c48b0068f865d6ad0d;2018-02-28 20:12:12 -0800;- Fixing autogenerated GVersion file  * Fix brought over from another branch
bd3dae47afbc498611acf3f1c5f122a08fa14bd8;2018-02-28 20:25:53 -0800;Merge commit '08aad0b348370b307d0b5d489241090a72a6e540' into SNAPSHOT
7f22b7258f05657097010aea3f2cd3737e017080;2018-02-28 21:30:34 -0800;- ShapeFittingOps.fitPolygon()   * Migrated to PolylineSplitMerge - PolylineSplitMerge   * Fixed Bug where if a segment was the minimum length exactly it could still be split - SplitMergeLineFit   * Deprecated and will be removed soon
f1e996de7f9228d1179ce9e474d8b0c6e2941939;2018-02-28 21:33:38 -0800;missed factory functions in deprecate fest
e2848c8af11ab755ab141165bb117a07147d73c0;2018-02-28 21:36:10 -0800;deprecate
77630994fcba1fe49236406866a074bded228a16;2018-03-01 05:24:07 -0800;- fixed another issue with PolylineSplitMerge  * Would try splitting perfect fits if threshold was set to zero
b29d1ff0ae801a30bdd5fd6b9975d7a1aff5e281;2018-03-01 06:13:05 -0800;- fixed unit test
87a364c5d1512fed1c6c75b0ef78f6a4a39c63d5;2018-03-02 21:35:01 -0800;- ImageConvert   * Faster technique to convert between interleaved and planar
5b6550702c302a2edd02eecb4ece7cf31a7b2d29;2018-03-03 09:06:46 -0800;-Camera Calibration   * Fixed bug where width and height was not assigned to intrinsic during calibration
8e6ad32bafb18dbe25904aa47a8145837cb17220;2018-03-03 09:18:26 -0800;For universal omni the undistorted window is automatically scaled based on image size
8855bb17565bce824204278abfbcf572eaec9e11;2018-03-03 09:20:30 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
e47ad9869b3cdb6def976e7819531762ac607d84;2018-03-03 09:20:47 -0800;- adding comment that was lost
a36379bed0212deb49323729ee68ec7cd0e38e2e;2018-03-03 09:58:06 -0800;fixed image sorting functions - sorted by length and not name?!?
e67e9266dfc84396ca696cdfb42a7540933d1b3e;2018-03-03 14:31:03 -0800;- MultiCameraToEquirectangular   * Correctly handles NaN in equiToCam transform
bff62266218c46afdee87d4034f03c7c96c105c6;2018-03-03 14:31:50 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
bf6b6bd9f2761ecaddf7edd2005240f905c36932;2018-03-03 14:54:59 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
29b935a5f21429fc6959fe975401f3b216ec3c15;2018-03-04 20:31:31 -0800;- Adding native overrides for more convolution functions
4f6a4ebe2fc5ba9cd4e3cb6c686cbc2991e62886;2018-03-06 10:09:00 -0800;- added a comment about a potential new feature
721729f77fc986d1d231b5e4a8a68e171a9a2b91;2018-03-06 15:27:05 -0800;- Applications module is now installed - XY plot - Added dependency on JMB  * converted one benchmark over to its format
35f6bb5d245bdc22aa79cd79f5208c12ac09bd1a;2018-03-07 10:07:26 -0800;- changed native API for gaussian blue to take in sigma and radius instead of the kernel
2bacb201662f037788a4e9e10fa33547255e42c1;2018-03-08 14:49:18 -0800;- QuadPoseEstimator   * Added function to go from a pixel to a point in the marker frame
e4a695e6cb2ba7183de82fff150de12d810a4b84;2018-03-09 06:59:59 -0800;- Added @NullPtr and @Nullable
ef9b5761445cf06cab2c21161a9e78b8c4125a61;2018-03-09 08:40:27 -0800;- working sketch of GMM background
3a63e5eea77fccd70255816e5baa539523aaee2e;2018-03-09 08:47:25 -0800;- sketch of unit tests
2f7db382e6394f7d67abe273d254575936d117f1;2018-03-09 09:19:04 -0800;- Switched package for nullable. Turns out it's not baked in
167ec3811b829c81f0c9cc61c103b2cdc4082d20;2018-03-09 20:48:46 -0800;- GMM stationary for interleaved images
0e985f13b56928eb45b2a98895bbeecf22e9360e;2018-03-09 21:18:02 -0800;- retuned GMM - switched example over to GMM
5c40709c55a17ec4609e12a8e4d181e4b69e956d;2018-03-10 06:56:29 -0800;- GMM now has a single class for multi band images - Generalized multiband some more - Start of moving background GMM
7520fbdf26547d8c22c08b9d487739e9172e7abe;2018-03-10 08:50:59 -0800;- ImageBorder1D_* now all implement the same interface   * Done to make it easier to reverse out the type from the class - Updated version of javadoc referenced from 7 to 8
39bd0d45b3f2401003e79a7d25435ef0404ac279;2018-03-10 18:39:01 -0800;- Working GMM stationary and moving.   Still acting a little weird
cd0c4aea4f1ae905925454c6e395dda96aa36964;2018-03-10 20:30:29 -0800;- Tuned GMM - Fixed equations - Added test that verifies convergence of equations
27c593e4fdac0568ca6179a20080f35eaf6ff167;2018-03-10 23:07:40 -0800;- fixed number of side control for black polygon
4dcc2090b6e8c16b8056f538496b0f0dfebdeddb;2018-03-11 06:17:16 -0700;- Fixed GUI controls for polygon/polyline  * CHanging number of sides did nothing - Removed redundant configurations - Added variables to common polyline config
7f2759205338ee5956be1dd50671b6470efe4c4e;2018-03-11 06:46:19 -0700;- Tuned GMM Background so that it has a small number of models   * This way the foreground is something that matches nothing   * Matching nothing is easier to detect than classifying a model     as belonging to the foreground - Created a base config for all background models - Fixed unknownValue assignment in GMM
0013020d599e0577ce39e16aa097d91c0eb09e51;2018-03-11 07:44:45 -0700;- GMM  * If no model is matched returns 1 instead of unknown value
0017960222a350c821ef19e53f618b3d3225fe62;2018-03-11 08:01:25 -0700;unit test
9a28e544d28a7acd7255493c1f0ed25c21880343;2018-03-11 15:25:47 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
7598460237c3c65f6c364a831c24a3917b108f76;2018-03-11 15:26:23 -0700;- ConvolveImage* refactoring   * Removed WithBorder from class name for simplicity   * Made naming more consistent in general
d7a7941b0f75f955b7b60b838a14d68ad7b38e48;2018-03-11 20:12:34 -0700;- WIP adding getBounds to FiducialDetector
59d4c3a8ff585ddde7e974b20281f324cfe6b0f1;2018-03-11 20:36:11 -0700;fixed boundary for CalibrationFiducialDetector
ed1cef1d646e8156f0f149191ec9be6c6f10e388;2018-03-11 21:47:55 -0700;- Updated FiducialTrackerDemo - boundary is now a polygon
b45205b9ba4d5f478f60fd9b836ce82a9f4d4d5d;2018-03-12 07:45:29 -0700;- SaveImageOnClick  * Added a key combination which will work on Mac OS X - BoofSwingUtil  * Added a convience function for turning on antialiasing in Graphics2D - DemoDetectPointFeaturesApp  * Updated UI and can now open any image  * More mouse controls - FiducialTrackerDemoApp  * Simplified code - Various  * Updated for Java 1.8 features
faeec6e7d3e19b4bf5f25de295a24a0020bcb4ae;2018-03-12 17:45:11 -0700;- Added GMM to background model demo - Updated ImageGridPanel so that it will scale the image and keep it visible
5136e2c052a841d8c5c4c50edd45a9b0bfa84b9f;2018-03-12 19:23:23 -0700;- improved feature intensity demo
d8854874d2b13424580387b679daace8a7080836;2018-03-12 19:43:50 -0700;- ThresholdLocalOtsu   * Fixed bug where it was always trying to use a region of size 0
18ed4cc173f5a502bec8f5ad7964268bb698c4fe;2018-03-12 19:53:27 -0700;- optimized local otsu and it did nothing
42540efe5d76c9c6441a8c6e2a3976bb0efe5b26;2018-03-14 10:55:34 -0700;- improved visualization of polylines
f83a13c5a553f46bd3e1b9f346e204cf1e4fb456;2018-03-17 08:00:20 -0700;Updated DemoImageThresholdingApp
9eccaa8563678bd2e338ddde44e2927939ba856c;2018-03-17 08:52:06 -0700;- renamed DemoBinaryBlockImageLabelOps to make it clearer that it's visualizing binary blobs - shows a histogram than can be used to set a fixed threshold
8b20c90b3b09afcfb7dfa196a84fe718c9576387;2018-03-17 10:56:53 -0700;- added weight and height to FiducialDetector lens distortion - fixed GMM segmentation assignment logic
69ee4a52425a149c0fa98afc094a2999570274b9;2018-03-17 13:30:17 -0700;- re-tuned GMM again - added decay to background dmeo
c68414254d8639d8924cd1d4fad36646fa2a8866;2018-03-17 13:32:49 -0700;updating data
349d0787163f038bb05881ad0982726318ece2ed;2018-03-17 15:09:56 -0700;- updated GRhresholdImageOps
fbcfc23ae86e2a5cac40a431445027908f64b6bb;2018-03-17 21:48:02 -0700;- Preparing for v0.29 release
1a27fcc5b8888996987bd2dbddb09fc3cefdcd49;2018-03-17 21:50:52 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
e67f500676a49305b80c2261f4682c30b487fc01;2018-03-18 07:21:53 -0700;fixed polygon not being drawn
6b74a7be3c25f8ae7752fc3060304361d897f163;2018-03-18 08:14:40 -0700;- Fixed issues found when testing examples and demonstrations - PointCloudViewer now centers the camera in the panel - AnimatePanel can handle an array of zero length - ExamplePoseOfCalibrationTarget shows both views correctly now - Fixed type-o in ShapeFitContourPanel
cebf1f411da27780362396a41f6d4d53ad09632d;2018-03-18 09:31:28 -0700;- more informative error message if GVersion is missing - cleaning up function/class names
1e647d0b767c31a9f35f70f28e85a003a6596931;2018-03-18 09:39:56 -0700;fixed unit test
e9f8266e3841f10760acf61fab1e2f0b132183e1;2018-03-18 09:50:18 -0700;- minor tweaks to txt files
ea7fd7f018b7db021ffc74f74ccd8e9db57e398b;2018-03-18 19:49:28 -0700;- updating android example
c528d954c5cfdcec71de73681264eae711f32e5c;2018-03-18 19:50:51 -0700;- change.txt
d4e7352ec37657292b49eb3a86e1068bfab26655;2018-03-18 20:10:31 -0700;- adding bounds to fiducial example
cfca473976c0176a22ce92d4792a68a0baa48708;2018-03-18 20:24:16 -0700;- can handle case where the git command fails
4804d35549f08373426c1b54afe73be96bba0e04;2018-03-18 20:41:55 -0700;- fixed groovy's fix
dd753ad6b065ce4b06bb552e899669ce594ae900;2018-03-18 21:12:18 -0700;- changed version to 0.30-SNAPSHOT
2f00f718701f5f2201b2f9277e66005f90fc5201;2018-03-21 11:19:45 -0700;- QR Code demo  * check for show failures
2a79ee330742ef8d1fd6b684d35e9a8ae8701251;2018-03-21 18:36:03 -0700;- added controls to feature intensity demo - reduced redundancy in factory for one feature
fc11d1cd1a3f34f329200b813fe6a83e02be2c13;2018-03-22 19:54:50 -0700;- more improvements to intensity point demo
a56e324af18e8c4835290f984dd2ae362f40cca6;2018-03-22 22:21:18 -0700;- Changed pixel normalization from using a Matrix to using NormalizationPoint2D  * Should reduce the amount of overhead when converting points
c4f49e5f539913f7b9f3e40f0cf8d0b91dcdc648;2018-03-22 22:25:22 -0700;-renamed HomographyLinear4
9916b0fb7d22f7f82d96b6a71f7e271a6012a69d;2018-03-23 13:24:42 -0700;- Updated libraries it depends on - Switched algorithms over to using QR based null space
bbf65494960d3ce78a53fbc95627eb8edd9d1c7f;2018-03-23 17:01:28 -0700;- more migration over to nullspace solver
30c5b6ff2f7e20f61e1d13263ca983eea1fa235a;2018-03-23 18:50:04 -0700;switched null space solver over to more stable variant
78219e1c958c96d2afc8ecaf39ba4f0ae372664d;2018-03-24 16:36:28 -0700;- BoofMiscOps.sortImageFiles renamed to softFilesByName - Partial sketch of HomographyTotalLeastSquares
a346dc7c835cef94779b5380c90c844de06b0231;2018-03-24 16:36:38 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
af19f7eb09af69653c78773e3c52c3949c577fb2;2018-03-24 17:04:42 -0700;- changed null space back to SVD because results got worse in regression
cdec73c757f892f405bcdb33757df466735ba19c;2018-03-25 19:45:36 -0700;- Homography TLS   * Flushed out unit tests more. Fixed a bunch of bugs
30eea8bd25224888df17f8e3121814deeab0605b;2018-03-25 21:09:51 -0700;- Complete implementation but incorrect solutions - Probably reversed X1 and X2
c04bf9dcc43c75ef766f695e66818bf9f0ef0983;2018-03-25 21:57:28 -0700;- total least squares homography is passing all tests
fcd84ef2ee02f2910990ced58ca720b2a6d6a346;2018-03-25 22:13:38 -0700;- added elpipolar wrapper for TLS - added TLS to homography benchmark
4cd8dda1bfdc1dae0e5a5f3731343995668fff7f;2018-03-26 17:36:59 -0700;switch a few classes over to using a more generic interface for homography computation
1028394afb6255456b9052bc6aebee001e21eab7;2018-03-26 18:29:21 -0700;- comments and renamed runtime benchmark
e1c892abcff1b7229013cc3a63903f8a0ee1ccaf;2018-03-26 19:42:18 -0700;- some how the initial re-analysis of EPnP was. There might have been a minor bug but it doesn't seem to change results.  * reverted code and ran benchmark and it works just as well as new code  * new code produces poor results with 4 points just like before
6a86b32de5541ee37b191c98f65ce82a35022fc0;2018-03-28 12:03:35 -0700;- partial sketch of IPPE
f06caf062e4c8e642c116e71a99fc683f5049309;2018-03-28 12:20:26 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
f6d22a123f333cf9e90a6facdd7cb078511e094d;2018-03-28 22:48:40 -0700;- added line to detect a failure
0fced548932d24e93506d04d165ae64fb66ccd47;2018-03-29 10:12:52 -0700;- updated for changes in georegression
b13c13a5a0190972c0148c1aa318af9e753b7b0e;2018-03-29 17:03:17 -0700;- fixed failing unit by increasing the number of views  * Error appears to be because estimation was unstable not due to a defect in null space algorithm  * Increasing the number of views made it more numerically stable
974f7d64d907d1c70f799f0a962ddfd34173fdaa;2018-03-30 06:34:20 -0700;- unit tests and bug fix for IPPE
0334331e151995b7858f81cf1086d89979ddacfd;2018-03-30 16:59:01 -0700;- WIP
9f43702f04b28ce20745ce6405f0fd030e65f71e;2018-03-30 20:29:03 -0700;add IPPE unit tests pass
0f35dc69baa8a0a72b49f70d5722ae8426c42e03;2018-03-30 21:54:30 -0700;- fixed IPPE bug - wrapper for IPPE - updated benchmarks for IPPE
b66adc16558559c962113c679c967de9e8102662;2018-03-30 22:10:32 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
2a5b934ff0b586a981c0e722895540bc1606f44b;2018-03-30 22:12:05 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
739ec37ae56e370a8da78052547e2662de81c768;2018-04-02 17:15:11 -0700;changing to stable version of auto64fto32f
fb1c3c382b7e345bf8554a962aed670506d5499f;2018-04-07 07:56:01 -0700;- Now uses public gradle plugin
d260941468b3cd75acd9718483a1e6ba40574c01;2018-04-07 08:14:14 -0700;- changed name of version file to avoid confusion with other projects
7fd7a773e754ad3423585f282d87a37d54e3fb0c;2018-04-07 09:30:12 -0700;- upgraded version of gversion because of windows issue
19f6ef4f7ee7b6ccd766599c8922999c766aa183;2018-04-07 09:34:30 -0700;- changed BoofGVersion to BoofVersion
bc7b235bab94368abaef9e97426376411b7968bb;2018-04-08 09:56:01 -0700;- QR Code   * QrCodeGeneratorImage automatically has a white border
4ce95394f88ef715c533a5185f7bfb93985d2c5b;2018-04-10 21:12:19 -0700;- added another convenience function
97c822ad16b4476a835e516b816da8b18a803939;2018-04-13 09:56:07 -0700;- updated gversion - tweaked build script - added missing functions
a3ddfac3ea5f86455198f381990939b2a2d49fe9;2018-04-14 08:42:28 -0700;- Added isSameType to ImageType
d8ac3c929811367865838e72a0be07864e6fab0a;2018-04-15 06:37:38 -0700;- createVersionFile can only be run from the project's root
fb3fad66d4819c234d4e3a0cece1c95dcaf0badd;2018-04-15 06:49:41 -0700;- unit tests for ImageType - ImageType.setTo()
d30094959b84364d575224531790474b73c23239;2018-04-15 08:17:56 -0700;- fixing build
358151d03b021bef7ae437135b2a1213f9029185;2018-04-16 20:01:34 -0700;- removed reference to multi image
c7d0ef66a05fbf9720828a6cceb7a21004e2d666;2018-04-16 20:51:47 -0700;Android - adding new camera2 API code
0fe9a905e8ad3f57935e40368683f483e31bd7d6;2018-04-16 21:16:55 -0700;- ANDROID builds for real now
03b2f065cf53f8eca664ba8894cb9f00b0aca616;2018-04-16 21:17:32 -0700;- upgraded version of gradle to 4.4 - changed many compiles to implementation in gradle script
a79613430d7287d2f2019768349837aa0c348f7c;2018-04-16 21:30:23 -0700;- let children have internal access
487ca1e8fda203e413b9a91efa947fc1047eab02;2018-04-16 22:08:56 -0700;- rewrite of android example for new camera2 API
e4f2429f0403009a05859b3cb665bd061796c89b;2018-04-16 22:10:42 -0700;- added more comments to that other people have a chance of properly using the new Android API
f2cfbfbc53edd6e604c90fd189aacf081a01e9b3;2018-04-16 22:11:28 -0700;fixed really bad type-o
b619c156564e6eefd3223b99ddd0ed6a0ab480dd;2018-04-17 08:00:33 -0700;- fixed build  * errors showed up when run from command line but not IDE
d51048b33cb5046fb7181a49ca860bbba5829f6e;2018-04-17 11:44:27 -0700;changed an android depdencency to compileOnly to prevent that specific version from being required
6c461d717a76a2054717ed4ad4c185ceb0300459;2018-04-17 20:46:15 -0700;- fixed android issue on older phones - more debugging messages - simplified one function
64f90eee0765f3f379cb36241bc48edeb9cf47db;2018-04-18 05:38:36 -0700;- ImageConvert   * Added convert between planar and interleaved of different data types - Removed more references to multi image which was changed to planar
7223d75be5d2de514957c8158dffc849286bb584;2018-04-18 05:53:37 -0700;- BOverride for Android image conversion
21d740b623d9956317107a46dae314f3b16d7c80;2018-04-18 08:35:47 -0700;- found a work around for the IntelliJ bug! Don't need to downgrade IDE
c08f2b7be6b5c77527e72a1b543abd88e5ef63e0;2018-04-18 16:23:30 -0700;- added a background handler for some camera2 tasks
e9866b7715052035a0065bbd40befe608ee1d976;2018-04-18 18:00:52 -0700;made camera objects match standard tabbing for project
b4863b06d37a34cee8d0594f6cab2a552eb56678;2018-04-18 18:13:52 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
67ce483d1a5c0797c038ed5b4cc1603a5881ed2d;2018-04-18 19:35:31 -0700;Android - handling weird edge cases - onCreate() is called then immediately the activity is shutdown - Sanity checks to make sure functions are called inside the UI thread
7da16149699f2d7fb2e30f54a19baa982cecaf50;2018-04-18 19:37:17 -0700;moving average - reset sets average to zero - provided access to more variable and ability to change decay
8e9fc2ea4bb610a939a00504dd4ba68b5af3e541;2018-04-18 22:48:32 -0700;- dealing with more android weirdness  * Handles case where the camera opens at a resolution other than what was requested - more debugging statements and accessor functions
7abcdf9fbcd3afe24851c8e323f801ebd6f1bf89;2018-04-19 17:35:32 -0700;- cleaning up android code a little bit
903614281426393a6c15c9a3fb3062b78401f779;2018-04-20 09:51:36 -0700;- Fixed QR Code version 0 bug - Android - converted code into a function videoToDisplayMatrix
732705cbafd8b96b2da61d89f3ee01b35135283d;2018-04-20 10:52:12 -0700;- fixed QR code crash bug for real  * added unit test
e176156666334b746f593b5d8a912b5d6faa65e3;2018-04-20 16:16:23 -0700;- camera ID is passed in for camera selection - list of resolutions is for YUV_420_888
5fe474945239fb5e19a8afb40bc26bfb54bf77c8;2018-04-21 11:44:41 -0700;added another variant of FAST which is closer to the paper - no intensity calculation Fast features now have mins and maxiums
08ea1e5d6d715cc61c3dd33bb5cde08b03a27c8f;2018-04-21 16:12:00 -0700;- Added Stoppable - Can abort out of some segmentation algorithms
7d940e23dc4df79c931af735be18ae8680cb9e1e;2018-04-21 21:06:16 -0700;- made chessboard detector less annoying - on the phone it was easy to consistently reject valid patterns - border squares are the issue
1567ebc0f92ef9788ad01310226a4c134dec7989;2018-04-22 06:15:43 -0700;- Added support for converting images to different color formats in  android
2a2d614f63ed1d8ec19b684a6e2f147a3ded8ef2;2018-04-22 06:41:35 -0700;- moved stoppable to DDogleg
add7a8ab4b3a7fa58fce0cff7f8205c82c00682c;2018-04-22 08:59:37 -0700;- made android camera2 camera locking/unlocking much more rigid and easier to enforce
03e5386a70f2727e6fb7dd7c59c25fc9139aec29;2018-04-22 10:37:49 -0700;- handling cases where the camera state changed unexpectedly.
8da22f66106a972f3a7ef2ee37c1ff9d83a894f5;2018-04-22 11:52:48 -0700;- removed setcanvas to identity. Found a fix
b86bddb91dfdcb763b6d3791da27b2cd8eda4c6d;2018-04-22 21:19:43 -0700;fixed issue with it not being able to detect close up chessboard patterns
52e5f6340d178c34d9a1f7fe729775fe52129c9f;2018-04-22 21:21:04 -0700;assisted calibration saves debug images with a number now
33af2a5efbae0ff7f75f616edc22efe0662e82b3;2018-04-23 21:59:15 -0700;- detector demo apps now save images if an exception is thrown - fixed bug in AdjustPolynomialForThresholdBias where it would cause points to be duplicated   * This resulted in a NaN appearing later on in processing and an exception to be thrown - More sanity checks for duplicate points in polygons
039040af944159a1ccd01dded2fd3d21b97d2703;2018-04-24 18:57:17 -0700;- fixed build issues with benchmark and imlpementation - ColorRgb will resize the dst in one function
5ab0bd04dac281dff3a64e5337e0335307ecc8a0;2018-04-25 14:15:44 -0700;- ImageZoomPanel   * Saving the view saves what you see exactly now
c4830e66c46ba05fe9e02cc942d3fa1692066410;2018-04-25 20:39:03 -0700;- Fixed YUV420-888 bug
527e9b73d47ed6ca17384a4cf0f689b618d6985c;2018-04-26 09:12:53 -0700;- Simplified YUV 420-888 code  * might be a performance hit but the old code was unmanageable
f834edb77dd67f5a9a6d90d0704d6879ef52e5f4;2018-04-26 09:53:14 -0700;- YUV-420-888   * Attempt to fix another crash   * Checks size of U and V buffer to see if the hardware is buggy   * new equation for incrementing U and V
795d40f0e5fe2eee661bd6fd98bfa27d130d247f;2018-04-26 14:29:54 -0700;- speed up YUV-420-888 convert code - image conversion benchmarks changed to JMH
dcea979fd6b8cb6ed023346791fb8920ff20318b;2018-04-26 17:52:42 -0700;- unit test for YUV that can only be run when modifying the classpath order in IntelliJ - pointless finals added
67060e60f0759ac8d8b3864ce86d59c30cc802a8;2018-04-27 07:39:28 -0700;- ImageMultiBand   * Added reshape(width,height,numberOfBands) - Code cleanup in camera2 stuff
79863220cd483398979cb5ca818062cd63ae7b38;2018-04-27 08:25:03 -0700;- gradle: Attempting to simply dependencies - ConvertYuv420  * Tests for odd image sizes to see if that causes the crash that was reported
5c410c959976fbdf35f7dad2b898026964f54672;2018-04-27 11:54:07 -0700;- LinearContourLabelChang2004 is about 7% faster   * Did a bit of refactoring to remove references to white and black - fixed unit tests
a3c435eb8bdf117092047b43fef7ec60821ebf28;2018-04-27 13:23:23 -0700;- ImageMiscOps uses Arrays to fill now
482b6352420efd460f7eb86f3e596b267c9cfc33;2018-04-27 21:30:21 -0700;mostly working sketch of new contour tracer
f76e3bcb071675f8bd3a82e8287a3134b5a1b3ca;2018-04-28 07:48:49 -0700;- clean up of new contour tracer
a134ec34a198244fc39e98a399e14304255eeb29;2018-04-28 08:17:26 -0700;- more work on external contour  * abstract implementations
15c1bb538432602af6a2a9e84576b6b736f1a665;2018-04-28 09:57:20 -0700;- replaced some functions with the new external contour finder - added more unit tests - New contour finder is BUGGY needs more work
2631256d47f15bc9a2779dcb19e28937c8a39ba5;2018-04-28 11:34:43 -0700;WIP - no significant change
504359c532cc4290db4e31024093949ece1e017f;2018-04-28 12:38:20 -0700;- new contour appears to be working well - tweaked QR Code detector so that it works with new detector
72959f2897662dd16a5911a90cf550ac9b612805;2018-04-28 12:54:03 -0700;- noted new addition in readme
3c6e077978bc05eca11862d9b5f88f115deab140;2018-04-28 16:37:02 -0700;- added histogram udpate to calibration demos - limited number of points sampled in histogram
88c3050775506562491bb9e75881d0b617ef54b8;2018-04-29 08:55:38 -0700;- I think the YUV_420_888 issue has finally been fixed after getting a more detailed bug report
d02d1a061cff79783204c9337b2930f5765b3aa0;2018-04-29 09:42:53 -0700;- more checks for null pointer if calls are made requesting camera info when the camera hasn't been initialized yet - moved camera lock into struct
3d3840194bacfffd246c63fcb598ee3e42f9fdd6;2018-04-29 09:45:49 -0700;- updated gversion-plugin
95fef9c432c6a38420840f04d402984818f488d5;2018-04-30 09:32:03 -0700;- fixed another YUV crash bug. Y channel was truncated on the last row
ffb204fd753b92df3a82d37720561e9c89e019d2;2018-05-01 10:01:27 -0700;- made it so that contour algorithms which add padding can have the binary image  generated with padding already. This removed the need to copy the binary image - Changed how binary data is rendered. checks for zero and not zero now - Integrated these new features into square fiducials and qr code
3160918ce51c9ef993ad17d7cd8bcf1a9e9e24a4;2018-05-01 13:20:14 -0700;- changed signature of BaseDetectFiducialSquare back to what it was before
124b045f782610e05949a144febf403bf50f2e2a;2018-05-02 08:07:23 -0700;- attempt to fix problem when a request is made to open the camera then immediately a request is made to close the camera  * Tracks current state transitions.
146e7d7d6e0a763c902433a5505f2fec8187acc7;2018-05-02 18:29:44 -0700;- prevented a variable from being set to null that shouldn't be - default number of bands in bitmap to boof from 4 to 3
99a0f5a10d4f5d75717bc0ab86daa74f73880e35;2018-05-03 08:36:58 -0700;- Attempting to remove the possibility of the camera being opened twice due to rapid state transitions
71700545f1bc58c2feb1974d537e59f5922b56ef;2018-05-03 11:19:56 -0700;- swtiched DemonstrationBase over to a thread pool - Simplified InputToBinarySwitch
e06327f10f742aca9fa266828901187dacca5c5e;2018-05-05 07:44:05 -0700;- fixed "interpolate hack" it was only selecting the first corner!
0dbd41abb983e5862777b1627d96da511bde23ce;2018-05-05 08:12:39 -0700;- if a polygon is adjusted due to bias and has the number of sides reduced this will remove the polygon from the list if it's too small now
403ace0b4ebeedcda837981204c28ceafa601f72;2018-05-05 13:16:29 -0700;- simplified BaseDetectFiducialSquare   * Improved its unit test
01823a620440189e09dd2fd5c07ad1710dc6f974;2018-05-05 14:44:20 -0700;- adding hack back in since it actually works  * Stability went down significantly in regression test
b0e8e33cf24aa08b845691d18a335bf760c61561;2018-05-07 10:06:19 -0700;- added fast variant of qr code detector config
aeb657bfca4529a3e259b2d953957e693f9ec644;2018-05-08 21:50:54 -0700;- Polyline enforces minimum side length completely now - slight improvment to calib detect demos
100ccbdf5d8a619b822d6c919d58eeceb58b9d00;2018-05-08 22:00:14 -0700;removing sanity check
0bfe7ad987257eac935feedd33d59f87caf389d0;2018-05-09 09:03:29 -0700;- attempt to catch a closed camera and this fix image closed exception
33582dba2a48c1d8efc6340b1f65c9566e3c7fc2;2018-05-09 13:00:10 -0700;- fixed ThresholdLocalOtsu regression
7ce9dac004b546db0bb872801f57984e10f1ce89;2018-05-09 13:02:39 -0700;- fixed/ignored chessboard unit tests
de5fe4fc293850ffa5189a7aaf3539e3ccd573bd;2018-05-09 16:59:53 -0700;- updating default polyline turning for change in algorithm
9b1de8f73781f81bf97836934b1f12aeab5c7eea;2018-05-10 10:08:09 -0700;- moved YUV 420 888 into boofcv-ip module so that it isn't coupled to Android's Image
2ca14352506a8a24f135cedbc4364f86648e6747;2018-05-10 16:32:35 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
91c839af4104c6b1937343ad10d97619df303f99;2018-05-10 16:33:20 -0700;- feature detector inside of a tracker can now use features which are minimums and maximums
8dd43611c49e5d8eff82f5569e6f01392dced570;2018-05-17 09:01:52 -0700;fixed android YUV convert benchmark
56ff04adc903c91ac085a97c6f020e44bba95cac;2018-05-18 07:06:24 -0700;- work in progress for new fast corner  * Samples using a heuristic designed to reduce number of samples needed to reject/accept
64b24b10a4f3e926eceb750eb641429f9c4c3f2b;2018-05-18 08:47:27 -0700;- WIP build is broken because new auto code isn't in repo  * Tests have been updated for new code  * Doesn't pass
11d6b60cdc3c96a3d127aaff901f83e094be179d;2018-05-18 11:19:57 -0700;- Fast Corner Generates correct code now - Code is too large for JVM to optimize and runs much slower than it should - experiments shown this can be fixed by splitting the largest chunks into functions
99a6312b3417937b384e7412054188f52476c987;2018-05-18 14:06:14 -0700;- split fast corner into functions
b8604d8680bd51ba48ef5aae4150c7fd32c8b0c0;2018-05-18 15:17:19 -0700;- split fast corner into functions - adding working code
89a57d85372b73e66cdd1fe2a883caff41ad2776;2018-05-18 20:41:31 -0700;- added support for two sets of features for DDA tracker - refactored names of fast corner classes - fixed unit tests
425b2e5e8ee320736535c16740b797c9d5bf009d;2018-05-19 20:38:53 -0700;simplified equirectangular to a camera model
30b0a4e4d9e8b29f7471188756b1551b9ae87199;2018-05-19 21:16:22 -0700;- fixed auto generated code
f079fda694bc0b9787a645888a7cf56e3e9654b3;2018-05-19 21:21:57 -0700;- fixed unit test. Now sure how this was missed
8248e8b0ab8501f02d75af0473fb495c2bf02253;2018-05-21 18:52:57 -0700;- Updated version name to stable - fixed bug in association visualization  * Couldn't handle case where there were more associations than left features
93c52a3589edbbb4c6f1a4867efdc8a6128d1d80;2018-05-21 19:07:27 -0700;- Improved circulant visualization app so that it sucks less  * You can now see the region you're selecting
d456a55e64dcf9f159182a0c6f6f478d80cf8276;2018-05-21 20:33:00 -0700;Final 0.30 commit?
fa1f06b1c0aab95ba1ad4bd1e79c685da030812e;2018-05-22 05:45:26 -0700;- updated version to 0.31-SNAPSHOT
de8fd4d036dc8adfeb499272f10ea463d8964391;2018-05-22 06:08:22 -0700;- Updated examples to take advantage of edge only images
2f96c095e48524807f45f075e5ce81e1c63d5b31;2018-05-25 10:11:39 -0700;- updated gversion plugin
4878586747dc415b4dce3e276256d2d89d021bf7;2018-05-25 11:42:50 -0700;- fixed applications
02f9d60aff4a3277c8cf55c162a169120f46458f;2018-05-25 12:44:48 -0700;- updating gversion again
4e3f90e8cb47636b15cddd72c6552a84fa0eb9ed;2018-05-28 21:00:37 -0700;- ImageMiscOps  * Added interleaved support for copy, rotateCW, rotateCCW  * Thanks Frank Jakop for the suggestion
17f7a6a134dc2f7567ba87eef0da3796db43c752;2018-06-10 12:41:38 -0700;- Start of adding a first pass at sparse bundle adjustment SBA
959ec81f18475c0ff92e6b607f9c4a64dd1dcf68;2018-06-11 21:18:08 -0700;- WIP on scene reconstructure - sort image list - copy constructor in AssociatedIndex
ac14fd8f11bf7503389cc8be2c26fa3ede55ed04;2018-06-12 21:12:31 -0700;SBA example is working just kinda slow
cb9b932a6f21fe334a41290a7fdb1c62193637a0;2018-06-12 21:32:05 -0700;small fix
dd15a094482284fb1118e3930ec526a7d2a881ee;2018-06-14 06:28:25 -0700;- WIP sketch of new BA API
a6996efc1e7ce5e80ffb0653cf3524d104d686df;2018-06-16 06:53:36 -0700;- WIP sketch of new BA API
49ad45c170dae7b30cbef9f8aa5f5a5964ff0f3a;2018-06-16 07:42:22 -0700;- unit test for BundleAdjustmentPinhole - fixed spelling errors
5ad73a4c4301647b8294fc82c9a278f7a6582aef;2018-06-16 11:29:12 -0700;more progress in writing tests added codec function
80a3213ecf0534196c3a3b587f4eb507bfbd7d1e;2018-06-16 14:22:56 -0700;- fixed bugs in pinhole and full jacobian
b0e3eb7b680a3f6221493d9d70f92017a5adaf34;2018-06-16 15:15:05 -0700;- partial SBA pinhole radial tan - complete sketch of sparse algorithm
6ffc5ea828e354edb0b723849e169e8342c0f62d;2018-06-16 17:21:40 -0700;- got radial working. Need to simplify equations
fd4f3dd4c7b3ff3027256c8a4e50b5b7a5dd1bde;2018-06-17 07:53:49 -0700;- simplified equation
c09887cf9e550ffc6dc4be59f0f29e154e867282;2018-06-17 08:38:32 -0700;simplified the equations some more
d1a37f7976ec1a2e0fa8fe41bbd6e3f30ff8d5aa;2018-06-17 11:16:59 -0700;- updated example for new bundleadjustment code  * More broken than before - Wrote several tets for bundleadjustment
ae568fd2d90a245c02d3709aa59c8ebb18df90f9;2018-06-17 12:10:16 -0700;updated unit test
acf7e778ddf77c76a77583fd4aa201364db50aa6;2018-06-17 14:03:51 -0700;- SBA TODO list
3174488e29c579d6643b5950779b759a4c633c31;2018-06-17 14:10:51 -0700;- Deleted old Bundle Adjustment code
bef95141a965bf2e13bea0f87ee32766e24aa81f;2018-06-17 15:20:33 -0700;- changed parameter order   * massive speed up
29701f867e9a852fb134267525f7e30057d27338;2018-06-18 18:22:54 -0700;- Example is getting closer to working all the way
854aabf3f337cf6cddb1bdc0a7456df85ef04711;2018-06-18 22:25:19 -0700;- fixed more issues  * tranglation into wrong frame  * bad removal of nodes
a1d1a20ec6dd1741e2e343de710bac1948e7443e;2018-06-18 22:30:14 -0700;- fixed a type-o
5a000dd6b77cea64c610cf27d4340772f8a0ada2;2018-06-19 21:01:03 -0700;- SBA example is working
76ce8aadbcf55ac2d2613725c89d1845b460748f;2018-06-19 21:02:36 -0700;Merge branch 'SBA' into SNAPSHOT
3898140b1ab435f766a176688aadb226e275a9e0;2018-06-22 07:51:46 -0700;- Modified SceneStructure so that homogenous coordinates are possible - comments - removed dead code - refactoring
9c850450bff65755b3987c7a2bdafe600abad2b5;2018-06-30 12:29:06 -0700;- initial sketch of classes that provide an initial estimate of the scene's structure - refactoring of multi view related classes
0f26b8fb88173d66a784692a0a6fe1241029e1c6;2018-06-30 12:47:18 -0700;- fixed broken unit tests
b3b27e786f5b7ec669d607b2883fbb9e9a9d985c;2018-07-01 06:51:48 -0700;- Partially working refactored SBA example
7af0080a836ff4385f2a5333c5102594242c307d;2018-07-01 08:38:08 -0700;- fixed one problem - added unit test
e3521d895cc1b825805937fe7edd1fa41ddd77a2;2018-07-01 20:37:29 -0700;- found problem reconstruction is working again
5ddfa9883805072672aba64e521de9301636b211;2018-07-01 23:22:06 -0700;- javafx point cloud viewer
eca882292ed240a633353cdb6d636e472199cb8e;2018-07-02 17:09:58 -0700;- made javafx an optional dependency to examples
7b73ee73eb2438dcca5e40fd3017b79e50266de8;2018-07-03 22:25:21 -0700;- improved the two point cloud viewers by a large margin
47a2c35485aa5c5c9ba7e1641a01a440c6d8b81f;2018-07-04 10:32:19 -0700;javafx point cloud view is working again
c8b1f145c593f8d9fa281985a7a01f4050d41b64;2018-07-04 13:01:52 -0700;- removed old point cloud component
7692dc56cf5b4d433aa666b2d362526236d1f020;2018-07-04 22:42:02 -0700;- updated for changes in nearest-neighbor in ddogleg   * don't need to create arrays for each data type any more
60ffb091db6e42493c22d714f90e10c7df8af412;2018-07-05 19:09:48 -0700;SelectBestStereoTransform unit test
ca3caf748e05b1d38e6932a7d8cbabb8658d7133;2018-07-05 21:55:12 -0700;- more unit tests - cleaned up names in PerspectiveOps
c9537dcb431c047a28631a950675438c2d576468;2018-07-06 12:47:54 -0700;- Added ratio test to nearest neighbor association - changed function name to make clear which threshold we are talking about
8416c6079031627a0ee0e28d9cd2492bc404f6f2;2018-07-08 17:52:18 -0700;- updated for change in ddogleg - unit tests
0f981798e03013ff01e4f59dca12d851bea83fca;2018-07-08 21:06:15 -0700;- unit tests - turned off auto power of 2 to some scores
b67558444dccacef457b3810cdac695c45ebf5d2;2018-07-08 21:10:46 -0700;fixed unit test
a1184694be0ce8a8c2ef5d0675e9408f1b2656da;2018-07-10 06:28:14 -0700;- broke off image connection in scene unordered
8135db37950a4326003f460f09d123dc59511390;2018-07-13 18:46:23 -0700;- improved algorithm which uses stereo estimates as much as possible - By estimating Feature locations using local information it's hoped   that the build up in compound error is reduced
0b954227f0529764ddd3b0b8507d1f979198b14e;2018-07-14 09:26:52 -0700;- first pass at pruning for bundle adjustment
91bf6f900ca7e0ffe63d93c444d43ac7e4c10825;2018-07-14 16:24:12 -0700;- prune structure unit tests and extra sanity checks - refactored feature to point for consistency
fed6765bde162306b838ae75ca59633b9496cc01;2018-07-16 17:39:42 -0700;- BundleAdjustmentCamera is now an interface - Added BundleAdjustmentPinholeSimplified   * 3 parameter pinhole camera model - Added BoofMiscOps.milliToHuman() - Flushed out PruneStructureFromScene more -
034f39722e047c11c002be26aa26e4d1fd35c497;2018-07-16 20:38:25 -0700;- clarified javadoc
9e3fb1239b4ce3078aa717e98155b1f5bac5c8a0;2018-07-17 05:25:48 -0700;- PruneStructureFromScene has been fully implemented - Unit tests for it also finished
95c139482444777e897da0edf32a81b8e5ccfa48;2018-07-17 06:20:11 -0700;simplified bundle adjustment camera  fixed unit test
656abb607d7d141c4d4949fcedf23f74ef9e953b;2018-07-20 11:16:01 -0700;- ImageMiscOps  * Added extractBand()
a82be5b126a48c47154fcc13c5fc7e1625ddb02b;2018-08-05 13:03:34 -0700;- updated for changes in DDogleg
a3e5c1e7180ac3a08c4170c4cb5c41ff2558057d;2018-08-07 14:30:23 -0700;- Fixed android example and improved android code comments/JavaDoc
8654c8a8eba98ac8d534cfb9235c781a3d24f27f;2018-08-07 18:59:03 -0700;- Fixed spelling error Shur -> Schur - Added verbose
ad09df4deebf7e9506133837dd01bc9c511fa570;2018-08-07 20:35:17 -0700;- correctly implemented verbose
fafdb987122ff038246d1bf771064ae6c50e2a3a;2018-08-08 11:38:23 -0700;- removed synchronize for performance
1ee9e18bf4666ff42bc562242cbe795e48d5c029;2018-08-08 18:05:20 -0700;- VisualizeCamera2Activity  * Fixed example  * Removed lock from bitmap in VisualizeCamera2Activity for performance
cf0c57123ce13a5f97684780f50304456bf86011;2018-08-09 13:56:03 -0700;- Added gray scale to list of color spaces
f08f1deba6a15b760ef328c55bc96a97b8b71519;2018-08-09 18:28:04 -0700;- switching from java to java-library gradle plugin
720820dc9105e6ede8c702a97c8a17af658ec608;2018-08-10 08:56:27 -0700;- bundle adjustment scaling
acfff1cf96b5863aef0b6d01d606ed92b7971231;2018-08-10 17:26:23 -0700;- fixed autofocus default - Provided access to CameraCharacteristics in configureCamera
91ae432f5018fdf75e600426049faff9b1f8fff5;2018-08-11 15:24:25 -0700;- added fit score to BundleAdjustment
85f17942cebc2c0717b250d93f43e3b70606e9a4;2018-08-11 17:55:54 -0700;- changed bundle adjustment interface to make it possible to print initial cost before running
8e2cf6e0ce75c2e56129909eb03c9862d0ff14d0;2018-08-11 19:51:45 -0700;updated for change in ddogleg
88c7df679ea1dd63fcd20c2ee3651bbafcec8b04;2018-08-12 14:41:17 -0700;- better unit test for bundle camera - changed bundle verbose mode
082ea34a802803db202967f430c1badb56ae16d7;2018-08-13 17:16:23 -0700;- extremely minor changes
7a5eba914ddc66d93660c54e827dfb60c82ab386;2018-08-14 19:58:11 -0700;- renamed bundle adjustment cameras - moved bundle adjustment in the large (BAL) into BoofCV - New example just showing bundle adjustment
7a4e4a3ed378a333d6eab58e9bb0e64acc3e41bc;2018-08-14 20:05:01 -0700;- updating priorties for this release
5b6a806719b5e98b574af30943cc5085014e7c25;2018-08-14 20:05:49 -0700;updating data
9fa8d98a2a56d0eb61ec7e10a6ce3a00555b4fac;2018-08-15 08:01:30 -0700;- Android  * fixed AE/AF type-o  * Added double buffer option to visualizing android  * Updated example
47c1ae4142cf079872e15ff9783ca08291c6f761;2018-08-15 09:50:29 -0700;- updated for changes in boofcv - added fast mode - updated readme
dd9d38073f4bd588f430486e81399ae7dfb5882e;2018-08-15 09:51:25 -0700;- avoiding locking potentially killing performance - added a warning for future work
2a1ed15aba956cb6fea28fd3bb74646e96a5693f;2018-08-15 12:31:38 -0700;- Added change exposure example - Added ability to change camera settings without shutting down the camera entirely
3739039a844d7a6fa9a0c242d05ef934684f2e72;2018-08-15 12:35:02 -0700;improved code comments
7004ca1542e1f0bb55a05cd1bce92521a989949e;2018-08-23 19:17:49 -0700;- changed to LM
d597ed0563cc9a63ab59b64d3880de25101ef683;2018-08-23 20:14:02 -0700;- updating gversion
a050c418149b7069bff3e216f7cb1308cd36e906;2018-08-25 14:43:35 -0700;- NICK Thresholding - Fixed old generate code
a7c5be9c4c51c8facf442a799e9ffccd20b41375;2018-08-26 10:15:33 -0700;- more NICK thresholding
787bacd33b519b6fd11659cb8a2c01d28ec7d657;2018-08-26 11:43:37 -0700;- changed PairwiseImageMatching so that cameras are specified independently
cd2d9397df7292c92c8ffd670818023a62f6f91f;2018-08-27 17:50:42 -0700;started to merge calibrated and uncalibrated together
dba072937d1a9a82be358d4476ac2c0c8e434fdf;2018-08-31 17:48:10 -0700;- sketch of linear self calibration
7bf4ccac7544a5344822a4f6fcb678ea71ae5872;2018-08-31 18:39:02 -0700;- realized linear solution was unique to each frame
bd093edb728d7594b33d2582580740d770db03f4;2018-09-01 12:50:50 -0700;- rename auto calibration to self calibration   * personal preference
5ef72a5a860009adbe40e1a1822b49bcfaf0eda5;2018-09-02 13:48:24 -0700;working sketch of non-linear refinement
e1ac7ed20a3fcd57c4b2f39bc289109890b4bf24;2018-09-02 15:54:00 -0700;- non-linear can change have intrinsic parameter assumptions configured
be92f3c8a79a3f08d956be656ad0c30e585f6b69;2018-09-03 07:57:19 -0700;- sketch of calibration from pure rotation
a8bccc6c7a4b249cd2ca85dc9edeb8c6f65457af;2018-09-03 12:35:36 -0700;- better detection of degenerate geometries - more accurate tests with randomized scale - flushed out pure rotation more, realized I did the math wrong
6f3ac4192651270758c9837b41c00836bd89bf5b;2018-09-03 13:42:18 -0700;- fixed equation, but too many singular values
4ea811b2d6f97fa37558f26f668c057fd72901c3;2018-09-03 15:15:49 -0700;null space imlpementation
5b161195e0f2abd73cd1d0ee8dc0f991f57c1ae2;2018-09-03 18:35:27 -0700;single rotation self calibration is working
bfc38a2fc0d386360fda6504777e718e40712d98;2018-09-04 19:51:17 -0700;- projective triangulation - improvements to DLT triangulation in general - Created interfaces for triangulation in the uncalibrated case - Created GeometricResult for giving more feedback on why something failed - start of self calibration example
924c1f3149f1a89ef96abf1a5f5be3a145eafe71;2018-09-04 20:01:17 -0700;fixign build
a2e17e83794f692295f0846caa407e8cf54d1dbe;2018-09-06 17:57:33 -0700;- sketch of new linear reconstruction - formatting in trifocal print
c4c92896abee83664f27794be9d0893aee867fe4;2018-09-06 18:27:27 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
c6bef993311e696eca6171cd63add1c7fc2b8255;2018-09-07 17:13:10 -0700;- Projective Reconstruction by Factorization is working
39399a0e984f21909584a903482ab14594ac2036;2018-09-08 12:20:18 -0700;- simplified function names in FactoryMultiView - functional first pass at structure from homographies
96a8fb72870c2cdcefca46e84ca2e190cd2839d0;2018-09-08 14:03:05 -0700;- normalized input pixels
e06d8b0e5563b2e29afa4559ee7aaf2861feba28;2018-09-08 14:14:43 -0700;- unit test for points on plane at infinity
ee933e4fe24810bad4c90515faa97ab77bbf0476;2018-09-09 08:20:49 -0700;- refactor for projective bundle adjustment  * made files more generic so that they can support metric and projective
8d24f6e1280a77edc1349ba44d6919b651297683;2018-09-09 14:46:34 -0700;- first pass at projective bundle adjustment   * supports regular and homogenous points
3fc4220a864521bf9ddb49e29f29679dc9fb80e0;2018-09-09 14:55:46 -0700;added another test for homoengous coordinates in projective
94f1c556a07e957a10939881f091fcfaeea103aa;2018-09-09 15:09:07 -0700;- created configuration for bundle adjustment
b62a006f8c5872d388a870777b86b2a4ef959138;2018-09-10 20:14:27 -0700;- expanded bundle adjustment scaling - more projective bundle adjustment tests
cc1219bd213d9a39085f85f194fc3a2cd3924e22;2018-09-15 17:20:41 -0700;- Updated PoseFromPairLinear6 so that it can work with homogenous and projective - Updated for change in ddogleg - Major refactoring of scene structure
a7f1bf7732e660ce3752e9b8f987c2930df492b2;2018-09-16 09:15:59 -0700;- Fixed ApirwiseImageMatching issues - Added EssentialResidualSampson
cb12a2c0bfcc9fcf73ca5e115750e1ce29f99880;2018-09-16 11:36:17 -0700;- improved verbose mode in PairwiseImageMatching - sketch for new unit tests - fixed bad magic number in PairwiseImageMatching
a324c9705c29369ad709fe6a58bff8022e7f735a;2018-09-19 22:52:16 -0700;- fixed a bug that caused the GUI to crash because buffered images were incompatible
4f79b87976a90703f715b8cad6f37516f6b4f612;2018-09-21 23:20:59 -0700;- SimulatePlanarWorld   * Only renders surface when the normal is facing the camera   * Added unit tests to ensure that all flipping/mirroring is handled correctly - That required a bunch of unit tests to be updated and for the target to be flipped around
4dce59d93254d1cfbe1eeac37ad50405fabe8d2b;2018-09-22 08:40:57 -0700;- speed up simulation by finding in image bounding rectangle
89649b4d55db37a6a61180be6cd31abb9f29557e;2018-09-23 11:17:19 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
8ff655362f35d4f1ccc916ea8b539ec653a76b83;2018-09-23 16:49:30 -0700;- fixed documentation and added nullable
739c57e51bafe202c3cf2cb5a22c039fad8cc69b;2018-09-23 17:09:52 -0700;- updated for change in georegression
4f1852df53d8e4b28cf37fb17c95397800671e8f;2018-09-23 18:05:15 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
01d63da7075d8e3256a6756b93be123acf08fdfb;2018-09-23 18:13:02 -0700;- updated stereo examples - improved tests
a24a633ad1cd54c90bf97baa02c5713f2041c1d8;2018-09-26 17:06:19 -0700;- unit tests and minor clean up
780ec62d0bd7604cf9a81b86da36a95beae46b57;2018-09-28 09:24:26 -0700;- Switched to JUnit5
3152e3517334da6859909f14269bcad77682186b;2018-09-28 10:11:46 -0700;- unit test for homogenous PoseFromPairLinear6
f2e830e160e8c7da00bd5fff7813a4e5f8832f50;2018-09-28 16:34:15 -0700;fixed unit test and removed unused enum
fd14e40981f76cd2015c093e8df432d26b5f35f8;2018-10-01 19:55:50 -0700;- unit tests
3b2ec21fcd7dd9da0851d431ee00811efc7f3222;2018-10-03 07:18:07 -0700;- more unit tests - less hard coded print statements - 1 bug fix
95c98c4bb2bb91ca09f3d8762b633b2e1f044fc6;2018-10-04 17:22:24 -0700;- unit tests and some refactoring
e2cace3711d8a67022b583de77d5114888a9f90e;2018-10-04 19:56:04 -0700;- more unit tests
e740883975c382d30a1d73a30accc639199f6b46;2018-10-05 20:01:41 -0700;- unit tests - scene reconstruction runs again but is not very good
113430aaf39acab05d44c475808b2990df27322a;2018-10-06 07:47:27 -0700;- refactoring in georegression - simplified inner class names
587f7ab0bfc5f93ccaae34c10021309418639547;2018-10-06 11:29:27 -0700;- reject triangulated features if reprojection error is too large
7f58c24ecb29c217664cf2ed3e8d4e584fc5c6d9;2018-10-06 13:27:36 -0700;- fixed multiview reconstruction. Swiched back to estimating SE and not E
632157ac90b456943647f00a860d27d26cd829e8;2018-10-06 15:43:17 -0700;- JUnit5 AfterAll -> AfterEach
937bf15c108cd205886b026cfe5ecf3297d67557;2018-10-09 08:35:31 -0700;fixed black line in simulation
0f9a33cb317061fd1f284e54934bef96004c78b4;2018-10-09 13:23:38 -0700;- unit test - norm to pixel for camera pinhole
444a98cbe397b09e371a2beeb49c2d85abefe421;2018-10-09 19:48:31 -0700;- unit tests
e0dcff5c5493252a2040aa89c8abfa2f12a4875e;2018-10-10 08:00:03 -0700;- Multiple pages QR - tweaks to unit tests
2e241f2a612e5727e545a0390dc38697c141ee2a;2018-10-12 09:29:18 -0700;wrote 1 test and deleted two others that aren't worth implementing
810c560749eaa2f686d0028145d1585cc3a8edf7;2018-10-13 08:56:50 -0700;- fixed VO regression   * squared distance got changed to distance
cf521f59dff6d8046ba3c0d00a49f72e322d4e77;2018-10-13 19:00:27 -0700;- sketch of EpipolarMinimizeGeometricError - new functions related to that
08fc4a593f9067cebb019691ce96ff6e718f67a0;2018-10-13 21:10:44 -0700;- finished unit tests for epipolar minimize geometric error
12cb2c34614d1326aac57406186df52c0e5402fa;2018-10-14 15:48:02 -0700;- trifocal transfer
93e79b808d69d6b0fa578b6408e29568d3df5c62;2018-10-15 08:44:22 -0700;- QR Code   * When scanned it now indicates if multiple modes were used
4ee23550bbc9d0b3a2f20fbbd3fbd8c601908bc6;2018-10-16 18:14:02 -0700;0.31 candidate final
f363295e332b17ef5881b53a23716ebc1696e129;2018-10-16 20:28:13 -0700;- fixes which were previously pushed some how got lost
86858cbdb7589eb0dadc1294d51327c96c95bcb1;2018-10-16 21:19:15 -0700;- 0.32-SNAPSHOT
36fd9b6deab0aeab2453f79ccc0f0876f4a3a7de;2018-10-18 20:36:33 -0700;- can estimate essential using geometric error  * Had to switch/create ModelMatcherMultiview
2b40b7cfbc3cb343de379163bc5b78ee344cbc28;2018-10-19 19:29:40 -0700;- geometric error for robust fitting of fundamental - other related changes
66a1543c54adb91054820b67739f2d31179837ff;2018-10-19 19:36:16 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
30ee9776b832c02f6e8e919e876994b7cb095766;2018-10-20 06:48:36 -0700;- initial pass at associating three images from descriptors
a757a3af006678ec80a55887f3563bb33846973d;2018-10-21 07:20:25 -0700;- simulator now returns the rendered scene in the render function
467bda9e95a50e6f426a1821d7452c0bf9f8e6e3;2018-10-21 16:56:58 -0700;- lots of internal changes to how files are opened to support loading of resources from jars   * checks to see if String is a URL or a file
3ea72540d3b3e9eb1a33fc5891bdaecdb561507e;2018-10-21 20:02:50 -0700;- fixed more opening file issues
97551f46faf08dbdcf20d515dfcfdd699abc0115;2018-10-21 20:33:59 -0700;- fixed another issue with loading files
9d078f23ba633b2effeb7b4ab20c3030f552bbc7;2018-10-22 04:03:25 -0700;- loading source code from jars
bc07965b4ce0d914f8b491e957e864e3e20f52c7;2018-10-22 04:13:56 -0700;- syntax highlighting added to source code
819dc351462a775d8d8fc13ba524caf432160704;2018-10-24 19:03:46 -0700;- updated for windows and loading from jars
df42c641e1105fb78e599d3abbb721b5b14b4cad;2018-10-24 20:42:48 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
5e86a58de1774d7ac5565a5f25750873b18eeeb5;2018-10-25 21:12:23 -0700;- Added 3D Qr Code where you can estimate its 6-DOF pose - Changed Fiducial stability calculation to use 4 synthetic corners always to improve speed
ff64693d40d4fef784037f8c8fe5b2caa3a24e84;2018-10-26 18:16:54 -0700;formalizing rendering of markers using a generic API
a99c8bb698d3f101ebefa45196e0c515eedc7fee;2018-10-26 19:14:10 -0700;switched square binary over to using a rendered image in its test
80f1ad1a20b493602a40aeba200a9b2f2b3cc648;2018-10-27 12:34:26 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
9667155528a913c0e505a337348adc07a6528e52;2018-10-27 17:48:29 -0700;- Updated detect line demo - Shows a dialog if there are no webcams found
f14c414eb04c3ba1592b26ddd773bd96ca4007b1;2018-10-27 18:09:47 -0700;- Windows are centered by default - Application Launcher shows version information now
53728bf6093250f93382540e1cd72098a470ba51;2018-10-27 18:17:19 -0700;- if a SNAPSHOT then github links to go to the SHA
bf412d01f665efcded39ca77cadbd1baa0a74e20;2018-10-27 18:47:26 -0700;- improved image enhance demo - GImageEnhance supports planar images
f59f0f9b2aefc52097aafccbb4eef93fdb1b3d25;2018-10-27 20:22:44 -0700;- VisualizeFiducial renders in an image panel making scaled images  look better
255e23d878d7d878524729cc33a2a643aab2309a;2018-10-27 20:26:59 -0700;fixed build error
39011bedde61403816928db3cc65ed97b851366f;2018-10-27 20:36:31 -0700;qr code fiducial 3D unit tests
80a2c5da2666e7ac4fff6bd454cba420604f8bdf;2018-10-28 09:02:34 -0700;- upgraded gradle - example jar is now exported - more examples to Enhance demo
64fa2dab8e10ba822ba8b422569070b1404289aa;2018-10-28 12:52:10 -0700;- more demonstrations are initializing inside UI thread
bf44a78ef099038380923a7713ec488d57dc4d9b;2018-10-28 13:19:12 -0700;- moved copy into its own function
43bfc7def4a72ea2956897cfdbf392a0462b73f5;2018-10-28 13:54:46 -0700;- fixed windows FFMPEG path issue
1697b313b5c9a8b96c11162d6b643bbb1aedd77d;2018-10-28 14:16:34 -0700;- more windows path problems
c21bae452527affcda643049829b4fe63bf23edb;2018-10-28 17:04:33 -0700;- fixing loading images in ExampleColorHistogramLookup
ea89f65c8b4cd50d3d096690e94f0512b02b1462;2018-10-28 17:48:12 -0700;file loading works in several examples again
3dc227392c8bc476a41faf8bf8780ef8e2568aee;2018-10-28 17:53:15 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
ed4c35e8dc59255f770a6decd2c8b54c6283d5a7;2018-10-29 05:19:26 -0700;- updated gversion - more debug messages for opening
3f0281f7270d0e739a196c7f467edbf7872a3bac;2018-10-29 21:32:42 -0700;four point stability unit test
c24385dc8dd8e7d2a8a670dcd870ed723a72a45d;2018-10-29 22:09:38 -0700;- improved qr code center allowing unit test to pass
7033a1ca487e6101d35f2cf64be22343c6c0bd5d;2018-11-01 12:47:03 -0700;- made height in render cube in swing configurable
53eca181c8a601ec5a2bde0df88eca32dcced7c6;2018-11-01 20:10:13 -0700;- Fixed UtilIO errors
9a48f1c5b04a79e1296fe240be153b05d0270b93;2018-11-01 21:13:27 -0700;- fixed omni camera calibration regression
971c477ea32ec321107dd744896d42400ac8f537;2018-11-02 19:54:33 -0700;- InterleavedU8   * Added set32/get32 and set24/get24
118eea390a5b926ada46633196e150d90007d3d8;2018-11-02 20:37:12 -0700;AssociateThreeByPairs fixes and unit test
b94a96899b575d573fcad63f137d2d17d393a3a2;2018-11-02 20:46:39 -0700;- reduced number of iterations in calibration - commented out print statements
a5fc5f70eb8abb69ce369e81b7123081212a383a;2018-11-03 06:24:28 -0700;- fixed issue with interleavedU8 get/set/24/32
4b527ab7d863ef39d8897d297649f6c85a675b50;2018-11-03 11:01:17 -0700;- initial sketch of self calibration from rotation with multiple K
64750ddb9779e89ab5f4e2d2320aaa123af1ace7;2018-11-03 14:50:51 -0700;- used EJML SNAPSHOT now - switched to cholesky decomposition
0503ac032938bc02357521867cf0bad7fb51bf88;2018-11-04 01:13:18 -0800;unrolled interleaved to single
f4a18c525762e66b740991ed38d6a5ff350923a3;2018-11-04 06:50:24 -0800;- moved logo into boofcv-swing
7e553ace1233a441cf649597b657d6299a3c2fd6;2018-11-04 07:51:09 -0800;- start of gui for batch removal of lens distortion
e78ef12359af0ff6b0b4cff4d6b925a29853b198;2018-11-04 08:23:19 -0800;- ConvertImage reshapes output instead of throwing an exception - ImageInterleaved setTo() changes number of bands if needed - Improved speed of Interleaved to Gray average
3093f7fc290bf107d87e3725f20d2aadc6275593;2018-11-04 16:28:20 -0800;WIP for self calibration
e1d2e68e371a918c448dd15ba521e3cf735ef3b0;2018-11-04 19:13:48 -0800;more work on self calib
b05600af192819bbf759058930cc772d5ebe6673;2018-11-04 20:00:54 -0800;functioning batch remove lens distortion GUI
1bb93ae03c1859be775668b100e830e60a586bdc;2018-11-05 11:26:08 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
5b87a2d3a5c10eb634a4f1d97d8b7df49327a1e2;2018-11-05 21:15:15 -0800;- batch downsize GUI
c73c729c8bfac30ae62bd61ab27ec3a0b489860a;2018-11-05 21:21:19 -0800;- doesn't require width and height be more than 10
97f4a0837b4b15c45ee55d42acb7492476757615;2018-11-07 03:34:05 -0800;- start of fiducial square marker GUI
af58c32d44d63888aa2dfdf52dce1a23fdda3775;2018-11-07 06:43:14 -0800;flushed out GUI more
dfa841216dc7292e7aeba1e240f79c1829386887;2018-11-07 08:18:20 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
6b252dfcbbf5d73c6bdcca2634863a6b8fe205e7;2018-11-07 11:57:50 -0800;- fixed a problem where changing camera settings was causing a crash
de990e478a6a84a9e41758fdd566e35f4e529d2e;2018-11-07 20:05:46 -0800;- redid how square fiducials app works - a few things are broken now because of related changes
0fbf15fb917b6c30687dba6984f9b0f5ca2d98c9;2018-11-07 21:43:25 -0800;- fixed unit tests
5461bd50e31208c960cc6fd958a27f37c00968fc;2018-11-07 21:49:52 -0800;- updated a unit test
78d5e7eb6f99a22c431e994ef7acf9ca27815398;2018-11-08 12:12:36 -0800;- fixed problem related to code not handling URL
32633a8dd0d627d339fe782c77eac9063f440f3e;2018-11-08 17:31:47 -0800;- fixed stereo disparity demo - made point cloud controls case insensitive
2a41287b0a2f12585655cb04d367e76819f3ebbf;2018-11-08 18:43:49 -0800;- square image application is working again
401668aa2ab7f900467bd6a66e246fffacd627bc;2018-11-08 19:02:31 -0800;- automatic centering of square fiducials - draw a gray line along the grid
6bcc897003273bb753eb49716d86d8278173cb11;2018-11-08 19:49:29 -0800;- added drawGrid to square fiducial GUI - recycled more code
4714117bd73d3648a48006ecd127158513fbaa59;2018-11-08 20:04:04 -0800;- save markers as png tests
9edc017408d49b481e0775f86810c09644f0c73b;2018-11-08 20:29:43 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
7ca50f3dfc0b83fdf693a5a13c9631a5df1d8cee;2018-11-08 20:55:09 -0800;- improved keyboard controls in point cloud viewer   * should no longer get stuck
aebc7b7a738d86d444e8b33573dd7318fae8e12a;2018-11-09 05:21:39 -0800;- removed print statements
b179fb8b29a17109ead721a7cd26e04bb1b7b01c;2018-11-09 05:45:22 -0800;gradle wrapper had not been properly updated on git
1dcf5b2ef453bb6c76cf7999ebec3a9f2f3a355a;2018-11-09 08:25:24 -0800;- fixed QR unit tests
94382a372e550ab446cd3d3db56200de618f5419;2018-11-09 09:19:44 -0800;- changed background color of fiducial application
4af81708f4656f7ff1b853dfac215d9a6879da41;2018-11-09 19:08:01 -0800;- fixed OS X view problems
53bf4ea85aea7ee5f7e487d6f8839b5b3f02a584;2018-11-09 19:08:39 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
481867135bf148e364c926091c2010397497af96;2018-11-09 19:54:29 -0800;- combined qr and square fiducial PDF generator code
163284c53b794ee98f43b063e27237d2f5d5c628;2018-11-09 20:16:05 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
5a96f9a62da9d34a099f052cb8ff5a52f1626dd3;2018-11-10 07:18:47 -0800;- Added GUI launcher for applications
27cf760aeed6b1d162546a17ef36117cae6c1ba7;2018-11-10 08:17:34 -0800;- more sanity checks in qr code encoder - changed back ground color in QR GUI - explicit automatic error correction level
7180028efa6b04dadaf8f505a1b91912a7ef3372;2018-11-10 10:49:38 -0800;- showWindow adjusted the frame's size to prevent it from being larger than the screen - calibration. Show All is now easier to see
98aab4b1e5e9c7ad10f11db0552f0cad754bc3b8;2018-11-10 12:47:08 -0800;- added icons
a27ddd79b2bb11c1ee4edee8a304d7154357f6b3;2018-11-10 19:09:18 -0800;- got rid of an annoying intellij phantom error
b6fd9ae3a73b5b215a321cb83981484f1404d994;2018-11-10 19:24:00 -0800;- fixed QrCodeEncoder tests
f7fca7b5edf9063ba1b2665dd97a978a88e912a1;2018-11-10 21:41:21 -0800;- partially fixed self calibration rotation
94aa03baf248dc3bc731872aed3413e63d77faf2;2018-11-11 05:52:11 -0800;- fixed unit test
358cf47af39d4d79b7be4b26141e5daa1fd02759;2018-11-11 06:35:25 -0800;SelfCalibrationLinearRotationMulti works now
6c1b7616aa0c4a6240e2edbaa5352323004a100c;2018-11-11 08:50:27 -0800;- more functions reshape input rather than require strict tests
cf7bd4c67ce4923e734e5f7d7d6b285ad37ea1d3;2018-11-11 10:47:40 -0800;- fixed potential crash problem due to improper locking when changing camera configuration
c0a7189d9903d886e97b175fb1d4b8d8a4956093;2018-11-11 13:31:07 -0800;- fixed loading of ppm images
fbd999d3a5baa05be711d2c0e2b53ee53d05411e;2018-11-11 23:01:56 -0800;- updated EJML to stable
87a1d13f3e7831ccebedc019a1ed521cecaa9c48;2018-11-12 18:40:08 -0800;- fixed regression caused by changing PnP from a properly tunred EPnP to IPPE
69c4040c65df918460afba3c6f58543fd631a294;2018-11-12 19:48:39 -0800;- extracts camera calibration from android camera characteristics
79636c45382fbc7344533013cb05aa39714f44b1;2018-11-12 20:51:47 -0800;- start of sparse undistorted processing of QR Codes
62e7c18f7bdd96428bab2b54f66d493ac3ab8c93;2018-11-14 07:14:11 -0800;- improved Android javadoc a bit
875b225dd2e28f133a7366053baf2abb532b1c1c;2018-11-14 10:30:18 -0800;- broke QR Code pose estimation function off into their own area to make it more re-usable
6c2e1ffef92f5b5b6ba02181ba00fc506a3db596;2018-11-14 16:15:54 -0800;clarified units
14ba01c57d44df014c01c08cd3a76d8db97076ad;2018-11-15 19:13:32 -0800;- initial sketch for adding lens distortion to QR Code detector
a57952a34335aec18adbc01a03a06706f44de83c;2018-11-15 19:25:53 -0800;- option to open only directories
b60223a3fdf78d221a9148ce0477dd8eb407d2d3;2018-11-15 20:10:18 -0800;- fixed planar reshape
36f5277e561bfa93ffd994dd6399d2352f247536;2018-11-17 22:04:45 -0800;- Geometry   * Fixed bug in Linear Trifocal Tensor estimator - Start of 3 view stereo
c6d026c5e1c66faded7c3a5dfa5df79121027974;2018-11-18 05:56:57 -0800;fixed some unit tests
bebdfde7c500da3605dba1e8a1b0bd9c3bd26a0e;2018-11-18 10:15:59 -0800;- Flushed out entire scene reconstruction step for trifocal stereo - projective to metric camera matrix - fixed bug in decompose metric camera matrix
f4b242ce849fc10a3c5ed8e6e8fca257aedce82d;2018-11-18 11:56:26 -0800;- added stereo disparity to example   * Doesn't work very well
550d4b10a8b4eecc017af4c563f653829fd2694b;2018-11-18 21:36:05 -0800;unit tests
f7a57ecc368155894c61ffd509cb0a268552e0f0;2018-11-19 20:06:11 -0800;- fixed rectified pair panel on image resize - batch downsize creates output if it doesn't exist - example lets you specify calib for left and right independently - simplified code tinny bit in trifocal stereo
6f8511083bb29f5729af0b3118da4e28780db61b;2018-11-19 21:53:07 -0800;- working but brittle
ceb3fa26ce3476f4b67e2f5c2576bd53fca59f69;2018-11-20 09:03:26 -0800;- colorized trifocal stereo output
49f333651861b9947bcdc8bfef2c9ffdbd236b80;2018-11-20 09:23:52 -0800;- tuned visualization a little bit
a58f375b481a8bca55cdbf9368ad94fa4a0e2929;2018-11-20 21:28:04 -0800;- re-implemented decomposeMetricCamera correctly
080c6ad8c1871febd276182cadb370175095cb79;2018-11-21 07:53:22 -0800;- wrote unit test
87e14d9bf3f8f511aefe101b96874efe023db56a;2018-11-21 12:15:02 -0800;function to count observations in bundle adjustment
c9172d86f6d8698c93f7b7e9eecb3e62d69cfcb2;2018-11-21 16:42:02 -0800;- fixed DistanceTrifocalTransferSq drastically improving results
3e9634e76cd5f1f1bf0814339912a14dca307978;2018-11-21 17:20:33 -0800;- fixed InterpolatePixelDistortS
2080bef7e76e408f9168973fa4897640be90f245;2018-11-23 06:43:26 -0800;- fixed bug of keys repeating when focus lost in cloud viewer
97cf26ace24ad5706fe0bcfdcb7641137c64bdc2;2018-11-24 17:25:48 -0800;- Robust trifocal - updated trifocal stereo example
2fb5134f26db9c9e8d60b8febc45d02393af8b03;2018-11-25 10:42:34 -0800;- no longer ignores rectification rotation - enforces constraints on dual quadratic - fixed camera matrix for second camera in trifocal example - sorted example images based on if they work or not
85794c21c535b784a9acc673d3a08d775bc51ed4;2018-11-25 16:51:30 -0800;- RectifyCalibrated uses average of +z axis - Found cause for some of the problem images in TrifocalStereo
856244da7970bd3a87b4e2d76e4c5f55c059a234;2018-11-25 17:34:20 -0800;- DecomposeAbsoluteDualQuadratic unit tests
1cf0c0107c466075f956653e64a0f43255cd1b24;2018-11-25 17:39:46 -0800;fixed unit test
f31eaf41d0ce5acb965be1bdd67f713eea3c634f;2018-11-25 17:41:43 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
54ef3f1ebd5611076b5f574f31dad3f2307db695;2018-11-25 18:59:29 -0800;- updated change
0d1e25530de48a46c5ed50c6d15194d5fe6660e4;2018-11-25 19:01:59 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
fe8f62c46399714ea182ff334aeedeac093589b4;2018-11-26 23:03:44 -0800;- work in progress on refine projective structure all visible
db13808f1b4bde5af3689ee3f9ab3dd417e870d9;2018-11-27 20:44:30 -0800;- RefineProjectiveStructureAllVisible unit tests all pass
50834e2c5930204c8834cca5d085dfdeb3607252;2018-11-28 06:07:00 -0800;- better scaling with projective bundle adjustment - Projective bundle adjustment isn't working in example...
3df21d947bdffab66ec48cb69d9cb7c606fd4f0f;2018-11-28 13:59:47 -0800;- fixed test report
0664633420e7b98607fe4ee92c3901187ac20e80;2018-11-28 14:46:02 -0800;- checked jacobian checks for a change in ddogleg (a bug was fixed)
dfd5021861a787c47b65e50c744055231dc59962;2018-11-29 16:00:00 -0800;use full error message
e3a3e8d2f2c549e6ea898e94ae50d7767b92bb89;2018-11-29 18:44:56 -0800;- sketch of pruning from projective scenes
3ec4e84f66610d3215c4aec03da222e5b1b9fcd5;2018-11-29 19:30:53 -0800;- hunting down source of instability in 3 view scene reconstruction - made class naming more consistent with metric and projective - added sketches of more projective SFM algorithms - added trifocal reprojection error
37bb450e99f121b707a06a5670ed7053de5b8b40;2018-11-30 06:01:24 -0800;- triangulate refine projective unit tests
72912e905c0e1bba8c4e422044a12c878d89fcf0;2018-11-30 13:57:08 -0800;- more informative error message
b218c240110e1e6fa41953eedb7bbdd64b242ce4;2018-11-30 13:59:09 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
f1af9cff7979c9ce47ba408ab751e9e9bb0141cb;2018-12-03 09:28:17 -0800;- Unit test for QrPose3DUtils and change in how marker coordinates   are specified
41950360a4b6667ee61bb0caf24193bf6b754359;2018-12-03 15:24:44 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
ca92a632e6802bf848b79ddb84653b7da05b6b73;2018-12-03 16:07:11 -0800;- updated version of snakeyml - unit tests
17afa7c2133a08bbf08010cdb117b5cd7794c4e9;2018-12-03 16:07:31 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
ef40d3268d6dc6454534cc94afe549185d61a890;2018-12-03 17:04:26 -0800;- triangulation unit tests
ad59ee634c6ba27cd45c74eaf35c180d10ee2e9b;2018-12-03 19:14:19 -0800;- more unit tests
314883043fd4023511a8f2c350ee80d6f4fe6789;2018-12-04 20:09:33 -0800;- fixed negative rectification due to centering - brute force improvement to trifocal stereo - triangulation factory improvement
fa98b96781ebfa40b0b1126b84629abeb036dc71;2018-12-05 06:11:41 -0800;- refactored and split LensDistortionOps into F32 and F64 - created a CENTER option for adjustment
c49e861666bc22c8f586a45cda693628de69b473;2018-12-05 09:01:11 -0800;- fixed boundBoxInside
36facee2753b0d488d19fa1ef5027787aef6feb5;2018-12-05 19:14:18 -0800;- unit tests for absolute conic decompose related functions
dbfed74c6c26920bd08ed75ed9dc6c6ebac32871;2018-12-05 19:20:38 -0800;- fixed unit tests
ff8803356761c4077d71e8bf4f8d0ec03fa22b27;2018-12-07 21:35:15 -0800;- fixed trifocal reprojection distance - added general camera matrix to trifocal tensor
5e737db0ced5469c6c12895cfae3f99a31243d33;2018-12-08 10:00:45 -0800;- updated for changes in georegression - start of prune projective unit test
7443afc29687585433a94f4def274451bf1fc37a;2018-12-08 10:20:48 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
b17123fe2b134f5b9fba36a789934e3ed607210f;2018-12-08 11:33:25 -0800;- changed trifocal ransac error method in example - updated for changes in georegression
56a1ed5a8bcea19eabb52b9a82df8a2171af0e11;2018-12-08 13:55:40 -0800;- tested and fixed projective prune
3768c0f7ac224b5a90b34c84530203b16827cbb7;2018-12-08 14:45:19 -0800;- split off trifocal error configuration
69a87d8998711fc76b127713d755eaa567b31971;2018-12-09 12:21:46 -0800;  * fundamental matrix from camera matrix   * consistent camera matrices from three fundamental matrices
693820d1f41e6d1ccaff4a352b376bae3392ff69;2018-12-09 15:28:09 -0800;- refactoring of triangulation names
9cfda04942b1e6c1c57b09058febab1e982b6fad;2018-12-09 18:44:57 -0800;- initial commit of refine three views projective
478a164cc0ea4cebf66a1c0bc7c4bcd99cc699f2;2018-12-10 08:32:59 -0800;- added support for @Generated in Java 11
c04c1b6973155288faa0deb1585dded518d75e72;2018-12-10 18:48:58 -0800;- added pixel scaling based on statistics to projective bundle adjustment - config file for three view projective refine
293947bba844815986d07978b5eaebc398d4fc34;2018-12-10 18:49:51 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
4cbeaf3543b14ad81615d8f1af9c9d1c640cf2da;2018-12-10 21:22:45 -0800;- triangulation DLT now normalizes based on pixel values
331aeacc819a9f5f57cdf101b88ec72fcc32394a;2018-12-11 18:18:34 -0800;- fixed unit test
6367127bf77c0c8b7ead603dc58a5c211ed5e506;2018-12-11 19:24:10 -0800;unit test
e608f547fb5fd79d276cf0c7d30ad8a3c9362fdb;2018-12-12 09:51:08 -0800;- distortion unit test
4aba10f49a4e4763bebc6276302815af8bcd90a3;2018-12-12 09:51:20 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
b7b8a8b7e8f9441581fbfae03ea67462fa717c01;2018-12-12 10:01:21 -0800;- unit tests and accessor functions
eea6aa6d76b6b06be6c3a517b63858d632ca1e14;2018-12-13 21:45:30 -0800;- better handling of degenerate geometry when triangulating - moved bundle adjustment pruning from sfm into geo
b98f55a70b6e620e6cdbd2df6887a744f2a7a000;2018-12-15 11:02:44 -0800;- Added algorithm to estimate plane at infinity given K - Re-wrote uncalibrated stereo to make it truly uncalibrated
d6af69908480c2e685ed6c84b360ce1bace41b47;2018-12-15 11:42:18 -0800;Resolved merge conflict
48c092ff1e0f041dc88945a262b15dd5ce976ee9;2018-12-15 11:47:55 -0800;- Fixed build error caused by merge
d5f8ae16e4bcd966129d05fa32918bc5b748fc73;2018-12-15 17:03:03 -0800;- almost complete sketch of SelfCalibrationGuessAndCheckF
212232f7d896721cbe4b8eba5071017ff35f62b0;2018-12-16 08:16:19 -0800;- partially working
df662d530635e994295fed4217a2220c89c73966;2018-12-16 12:50:51 -0800;- guess and check self calibration focal length now passes unit tests but seems to have issues with tri image dataset
22314057f71357d69e1a92b1c1d1996387d86c01;2018-12-17 10:10:29 -0800;- another sparse undistort QR unit test
a0ba93c1942968d6389c032581545ea80db616d7;2018-12-17 13:58:48 -0800;- another sparse undistort QR unit test
74020e39a1bcaf180e7e7311f2ba9ac004a26d67;2018-12-17 15:46:53 -0800;- last undistort unit test
b30d63a99977b26d7fbfee8fc2b6bd65bfb45792;2018-12-17 17:21:06 -0800;- added more utility functions to MultiViewOps - tweaked SelfCalibrationGuessAndCheckFocus
f0d3bf08ac949f9d692c7a60ee6072ecc2da3443;2018-12-18 09:17:28 -0800;- updated generic fiducial to do more rigorous tests with/without lens distortion - All now render using planar simulator - fixed bug in RenderCalibrationTargetsGraphics2D
2b7134938d265f5501bebd6700ea66d1ebcb9812;2018-12-18 09:54:05 -0800;- new unit tests discovered what was probably a long existing bug in square fiducials   * didn't fully set undistort
0c3d09725ef44821a39759d9eacb51d4163e572f;2018-12-18 10:06:23 -0800;fixed variable counting
837f75ef594a2970568a9939d0433042f2957c05;2018-12-19 07:22:19 -0800;- created a ThreeViewEstimateMetricScene class - started simplifing example
db3e33f1b329b03bdba6ecefd020bdcfead3eb93;2018-12-20 18:18:06 -0800;- cleaned up example a bit more - added needed accessor to ThreeViewEstimateMetricScene
78f976d09404dfe462ffa5a5fa88789f87d976dc;2018-12-20 21:59:58 -0800;- three view association visualization
78575017c99e9423e2687cf250626d7ccfb57dcc;2018-12-21 18:15:19 -0800;- start of demo for triple stereo
6a5591084cd635f8fb33758bea59dad31ef0ceca;2018-12-21 19:18:36 -0800;- Loading of sets works
7e0d9f14dbcef9fe3f4f85d39d6d8221a75bfef2;2018-12-22 08:48:57 -0800;- slight tuning to fundamental example - three view stereo demo does complete computation now
43674a0699e0e233cbc567a89b19864ff61bf5af;2018-12-22 09:56:17 -0800;Fixed ThreeViewEstimateMetricScene. It didn't properly revert
e7790b464dc68764039e805803672a6ad32b7d98;2018-12-22 10:01:54 -0800;- fixed bug in point cloud. Was giving it the wrong color image
7c41fbe14847c81cd54c3f62547d4feaad84c587;2018-12-22 10:44:28 -0800;Updating data
5f4ea740dfc0f813106b285da57a915e85d8fd1d;2018-12-22 13:17:46 -0800;- reprocessing of image sets - more controls to three view
1f8cb2dfab393b638e7f82253b7cd48744652315;2018-12-22 15:58:35 -0800;- prune threshold - info text
7fe363b41315cdd1f72036ad1e6912fd27a1bab4;2018-12-22 15:59:29 -0800;- reprocessing of image sets - more controls to three view
a132bb591a27e24cf9ae5287476c06a6e67df7bd;2018-12-22 17:15:18 -0800;- disable menu bar - manual focal length
b81f090ae70ea01f7fa97f3d44fa4f7a2d6e218a;2018-12-22 20:37:40 -0800;- ImageDistort can now compute a mask - RectifyImageOps   * apply mask to remove edge affects - Updated disparity examples to use mask
b576fbb5d9a99780d84d16c983f80dbb1b6946b6;2018-12-22 20:51:16 -0800;- fixed offset in rectify apply mask
59461d7d44850895194e1095b0f9098238f9555f;2018-12-24 09:55:56 -0800;- dialog for selecting N images - finished three view demo app
b771df3fc1dc28cc3f897af2d1101f38e9f4160e;2018-12-24 10:59:47 -0800;- added three view to demo launcher
91c3db16596644915149436d1ebf01724a1ee0bd;2018-12-24 15:03:41 -0800;- triangulate unit test
dd5056605d96a8ccba1326e61f953dccc738c6ba;2018-12-24 18:50:09 -0800;- fixed bug in border calculation in image distort - unit tests for rectifyimageops - changed disparity rectication from skip to extend to reduce edge problems
3f5a7a9268eca1828a180d051f73161302d3baf5;2018-12-24 21:43:27 -0800;- Tests for ImageDistort
27af544857c33db4e7b1ec3f3ab1e318bbb34977;2018-12-25 06:46:58 -0800;- unit test and clarified instructions
2014483192dfdce1316ca2e6a6ef2c9761b322ce;2018-12-25 07:40:24 -0800;- fixed focus issue
8d8606ba8e2f015dd9a11c90f68a32f841c1bdbf;2018-12-25 18:03:10 -0800;- added more rigorous fiducial 3D pose checks with/without lens - added to a check to see if there really was lens distortion before   undistorting images   * That fixed a speed regression - added way to go from pixel to norm using lens distortion narrow
f58dda565957bf1779ce957aa329f1fde4a25fd6;2018-12-25 19:05:23 -0800;- Candidate 0.32 - fixed out of bounds error in RectifyImageOps.applyMask
4a63ff7a5f9ab2c96804c9fa767c2d7e5ae05647;2018-12-26 07:56:53 -0800;- right click support in macos x
5a935be47a28b7959037549995ac6ed71b76a47e;2018-12-26 19:04:45 -0800;0.32
aacae54511aa21ea1396c8d789d707315241bb95;2018-12-26 20:45:38 -0800;- updated comments
5176d59a671cbc1a30ba66131ddf8b8f775ea41c;2018-12-29 18:04:50 -0800;- Updated version to SNAPSHOT - Added application for opening a webcam
024b1a6bb1b8e862f0ca8fe35f58b5aec38537e6;2018-12-31 09:19:17 -0800;- partial sketch of new SFM graph - comments in change/planning
96a86718b53d466cc6a2b2f86eed59023b9113f3;2018-12-31 09:37:31 -0800;- using specialized down sample to avoid aliasing
20afc030d14c20a3eb40b6b219155c73ffe7130d;2018-12-31 09:38:43 -0800;- added missing change log comment
7b2007857bacf432f2f5be04c62e19ed2ae3071e;2019-01-04 11:27:07 -0800;Added Li's segmentation method.
09fab3c88b9b40f309e200b3f2732cb7b581639d;2019-01-04 13:29:13 -0800;Li segmentation: Added a test that uncovered a bug that was fixed.
39d56fbb079dce63169cecff18b2f75dec170471;2019-01-05 15:04:01 -0800;- Fixed JavaDoc issue. Was no copying over doc-files - Added image for QR Code coordinate system
bb45aa43829da21656db65a8cc5d57acfef9dea9;2019-01-06 12:40:23 -0800;- metric bundle adjustment using homogeneous coordinates - Updated copyright config to 2019
5485c8ad8e7447df3fad3c9c71c587965f53c188;2019-01-07 10:54:21 -0800;- added ability to change color of rendered QR Code
9fc19549b4552c1a270ef0b64b55ceda8f8c224f;2019-01-08 10:17:37 -0800;Li segmentation: changed formatting to adhere to boofCV style
7525afe341651e6db3e81b3787c6833d396a520a;2019-01-08 10:53:21 -0800;Added Huang threshold method
386cb6915543425c1279d9c3f9fa5ce52280331e;2019-01-08 19:10:23 -0800;- Added Li and Huang to list of thresholding filters - Removed what is most likely excessive conversion to doubles in Li and Huang - Modernized Li and Huang code   * Looked like C99 port
d509fb58d0fa616da84384627d02cc608e310e14;2019-01-08 19:53:11 -0800;- Updated copyright in another location
6c453b7c90cb10edf3b8712f8eab7727d13c169c;2019-01-08 22:00:37 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
c800ae66c0e4f1c6625ad82f33bcc5e69326b8e3;2019-01-08 22:01:12 -0800;- WIP commit to avoid losing everything again
dd36d386b7848f9cdd341459ac9e483c17acac91;2019-01-09 14:49:20 -0800;Putative fix for Huang segmentation method
5d379a7219f33c7a82ed0c6a52d439727d817e18;2019-01-09 15:04:38 -0800;- added support for convolving and blurring U16 images
04cf78fc47185b486cf42087be327bea7ffe386b;2019-01-09 17:55:00 -0800;int to long to remove any chance of overflow. changed one line to make closer to ImageJ
b093932d56c21f4428ceea8b626ae61da7fbe390;2019-01-10 16:33:30 -0800;Huang segmentation: speed up analysis of histograms with zeros at beginning and or end.
4dd0ee5bf03e915faf5d694925df54d22708db74;2019-01-10 17:57:57 -0800;Merge branch 'pull/110' into SNAPSHOT
524ce3c0a0c07e6de45a2315a8d87291256ce3ee;2019-01-10 18:21:00 -0800;- merged but unit test fail
43a5a6c9eff7243c02c95994b5fd84212cb4ea74;2019-01-10 18:27:16 -0800;removed change that made it more like ImageJ so that unit test passed
8626aba81b524fda9558b26f989c3e6b2e95dd89;2019-01-10 18:27:39 -0800;Merge branch 'nicost-segmentation' into SNAPSHOT
00d4d02469af57e02c046ee34ae3028fc8408951;2019-01-11 07:16:26 -0800;- first pass at QR Code ECI encoding - QR now prefers UTF-8 for decoding - The character set when encoding a QR Code is now configurable
eb849f082004b0e76349ca9148d18d9cc25379b1;2019-01-12 18:18:57 -0500;Fixed typos in README.md
778a5a5e5e8ce46d0f967e3177d1b1dbd548d263;2019-01-12 22:13:08 -0800;- first pass at updating point tracker demo
5af55acd6a6e12a39e3e72c915fdd7a2da1533c4;2019-01-13 08:56:59 -0800;- more GUI improvements to point tracker demo
0e2e8df995888b570514f5dac7c306f38dbd3e61;2019-01-13 10:30:27 -0800;- tweaked QR Code tuning for up close objects
afd88036ebf093d03a40b1d3217e1c6be9e9829e;2019-01-13 15:51:25 -0800;- ECI unit tests
e39a2e347b0eac0fbed68a96d547ccdd49dabb92;2019-01-13 17:32:40 -0800;- start of adding rigid structures to metric SBA
28df3f85dfc91de8e9c19ed7593455af812d590b;2019-01-13 19:05:10 -0800;- ECI mode unit test
3c61b5caf2923f12d8c77bb32478df8e34365c82;2019-01-14 18:38:54 -0800;merged changes
a0f3cd915b5e164530d9107b263d9e1f3b3b7e60;2019-01-15 12:53:07 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
c78d8dd4ac27196344bb528957b15dba895784da;2019-01-15 20:59:42 -0800;- more work in adding rigid bodies to SBA   * Jacobian is broken
8320e6b3a41cad2e1c9729abee96d5cb00b51ef5;2019-01-15 20:59:48 -0800;Merge branch 'SNAPSHOT' into sbarigid
c515234c600439a88d2c8b6b5d4824cd78903edd;2019-01-16 20:03:08 -0800;- got rigid working
6c1d6c4463fd5b7ca52125133c73a2087f05640e;2019-01-16 20:03:48 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
8c001a60181d803995715b425b4c8e495d0bc820;2019-01-21 11:01:46 -0800;- wrote unit test - fixed direction of jacobian for rodrigues
2db5645a21858d57ab28a111dc9e428871e71933;2019-01-21 20:29:00 -0800;Merge pull request #114 from alterdego/SNAPSHOT
10cb03a0301f8576103b5048a953b544ce0239ea;2019-01-21 20:29:31 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
0bf8a50878179b9bf14508a31528050c5217e3a6;2019-01-23 09:39:08 -0800;- fixed OS X touch pad zoom - added time to detector demos - click to move in detector demos
a04c280b79e798c04ef75a8fdb9691f1c3349894;2019-01-23 12:50:16 -0800;- updated FFT demo
4aa5a36dfd215660617095288d02d1dd062cc194;2019-01-23 20:51:45 -0800;- updated blur demo - moved demonstrations into ip directory
53c0c93da916fd67cd3663c56ebc65f3db9c21a6;2019-01-24 09:54:39 -0800;- updated image derivative demo
09c8f53155d8cc397b3afc800f681cb0b2918360;2019-01-25 10:11:57 -0800;- added JDK11 to Travis - fixed (I think) dependencies   * Thanks H1GDev for pointing out example didn't build properly
d5df37cd42870554f3d948e85b19293478b83b0d;2019-01-26 08:34:06 -0800;- renamed radial-tangential distortion to brown - started making it possible to use SBA for camera calibration   * working Brown model   * start of Universal Omni
f9d4cfb443e36f8915745879c1985b5b63cdd8a5;2019-01-26 08:42:07 -0800;  * Fixed type-o in Omni Universal math. Appears to have minimal affect and results.
2686022e609779825b8fe4e38d888422c5268a7f;2019-01-26 11:51:51 -0800;- more renaming to brown - found another bug - universal omni camera model
ddc38df5cd131ebdcf73041fb9e952d54d36574c;2019-01-26 18:59:19 -0800;- moved calibration over to using SBA - fisheye calibration is broken and not sure why
1c57c8715bed8ff37b69eb658f21d7ae306286f9;2019-01-27 08:53:35 -0800;- found problem with universal omni   * Didn't convert input into unit spherical
a6cf7ef4726197dc89ac20d32069417d77f33e89;2019-01-30 10:18:20 -0800;- work in progress sketch for quaternion and numerical Jacobians for SBA - start of quaternion for SBA
24f000a8c696cac6cb94f09752d97ad82a340044;2019-01-30 19:44:50 -0800;- unit tests and bug fixes for bundle jacobians
feb77fe03917c475cb02cabfb63aa35ae4e66e3c;2019-01-30 20:41:10 -0800;- analytic quaternion jacobian
5de78384ed4d51cd1cea7d68ff614cc5497de6b9;2019-01-31 08:33:16 -0800;changed test so that calibration passes again - Likely that the SBA calibration function has a harder time with nearly singular data. Maybe in the future provide a dense method + SVD?
4442ab68f81553cea89dd21d6c79a59dd5500922;2019-01-31 08:43:04 -0800;- last fix
944c419cdddc4e2cbb7cd7afd64181b1e54f882c;2019-02-01 18:29:13 -0800;- some work on multiview reconstruction
878643f77410cd569d6ab4335d744177672710d0;2019-02-01 18:43:33 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
db2db075300bda8ab0f5455e48609e10bc0a03c6;2019-02-02 17:22:48 -0800;- WIP
f8a32423ea67b6eef3be4a6281bb262c574967a7;2019-02-02 20:36:01 -0800;- finished sketch of ProjectiveInitializeAllCommon
7bebbba36be8d3b83b5ddeccd2059a30f72d163c;2019-02-03 17:54:09 -0800;- partially written unit tests for GeneratePairwiseImageGraph
91f35ca17d95e41f2cdd9912e7d533e3f264c859;2019-02-03 19:36:26 -0800;- finished tests for GeneratePairwiseImageGraph
daf13589757e0dd8f950b994bacf9890b2c59efe;2019-02-08 07:27:33 -0800;- PerspectiveOps   * Fixed bug in convertPixelToNorm() where it called distort instead of undistort. Thanks Tianyi - Code comments
256ca20a2c1d388fe564735963990e94f364e837;2019-02-08 07:48:29 -0800;- updated to JUnit 5.4.0
e61b213d56c37e453267d75bf591bac411b771ce;2019-02-09 14:53:01 -0800;- WIP unit tests
8c7250f18c0c4f2c9c4b26557c94cfee69e4aab6;2019-02-09 20:49:05 -0800;Adds ability to project bands of planar images into a single plane.
9097da84de0eebb2c5dd5de617c2a8a95c4c2219;2019-02-09 21:57:55 -0800;- Initial pass at adding concurrency  * Convolution
c982d87fdf0c63e16ffe5c21a3efad99b5013c44;2019-02-10 09:23:03 -0800;- Added ability to control number of threads in a parallel stream - parallel versions of box and mean
7032b0782fc55d962c88f6541b50e518ac72e3db;2019-02-10 11:12:43 -0800;ProjectionMath: Now working as expected, and tests fully functional.
264d449db56d9787f3de1df327e277b1659af374;2019-02-10 19:32:23 -0800;- fixed parallel convolve mean - Created IntRangeConsumer - Created WorkArrays - Improved memory recycling in mean filters
c7d9d2837643b38cd1547a7751b3615375fa4754;2019-02-10 20:17:05 -0800;- WorkArrays Unit Tests
ccdc1a201735acb6edf5e66ed321c857dd4fffb2;2019-02-10 20:59:37 -0800;- fixed bug in convolve mean - fixed convolve mean unit tests
b0c3fae75895cc81ebf5c0ed8662eaea967e21b9;2019-02-11 10:32:36 -0800;- fixed annoying JMH issue by adding a gradle plugin
9b37d2be8de231726f4e393b35756e5e272d4ed2;2019-02-11 13:17:19 -0800;- updated opencv and ffmpeg versions
e3573d6ad4a864d3d76febc84a5c2fb820bb00dc;2019-02-11 18:56:48 -0800;- Fully added dense bundle adjustment
93cdd92d6865bdda9b6e94ccb2885b7642c61752;2019-02-11 19:03:09 -0800;- renamed test files to match the class they are testing - added empty tests as a reminder for MT unit tests
77e5708edda94fcb64eb1b59600f2aa372c7e37e;2019-02-11 21:03:36 -0800;- revert JMH back to 1.19 because 1.21 made benchmarks run 20x slower
0afe7bfa40e13988a16d68db48625a977a14b1c2;2019-02-12 07:43:49 -0800;- Resize Output Images Instead of Exception   * PixelMath
bc1a9b6515dc0d15ac8ddfee9309998cbb008535;2019-02-12 10:27:38 -0800;- created AutocodeConcurrentApp - concurrent image gradient code - laplacian properly handles image border
91fdfcd64f8678c8720415f41675385153c29758;2019-02-12 13:19:44 -0800;- added concurrent GradientToEdgeFeatures
4089af7990435c95683ebffa54467f27d09d1fe1;2019-02-12 14:35:29 -0800;- more concurrency related to canny
574e64066076dbbc660c4466cde357c117a8924c;2019-02-12 15:58:13 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
cf698a57f422e8d3ffc4f2dedd794d7d9b554e97;2019-02-12 17:43:09 -0800;- large refactoring - Image Distortion   * Changed interface for PixelTransform and PointTransform to support concurrency
940570ea15d67fbad5ee8cd595371d359e5272fa;2019-02-12 17:58:22 -0800;- added isThreadSafe() to interpolate
b837a21750eca4612928ca5d4f5dcdf4c762ecc6;2019-02-12 18:24:48 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
b0d202f00f766b06f66e8f6918a2fee7ae0808a9;2019-02-12 20:03:32 -0800;- concurrent median filter
0e091acc959420a926063c671ffa3cc7b184926c;2019-02-12 20:05:18 -0800;- forgot to add unit test
dee96709d030ab47abc060bc2e8b02c749ab06da;2019-02-13 02:52:43 -0800;changing data reference and blur image
6a285a61d75fbb31dd9b1ce2a598a1937dd5b4a6;2019-02-13 07:45:57 -0800;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
0e3203f2274501a3066fd5cf68a5f7d4b7a984f5;2019-02-13 08:56:37 -0800;- Slightly improved median filter   * don't recompute median from scratch   * inner algorithm - candidate purge of lena
450d12bfaaf0ef117e18f5a2285eb8ad4b0ef7af;2019-02-13 09:57:36 -0800;- tests for median   * turns out median didn't have a proper test for U8 images
819a1988e0701bf0a55a8af848ba3221f07c9c22;2019-02-13 17:43:24 -0800;ImageBandMath: Renamed Projection Math to ImageBandMath and added copyright notice.
f39b838af2bf8eae28048cd4e3e23502726f728d;2019-02-13 21:41:08 -0800;- lots and lots of concurrency related changes - unit tests - made internal working memory accessible - renamed stuff in PixelMath   * PixelMath is now threaded
546c1ef20a7ffaa62c0495e0bbcc85ad81a8a06a;2019-02-14 10:19:58 -0800;- Create boofcv-types module   * All common data types that are widely used (e.g. images) go here   * generate no longer has to depend on image processing
f8929d5b5ed0a3c7a1f98a294cddb709dd04d557;2019-02-14 16:54:30 -0800;- laplacian tests
8184f2cc381a7209f2db33d9c3aedaff138f7155;2019-02-14 17:01:28 -0800;Merge pull request #116 from nicost/projections
d60c18d5234eee487729dec6b05bc0922c315de3;2019-02-14 17:01:34 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
1eee7184bcfae7ecf3224f78fc790f5a00f185bf;2019-02-14 19:13:22 -0800;- split interface and implementation code for ImageBandMath - created generator for ImplImageBandMath
9c8d793ceae955ce45a036120fa4d9cab339ebca;2019-02-15 20:10:49 -0800;- concurrent stuff   * interpolate has newInstance() instead of isThreadSafe()   * orientation has newInstance() for future use   * non max is now multi threaded
1d9d60db562ffb91a5e238768c02b3b3b071a6c6;2019-02-15 21:16:08 -0800;- removed more isThreadSafe() and converted into copy() - renamed newInstance() to copy() in some situations - moved unit tests into correct module
945d70f343579c4aea6ce8ca5b20d7889b0bbb1d;2019-02-15 21:42:06 -0800;- fixed a bug in ImageBandMath - rewrote TestImageBandMath to compare output to ImplImageBandMath - undid previous change to parameter order of stdDev
34b6f35c949f560fa722b8d5a6fe06d7e4ab0131;2019-02-15 21:45:08 -0800;- fixed build errors
1f40ce237b8e70399b3e0785990cfbb3d353bcb3;2019-02-15 23:36:29 -0800;- concurrent ConvertImage
e6854b05aa1b786ea4f4a1713cae2ad47fb823b5;2019-02-16 10:10:54 -0800;- AutocodeConcurrentApp now changes class name throughout the file - CodeGeneratorBase has overwrite mode - Concurrent versions of local thresholding
9e885df5f7e8a622fbb9c8282a4a4eec3f563dd6;2019-02-16 15:04:46 -0800;- multithreaded block threshold   * min-max is failing a unit test. not sure why
19433b18dd14e5648cf5136882ccda7ec1b05772;2019-02-16 16:05:55 -0800;- fixed bug
ef2e8305c18c9560fc83afa43eaa8bf17efa500f;2019-02-16 18:24:35 -0800;- minor update
0a6f0defc1a05e0fdd82a7e85c6b3d1e16aa4f7d;2019-02-16 19:09:41 -0800;- unit tests
f195f87e6d25a5412f923dbb91f24945704316c5;2019-02-16 20:57:13 -0800;ImageBandMath: added code generator for ImageBandMath
915cd5d352f863c0afef47fe13761d8611160f9d;2019-02-17 04:47:29 -0800;- Removed band average from pixel math - Unit test stuff
57aa9254760855a5e252e34afed44761a36904d0;2019-02-17 04:49:36 -0800;- fixed bug I introduced to image band math - made CodeGeneratorBase smarter and will not overwrite if not in module
372e37ae7659ce546f7b39cf786a29588f743c82;2019-02-17 05:05:10 -0800;- fixed missing //CONCURRENT statement
df1f139c0e9739d89ecf3ff3ba5c09ba646c62da;2019-02-17 20:25:14 -0800;Added ImplIMageBandMath to AutocodConcurrentApp
267d78e66b4f315fa1b39a1af1cd191a874f434b;2019-02-18 11:01:18 -0800;Fix bug in implementation of multi-threaded median band projection
f1024c1434bd8dd94d2638b69ef26366f835273b;2019-02-18 11:01:59 -0800;Remove unused function in TestImplImageBandMath
66360de3ea6407a6f4c46648910bdc029eda3c0a;2019-02-18 11:45:05 -0800;ImageBandMath now calls MT code when appropriated. Also adds testing of MT BandMath by comparing results against ST code path.
c3f159a523ea4430bf2fe4e50f334dca0e4ad77b;2019-02-20 06:04:39 -0800;- finished ImplPixelmath_MT tests
d82c1850be53454c53b82fc9b32c2791a66bef28;2019-02-20 16:47:58 -0800;Merge ImageBandMath and SNAPSHOT branches.  Resolves multiple conflicts mostly by taking the code from ImageBandMath.
e9d0f52c742fea372d9656a7f8d4bd8c658ad22b;2019-02-20 20:31:44 -0800;- orientation copy unit tests - fixed orientation copy implementations - fixed PixelMath related unit tests for recent changes where a function was deleted
f4598eb2431bc4d3a77cb1c13ddfd2b5b17f4d9f;2019-02-21 09:54:33 -0800;TestImpImageBandMath: increase image size, and remove unneeded setting of variable BoofConcurrency.USE_CONCURRENT
a566382f363b0475331d482b29349af36e3030e9;2019-02-21 19:15:17 -0800;- more unit tests - added missing functions to GImageThresholdOps
c982b5f9927ef099a234c1e04eec02aad3278294;2019-02-21 20:29:57 -0800;- reduced code in tests for ImageBandMath - got rid of warnings for unknown functions - fixed issue that was fixed in a future commit by nicost that got reverted
6dfb72a8945abe2bac2e029340c3760f5e7c30ea;2019-02-21 20:30:16 -0800;Merge branch 'SNAPSHOT' into nicost/imageBandMath
9e1142ec638dfcec3be90ebca234a8118ec19df0;2019-02-22 14:42:53 -0800;ImageBandMath Test: small changes so that the actual average is used in calculation of the standard deviation.
91e026dd7d6696a530abec709586a81b3cee56bc;2019-02-22 17:37:36 -0800;Merge pull request #121 from lessthanoptimal/nicost/imageBandMath
53abe28ace83a03580f60b161e9739fcf4f86700;2019-02-22 17:40:08 -0800;- more MT unit tests
bc88ad8d2caf29b63a760435f1a27f76e4f75702;2019-02-22 18:44:21 -0800;- removed jmh plugin that was doing nothing.   * wasn't using it correctly and I don't want to rename benchmark directory to jmh - Added benchmark for ImageBandMath - Small improvement to ImageBandMath.median() where it takes advantage of the previous sort
7f2d56ad82049e1a3916bafbd641a4b4c4e47aac;2019-02-22 18:45:08 -0800;shouldn't have comited the commented out code
6ecad7a83904f22f760fd4c034ae42ae4db4f66c;2019-02-22 20:21:30 -0800;- fixed issue with MT block threshold
d795207b7b148714beb2fe74a647b8876d398e85;2019-02-23 07:43:37 -0800;- WIP for SSD corner rework for concurrency
285247ca39c24579eeb4ef8ea8c9679ba7aa9f48;2019-02-23 09:06:16 -0800;- finished parallelizing SsdCorner algs   * need to finish unit tests
96768b14bf54fb3e9e2fd8e771fbcc9d4218f8d4;2019-02-23 09:29:38 -0800;- fixed build
46b29b2908b52056de16befc55e3654449164ce2;2019-02-23 13:11:07 -0800;- made ConvertBufferedImage concurrent
613de5820f6e013b23025f5dda35f63d1fcaf2cb;2019-02-23 14:31:36 -0800;fixed concurrent block mean threshold
4f6bc602ef628b95beba0e47b2f6ee509d9c9eb0;2019-02-23 17:07:59 -0800;unit tests and fixes for SsdCorner
1114a8a168bed9c01d75521d24fe8b52f8efc842;2019-02-23 18:53:51 -0800;- unit tests and refactoring names
18c1af0d721538d22836bd1c254c285c45e5c783;2019-02-23 19:01:42 -0800;- renamed concurrency functions for readability
e688dd43634c38e1374c5b40f478da69812a9a70;2019-02-25 16:57:08 -0800;- concurrent code for ImageStatistics   * WIP - Updated for changes in ddogleg
7505cc5f140271409288dd53179dfe05ca49298a;2019-02-25 18:28:58 -0800;- Created BenchmarkImageStatistics - Modified ForkJoinTask implementations so that the first task spawns all the others   * Avoid exceeding re-entrant lock limits
b9f3db0a21592320dde380651f7427e55addfd32;2019-02-25 19:02:00 -0800;- fixed miss configured benchmark
6dcc275315589b45a3496c42482f7acf004ea6a7;2019-02-25 21:52:10 -0800;- Three View Stereo   * Selects best pair automatically for stereo processing. Before it was always image 0 and 1.
9cffbd7fb4b75c6bc40fdf152276a7c9a457b8a4;2019-02-26 19:08:24 -0800;- fix for unbounded growth of tracks in DDA tracker
0d9e2c2f09bb530c4a6947696b80b0056caafd2b;2019-02-28 17:27:14 -0800;- QR Code   * user can specify default byte encoding
12f5e81b8d74abc1f631e38ea7e9578bcacb1355;2019-02-28 18:01:30 -0800;- Added another mode to batch downsize
81583c6760d0e691e2ebacdb2e569bb61f5567cd;2019-03-01 18:24:52 -0800;- autocode concurrent now works by directory - color space conversion is MT now
f83975ad5e344062e81e9c8392ce9c2ff904ae49;2019-03-01 20:32:12 -0800;Yuv420_888 updated for potential conversion into concurrent algorithm   * first attempt failed due to index in processor   * need to synchronize will limit how effective parallelization works
e337fb20f919abac97f82d58cff04208a5161b56;2019-03-01 22:29:43 -0800;threading for histogram enhance
33a3068cb2ae59d338ff039d7181d739ee56960b;2019-03-02 09:02:36 -0800;- more image enhance MT changes
745c39eebbf4dccf75ed57b12081e2ca59cc3250;2019-03-02 09:22:55 -0800;- color MT unit tests
46681fda8e56867760c503514f5f9212f2fc4d47;2019-03-02 10:57:39 -0800;ImageStatistics unit tests
6f6e56fcb5d44213fafcb769378bb1c6e1a085b7;2019-03-02 15:51:38 -0800;- fixed missing recycle
cfdf3feda886c60f864f08bd8978798844dbe02b;2019-03-02 18:57:32 -0800;- MT image histogram
6ec2b07817d686a42436472a863013fd21c9e3d1;2019-03-05 09:01:06 -0800;- reshape instead of throwing exceptions for output
5b801bb32122f60560bb0502c037d9c1b1eac88d;2019-03-06 15:03:46 -0800;WIP Conic -> homography
d4d77bd1224f4e38fa820efb2261181a55808406;2019-03-06 15:05:18 -0800;Merge branch 'SNAPSHOT' of https://github.com/lessthanoptimal/BoofCV into SNAPSHOT
3045747be9b34d7363b6c0c4ab07a25e5fbf6bf6;2019-03-07 13:51:49 -0800;- finished improved homography DLT   * Estimated homography using conics
0c2c9f2d95b39fb6ac9f43ddd9a019eb9e495619;2019-03-07 18:35:18 -0800;WIP Conic -> homography
0967bb6f2d0b1b529c735f5fbf74bc3be620597d;2019-03-07 19:24:06 -0800;- Fixed issue with new QR Code version by size code   * True Positive went from 864 to 891 / 1203   * Summary time from 29.5s to 28.5s
45b87e64d7dd61dd4ea29fbf51fb212eb06a5b84;2019-03-07 21:00:18 -0800;- concurrent image encoding
ca6610ab1c2ea732b4cdcf363032bd434e7008ee;2019-03-07 21:30:22 -0800;unit test and benchmark for convert NV21
2f3c3ceedd2f9a7a9709ac578c3da6e01ecf455c;2019-03-08 06:46:06 -0800;- turned concurrency on by default since most users will want it that way
cbe939d43f4b01ebc12f9828e48d5c6109e34f1b;2019-03-08 11:06:43 -0800;- turned on concurrency by default - modified unit tests to handle the order of results no longer being deterministic.
9685b2fe1e8b9b5433e46adf99cbfd2e14051510;2019-03-10 21:16:52 -0700;- more informative error message
b66b34880ccff95790b790205fb3f88234dce919;2019-03-11 08:04:56 -0700;- fixed location of alignment patterns along y-axis
90db710120824df1589963d9435625e49d19c550;2019-03-11 08:24:44 -0700;- forgot to add comment to change log
1d5eb6297b626cdc3763eecd13fdf8582e0b3edf;2019-03-11 22:27:02 -0700;- Added missing ConvertImage functions
d0af6284ffc35dfaab07acb541f7a464cb9f4752;2019-03-12 07:55:55 -0700;- added contour print for list of 2D points - can specify stroke width for contours
e6e42ded79abfc1a9efdf4b87a736be3691e50d4;2019-03-12 17:57:48 -0700;- threshold demo now lets you zoom and shows processing time
5d155f8b8a268704b5ec77ae0f0363c86e947967;2019-03-12 19:43:44 -0700;- fixed (almost) infinite loop if qr code is too big for the page
778fbccdfeaa0f87029c2c31cfebe5083e9ad01f;2019-03-13 11:08:44 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
a4391257cb9b91b7b19a58508a30d2d670396953;2019-03-13 19:38:22 -0700;- Error dialog is shown in the user attempts to print a marker which is too big
d732148d97c6dda835b6961b6e4ee6e257e792a5;2019-03-13 20:30:22 -0700;- thread example
3ed55ce5ebf9d5e176cf61888ef9e0048ec5948a;2019-03-13 20:49:07 -0700;- fixed unit tests
ad5949dbb0709202f75613a0aeed20d2ea8ddfa6;2019-03-13 20:49:25 -0700;Merge branch 'SNAPSHOT' of github.com:lessthanoptimal/BoofCV into SNAPSHOT
459ede9f6a2a64e226515a768ae81e8fc934fadc;2019-03-14 17:02:35 -0700;- fixed incorrectly named examples
789a812af774d6f0c4ee6d69a12f4fc3541ac368;2019-03-14 18:51:53 -0700;- fixed overlay in image classification panel - turned off concurrency in some examples to make results repeatable
3bfab80d40b2622b403caa37907c0bda6a0a050d;2019-03-14 18:58:54 -0700;- fixed reset button - switch to georegression stable
326907dadf23e9fcc31554a338145166dc0feb96;2019-03-14 19:14:24 -0700;- candidate for 0.33
a51232c280d7af8215d1c4ed9ea9953c9b54ee39;2019-03-14 19:16:39 -0700;- fixed regression
57f1149d76d2fd710f664168c2f46b5841e17038;2019-03-14 19:42:38 -0700;- another candidate for 0.33